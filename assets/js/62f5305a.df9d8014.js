"use strict";(self.webpackChunkarchetype_docs=self.webpackChunkarchetype_docs||[]).push([[6450],{1519:(e,t,n)=>{n.d(t,{Z:()=>f});var a=n(3366),i=n(7462),r=n(7294),o=n(6010),l=n(7192),s=n(1796),c=n(2110),p=n(1539),d=n(8979);function m(e){return(0,d.Z)("MuiDivider",e)}(0,n(6087).Z)("MuiDivider",["root","absolute","fullWidth","inset","middle","flexItem","light","vertical","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","wrapper","wrapperVertical"]);var h=n(5893);const u=["absolute","children","className","component","flexItem","light","orientation","role","textAlign","variant"],k=(0,c.ZP)("div",{name:"MuiDivider",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.absolute&&t.absolute,t[n.variant],n.light&&t.light,"vertical"===n.orientation&&t.vertical,n.flexItem&&t.flexItem,n.children&&t.withChildren,n.children&&"vertical"===n.orientation&&t.withChildrenVertical,"right"===n.textAlign&&"vertical"!==n.orientation&&t.textAlignRight,"left"===n.textAlign&&"vertical"!==n.orientation&&t.textAlignLeft]}})((({theme:e,ownerState:t})=>(0,i.Z)({margin:0,flexShrink:0,borderWidth:0,borderStyle:"solid",borderColor:e.palette.divider,borderBottomWidth:"thin"},t.absolute&&{position:"absolute",bottom:0,left:0,width:"100%"},t.light&&{borderColor:(0,s.Fq)(e.palette.divider,.08)},"inset"===t.variant&&{marginLeft:72},"middle"===t.variant&&"horizontal"===t.orientation&&{marginLeft:e.spacing(2),marginRight:e.spacing(2)},"middle"===t.variant&&"vertical"===t.orientation&&{marginTop:e.spacing(1),marginBottom:e.spacing(1)},"vertical"===t.orientation&&{height:"100%",borderBottomWidth:0,borderRightWidth:"thin"},t.flexItem&&{alignSelf:"stretch",height:"auto"})),(({theme:e,ownerState:t})=>(0,i.Z)({},t.children&&{display:"flex",whiteSpace:"nowrap",textAlign:"center",border:0,"&::before, &::after":{position:"relative",width:"100%",borderTop:`thin solid ${e.palette.divider}`,top:"50%",content:'""',transform:"translateY(50%)"}})),(({theme:e,ownerState:t})=>(0,i.Z)({},t.children&&"vertical"===t.orientation&&{flexDirection:"column","&::before, &::after":{height:"100%",top:"0%",left:"50%",borderTop:0,borderLeft:`thin solid ${e.palette.divider}`,transform:"translateX(0%)"}})),(({ownerState:e})=>(0,i.Z)({},"right"===e.textAlign&&"vertical"!==e.orientation&&{"&::before":{width:"90%"},"&::after":{width:"10%"}},"left"===e.textAlign&&"vertical"!==e.orientation&&{"&::before":{width:"10%"},"&::after":{width:"90%"}}))),g=(0,c.ZP)("span",{name:"MuiDivider",slot:"Wrapper",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.wrapper,"vertical"===n.orientation&&t.wrapperVertical]}})((({theme:e,ownerState:t})=>(0,i.Z)({display:"inline-block",paddingLeft:`calc(${e.spacing(1)} * 1.2)`,paddingRight:`calc(${e.spacing(1)} * 1.2)`},"vertical"===t.orientation&&{paddingTop:`calc(${e.spacing(1)} * 1.2)`,paddingBottom:`calc(${e.spacing(1)} * 1.2)`}))),f=r.forwardRef((function(e,t){const n=(0,p.Z)({props:e,name:"MuiDivider"}),{absolute:r=!1,children:s,className:c,component:d=(s?"div":"hr"),flexItem:f=!1,light:y=!1,orientation:b="horizontal",role:w=("hr"!==d?"separator":void 0),textAlign:v="center",variant:_="fullWidth"}=n,N=(0,a.Z)(n,u),C=(0,i.Z)({},n,{absolute:r,component:d,flexItem:f,light:y,orientation:b,role:w,textAlign:v,variant:_}),x=(e=>{const{absolute:t,children:n,classes:a,flexItem:i,light:r,orientation:o,textAlign:s,variant:c}=e,p={root:["root",t&&"absolute",c,r&&"light","vertical"===o&&"vertical",i&&"flexItem",n&&"withChildren",n&&"vertical"===o&&"withChildrenVertical","right"===s&&"vertical"!==o&&"textAlignRight","left"===s&&"vertical"!==o&&"textAlignLeft"],wrapper:["wrapper","vertical"===o&&"wrapperVertical"]};return(0,l.Z)(p,m,a)})(C);return(0,h.jsx)(k,(0,i.Z)({as:d,className:(0,o.Z)(x.root,c),role:w,ref:t,ownerState:C},N,{children:s?(0,h.jsx)(g,{className:x.wrapper,ownerState:C,children:s}):null}))}))},5861:(e,t,n)=>{n.d(t,{Z:()=>b});var a=n(3366),i=n(7462),r=n(7294),o=n(6010),l=n(9707),s=n(7192),c=n(2110),p=n(1539),d=n(8216),m=n(8979);function h(e){return(0,m.Z)("MuiTypography",e)}(0,n(6087).Z)("MuiTypography",["root","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","button","caption","overline","alignLeft","alignRight","alignCenter","alignJustify","noWrap","gutterBottom","paragraph"]);var u=n(5893);const k=["align","className","component","gutterBottom","noWrap","paragraph","variant","variantMapping"],g=(0,c.ZP)("span",{name:"MuiTypography",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.variant&&t[n.variant],"inherit"!==n.align&&t[`align${(0,d.Z)(n.align)}`],n.noWrap&&t.noWrap,n.gutterBottom&&t.gutterBottom,n.paragraph&&t.paragraph]}})((({theme:e,ownerState:t})=>(0,i.Z)({margin:0},t.variant&&e.typography[t.variant],"inherit"!==t.align&&{textAlign:t.align},t.noWrap&&{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},t.gutterBottom&&{marginBottom:"0.35em"},t.paragraph&&{marginBottom:16}))),f={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",subtitle1:"h6",subtitle2:"h6",body1:"p",body2:"p",inherit:"p"},y={primary:"primary.main",textPrimary:"text.primary",secondary:"secondary.main",textSecondary:"text.secondary",error:"error.main"},b=r.forwardRef((function(e,t){const n=(0,p.Z)({props:e,name:"MuiTypography"}),r=(e=>y[e]||e)(n.color),c=(0,l.Z)((0,i.Z)({},n,{color:r})),{align:m="inherit",className:b,component:w,gutterBottom:v=!1,noWrap:_=!1,paragraph:N=!1,variant:C="body1",variantMapping:x=f}=c,T=(0,a.Z)(c,k),Z=(0,i.Z)({},c,{align:m,color:r,className:b,component:w,gutterBottom:v,noWrap:_,paragraph:N,variant:C,variantMapping:x}),A=w||(N?"p":x[C]||f[C])||"span",j=(e=>{const{align:t,gutterBottom:n,noWrap:a,paragraph:i,variant:r,classes:o}=e,l={root:["root",r,"inherit"!==e.align&&`align${(0,d.Z)(t)}`,n&&"gutterBottom",a&&"noWrap",i&&"paragraph"]};return(0,s.Z)(l,h,o)})(Z);return(0,u.jsx)(g,(0,i.Z)({as:A,ref:t,ownerState:Z,className:(0,o.Z)(j.root,b)},T))}))},8216:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n(601).Z},4810:(e,t,n)=>{n.d(t,{Z:()=>l});n(7294);var a=n(4880),i=n(8357),r=n(5893);const o=(0,i.Z)({key:"css",prepend:!0});function l(e){const{injectFirst:t,children:n}=e;return t?(0,r.jsx)(a.C,{value:o,children:n}):n}},6719:(e,t,n)=>{n.d(t,{RP:()=>i,V5:()=>c,w8:()=>l,zO:()=>o});var a=n(7294);const i=[{link:"address",archetype:"address",michelson:"address",ts:"Address"},{link:"asset_container<A>",archetype:"asset",ts:"Array",ts:"Array",native:!0},{link:"big_map<K,%20V>",archetype:"big_map",michelson:"big_map",ts:"Array",native:!0},{link:"bls12_381_fr",archetype:"bls12_381_fr",michelson:"bls12_381_fr",ts:"Bls12_381_fr"},{link:"bls12_381_g1",archetype:"bls12_381_g1",michelson:"bls12_381_g1",ts:"Bls12_381_g1"},{link:"bls12_381_g2",archetype:"bls12_381_g2",michelson:"bls12_381_g2",ts:"Bls12_381_g2"},{link:"bool",archetype:"bool",michelson:"bool",ts:"boolean",native:!0},{link:"bytes",archetype:"bytes",michelson:"bytes",ts:"Bytes"},{link:"chain_id",archetype:"chain_id",michelson:"chain_id",ts:"Chain_id"},{link:"chest",archetype:"chest",michelson:"chest",ts:"Chest"},{link:"chest_key",archetype:"chest_key",michelson:"chest_key",ts:"Chest_key"},{link:"contract<T>",archetype:"contract",michelson:"contract",ts:"Entrypoint"},{link:"date",archetype:"date",michelson:"timestamp",ts:"date",native:!0},{link:"duration",archetype:"duration",ts:"Duration"},{link:"enum",archetype:"enum",ts:"class",native:!0},{link:"event",archetype:"event",ts:"Event"},{link:"int",archetype:"int",michelson:"int",ts:"Int"},{link:"iterable_big_map<K,%20V>",archetype:"iterable_big_map",ts:"Array",native:!0},{link:"key",archetype:"key",michelson:"key",ts:"Key"},{link:"key_hash",archetype:"key_hash",michelson:"key_hash",ts:"Key_hash"},{link:"lambda<T,%20R>",archetype:"lambda",michelson:"lambda",ts:"Micheline"},{link:"list<T>",archetype:"list",michelson:"list",ts:"Array",native:!0},{link:"map<K,%20V>",archetype:"map",michelson:"map",ts:"Array",native:!0},{link:"nat",archetype:"nat",michelson:"nat",ts:"Nat"},{link:"option<T>",archetype:"option",michelson:"option",ts:"Option"},{link:"or<T1,%20T2>",archetype:"or",michelson:"or",ts:"Or"},{link:"rational",archetype:"rational",ts:"Rational"},{link:"record",archetype:"record",ts:"class",native:!0},{link:"sapling_state(n)",archetype:"sapling_state",michelson:"sapling_state",ts:"Sapling_state"},{link:"sapling_transaction(n)",archetype:"sapling_transaction",michelson:"sapling_transaction",ts:"Sapling_transaction"},{link:"set<T>",archetype:"set",michelson:"set",ts:"Array",native:!0},{link:"signature",archetype:"signature",michelson:"signature",ts:"Signature"},{link:"string",archetype:"string",michelson:"string",ts:"string",native:!0},{link:"tez",archetype:"tez",michelson:"mutez",ts:"Tez"},{link:"ticket<T>",archetype:"ticket",michelson:"ticket",ts:"Ticket"},{link:"tuple",archetype:"tuple",michelson:"pair",ts:"Array",native:!0},{link:"unit",archetype:"unit",michelson:"unit",ts:"Unit"}],r="/docs/tests/apis/experiment#",o=[{label:"set_mockup_now",link:r+"set_mockup_nowd",desc:a.createElement("div",null,"Sets mockup now value.")},{label:"delay_mockup_now_by_day",link:r+"delay_mockup_now_by_dayv",desc:a.createElement("div",null,"Delays mockup now value by a number of days.")},{label:"delay_mockup_now_by_minute",link:r+"delay_mockup_now_by_minutev",desc:a.createElement("div",null,"Delays mockup now by a number of minutes.")},{label:"delay_mockup_now_by_hour",link:r+"delay_mockup_now_by_hourv",desc:a.createElement("div",null,"Delays mockup now by a number of hours.")},{label:"delay_mockup_now_by_second",link:r+"delay_mockup_now_by_secondv",desc:a.createElement("div",null,"Delays mockup now by a number of seconds.")},{label:"delay_mockup_now_by_week",link:r+"delay_mockup_now_by_weekv",desc:a.createElement("div",null,"Delays mockup now by a number of weeks.")},{label:"get_mockup_now",link:r+"get_mockup_now",desc:a.createElement("div",null,"Gets mockup now value.")}],l=[{label:"blake2b",link:r+"blake2bb",desc:a.createElement("div",null,"Hashes bytes data accourding to blake2b algorithm.")},{label:"sign",link:r+"signb-a",desc:a.createElement("div",null,"Signs packed data.")},{label:"pack",link:r+"packo-t",desc:a.createElement("div",null,"Packs bytes data.")},{label:"transfer",link:r+"transferf-t-a",desc:a.createElement("div",null,"Transfers tez from one account to another.")}],s="/docs/tests/apis/types#",c=[{label:"date_cmp",link:s+"cmp_datea-b",desc:a.createElement("div",null,"Compares javascript dates at second precision (as Tezos dates are).")},{label:"is_left",link:s+"is_leftv",desc:a.createElement("div",null,"Tests whether a Micheline ",a.createElement("code",null,"or")," value is ",a.createElement("code",null,"left"),".")},{label:"is_right",link:s+"is_rightv",desc:a.createElement("div",null,"Tests whether a Micheline ",a.createElement("code",null,"or")," value is ",a.createElement("code",null,"right"),".")}]},6457:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(7294),i=n(9960),r=n(6886),o=n(1519),l=n(5861),s=n(4810),c=n(2321);const p=e=>a.createElement(r.ZP,{item:!0,container:!0,xs:12},1==e.divider?a.createElement(r.ZP,{item:!0,xs:12},a.createElement(o.Z,{className:c.Z.divider,style:{marginBottom:"8px",marginTop:"4px"}})):a.createElement("div",null),a.createElement(r.ZP,{item:!0,xs:12,sm:e.xs,md:e.xs,style:{paddingLeft:"8px"}},null==e.data.link?a.createElement("code",null,e.data.label):a.createElement(i.Z,{to:e.data.link},a.createElement("code",null,e.data.label))),a.createElement(r.ZP,{item:!0,xs:12,sm:12-e.xs,md:12-e.xs,style:{paddingLeft:"8px",marginBottom:"8px"}},a.createElement(l.Z,{style:{fontFamily:"IBM Plex Sans"}},e.data.desc)));function d(e){const t=null==e.xs?3:e.xs;return a.createElement(s.Z,{injectFirst:!0},a.createElement(r.ZP,{container:!0},a.createElement(r.ZP,{item:!0,style:{paddingLeft:"8px"}},a.createElement(l.Z,{style:{fontFamily:"IBM Plex Sans",color:"grey"}},e.title)),e.data.map(((n,i)=>a.createElement(p,{divider:i>0||0==i&&e.title.length>0,data:n,xs:t})))))}},5786:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var a=n(7462),i=(n(7294),n(3905)),r=n(6457),o=n(6719);const l={sidebar_position:2,sidebar_label:"Writing Tests"},s="Writing Tests",c={unversionedId:"tests/writingtests",id:"tests/writingtests",title:"Writing Tests",description:"This section presents the main technical elements to setup, write and run tests.",source:"@site/docs/tests/writingtests.md",sourceDirName:"tests",slug:"/tests/writingtests",permalink:"/docs/tests/writingtests",draft:!1,editUrl:"https://github.com/completium/archetype-docs/blob/main/docs/tests/writingtests.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Writing Tests"},sidebar:"tests",previous:{title:"Framework",permalink:"/docs/tests/framework"},next:{title:"Binding",permalink:"/docs/tests/binding"}},p={},d=[{value:"Project",id:"project",level:2},{value:"Create project",id:"create-project",level:3},{value:"Generate binding",id:"generate-binding",level:3},{value:"Run tests",id:"run-tests",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Network",id:"network",level:3},{value:"Account",id:"account",level:3},{value:"Now",id:"now",level:3},{value:"Quiet mode",id:"quiet-mode",level:3},{value:"Test structure",id:"test-structure",level:2},{value:"Failing test",id:"failing-test",level:2},{value:"Batch",id:"batch",level:2},{value:"Utils",id:"utils",level:2}],m={toc:d};function h(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"writing-tests"},"Writing Tests"),(0,i.kt)("p",null,"This section presents the main technical elements to setup, write and run tests."),(0,i.kt)("h2",{id:"project"},"Project"),(0,i.kt)("h3",{id:"create-project"},"Create project"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/cli/introduction"},"Completium CLI")," provides the ",(0,i.kt)("inlineCode",{parentName:"p"},"create project")," command to set up a simple project with contracts and tests."),(0,i.kt)("p",null,"The command below creates a project named ",(0,i.kt)("inlineCode",{parentName:"p"},"myproject"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-completium"},"completium-cli create project myproject\n")),(0,i.kt)("p",null,"This creates the ",(0,i.kt)("inlineCode",{parentName:"p"},"myproject")," directory with the following structure:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"myproject\n\u251c\u2500\u2500 contracts\n\u2502\xa0\xa0 \u2514\u2500\u2500 hello.arl\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 tests\n\u2502\xa0\xa0 \u2514\u2500\u2500 00-test-hello.ts\n\u2514\u2500\u2500 tsconfig.json\n")),(0,i.kt)("p",null,"The project comes with a default contract ",(0,i.kt)("inlineCode",{parentName:"p"},"hello.arl")," and its test ",(0,i.kt)("inlineCode",{parentName:"p"},"00-test-hello.ts"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," contains the declaration of required packages. They are installed with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-completium"},"$ cd myproject\n$ npm i\n")),(0,i.kt)("p",null,"Note that there are 2 directories of interest:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"contracts")," to store smart contracts (Archetype or Michelson)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tests")," to store tests (Typescript)")),(0,i.kt)("h3",{id:"generate-binding"},"Generate binding"),(0,i.kt)("p",null,"A contract's ",(0,i.kt)("a",{parentName:"p",href:"/docs/tests/framework#contract-binding"},"binding")," is generated automatically for each contract found in ",(0,i.kt)("inlineCode",{parentName:"p"},"contracts")," directory. A binding is a typescript object that reflects the contract interface to interact with it in read/write modes."),(0,i.kt)("p",null,"The following command generates one binding file per contract (Archetype or Michelson) found in ",(0,i.kt)("inlineCode",{parentName:"p"},"contracts")," directory:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-completium"},"npm run gen-binding\n")),(0,i.kt)("p",null,"In the default setup, this generates the file ",(0,i.kt)("inlineCode",{parentName:"p"},"hello.ts")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"tests/binding/")," directory from ",(0,i.kt)("inlineCode",{parentName:"p"},"hello.arl")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"contracts")," directory."),(0,i.kt)("p",null,"These values are defined in the ",(0,i.kt)("inlineCode",{parentName:"p"},'"completium"')," section of the ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'"completium": {\n  "binding_path": "./tests/binding/",\n  "build_path": "./build/",\n  "contracts_path": "./contracts/",\n  "tests_path": "./tests/"\n}\n')),(0,i.kt)("p",null,"Modify these values to adapt to your setup."),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Bindings need to be generated with the above command everytime the contract interface is modified (storage, entries, views, error messages)")),(0,i.kt)("h3",{id:"run-tests"},"Run tests"),(0,i.kt)("p",null,"The following command executes tests found in ",(0,i.kt)("inlineCode",{parentName:"p"},"tests")," directory:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-completium"},"npm run test\n")),(0,i.kt)("p",null,"This executes tests in ",(0,i.kt)("inlineCode",{parentName:"p"},"00-test-hello.ts")," file and generates the following output:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-completium"},"> ts-mocha --timeout 0 --slow 99999999 ./tests/*.ts\n\n  [HELLO] Contract deployment\n    \u2714 Deploy test_binding\n\n  [HELLO] Call entry\n    \u2714 Call 'myentry'\n\n  2 passing (2s)\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"test")," command is defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," as:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'"scripts" : {\n  "test": "ts-mocha --timeout 0 --slow 99999999 ./tests/*.ts"\n}\n')),(0,i.kt)("p",null,"Note that It is possible to create a new rule in the ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts")," section to run a specific test file."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("em",{parentName:"p"},"mockup")," mode must be initialised with the ",(0,i.kt)("inlineCode",{parentName:"p"},"completium-cli mockup init")," command for the ",(0,i.kt)("inlineCode",{parentName:"p"},"test")," command to run. More information ",(0,i.kt)("a",{parentName:"p",href:"/docs/cli/network#mockup-init"},"here"),".")),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"By default, the global Completium CLI configuration (network, account, quiet mode, ...) is used by a test. It is possible to overwrite the configuration with dedicated functions from ",(0,i.kt)("inlineCode",{parentName:"p"},"@completium/experiment-ts")," package."),(0,i.kt)("h3",{id:"network"},"Network"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"set_mockup")," function set the mockup mode."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { set_mockup } from "@completium/experiment-ts"\n\nset_mockup()\n')),(0,i.kt)("p",null,"Another network (sandbox, test) may be set with the ",(0,i.kt)("inlineCode",{parentName:"p"},"set_network")," function."),(0,i.kt)("h3",{id:"account"},"Account"),(0,i.kt)("p",null,"Calling a contract's entry point require to specify the caller account. An account is declared with Completium CLI (see ",(0,i.kt)("a",{parentName:"p",href:"/docs/cli/account"},"here")," for information). An account is referred to with an alias."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"get_account")," function returns a Completium account from its alias."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { get_account } from \"@completium/experiment-ts\"\n\nconst alice = get_account('alice')\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The mockup mode comes with a set of 8 predefined accounts ready to use for test purposes:\n",(0,i.kt)("inlineCode",{parentName:"p"},"alice")," ",(0,i.kt)("inlineCode",{parentName:"p"},"bob")," ",(0,i.kt)("inlineCode",{parentName:"p"},"carl")," ",(0,i.kt)("inlineCode",{parentName:"p"},"bootstrap1")," ",(0,i.kt)("inlineCode",{parentName:"p"},"bootstrap2")," ",(0,i.kt)("inlineCode",{parentName:"p"},"bootstrap3")," ",(0,i.kt)("inlineCode",{parentName:"p"},"bootstrap4")," ",(0,i.kt)("inlineCode",{parentName:"p"},"bootstrap5"))),(0,i.kt)("h3",{id:"now"},"Now"),(0,i.kt)("p",null,"When contract logic relies on the ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/expressions/constants#now"},(0,i.kt)("inlineCode",{parentName:"a"},"now"))," value, test scenarios require to change its value. The ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@completium/experiment-ts"},(0,i.kt)("inlineCode",{parentName:"a"},"@completium/experiment-ts"))," package provides with the following utility functions:"),(0,i.kt)(r.Z,{title:"Now utilities",data:o.zO,xs:4,mdxType:"Api"}),(0,i.kt)("br",null),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"These utility functions are ",(0,i.kt)("em",{parentName:"p"},"only")," available in mockup mode.")),(0,i.kt)("h3",{id:"quiet-mode"},"Quiet mode"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"set_quiet")," function switchs on or off the quiet mode. When set to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),", the output of the tezos-client (in mockup mode) is displayed with detailed information, like gas consumption and storage diffs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { set_quiet } from "@completium/experiment-ts"\n\nset_quiet(true)\n')),(0,i.kt)("h2",{id:"test-structure"},"Test structure"),(0,i.kt)("p",null,"The default project created with ",(0,i.kt)("a",{parentName:"p",href:"/docs/tests/writingtests#create-project"},(0,i.kt)("inlineCode",{parentName:"a"},"create project"))," command uses the ",(0,i.kt)("a",{parentName:"p",href:"https://mochajs.org/"},"Mocha")," test package. You are free to install and use any other testing framework, like ",(0,i.kt)("a",{parentName:"p",href:"https://jestjs.io/docs/getting-started"},"Jest"),"."),(0,i.kt)("p",null,"In the Mocha testing framework, the ",(0,i.kt)("inlineCode",{parentName:"p"},"describe")," function is used to group together related tests. It takes two arguments: a string description of the test group, and a callback function that contains the individual tests or further nested ",(0,i.kt)("inlineCode",{parentName:"p"},"describe")," blocks."),(0,i.kt)("p",null,"Here is an example of how ",(0,i.kt)("inlineCode",{parentName:"p"},"describe")," is used:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"describe('A group of tests', function() {\n  // Test cases go here\n})\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," function is used to define a single test case within a ",(0,i.kt)("inlineCode",{parentName:"p"},"describe")," block. It takes two arguments: a string description of the test, and a callback function containing the code for the test."),(0,i.kt)("p",null,"Here is an example of how ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," is used:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"describe('A group of tests', function() {\n  it('should do something', function() {\n    // Test code goes here\n  })\n})\n")),(0,i.kt)("p",null,"Together, ",(0,i.kt)("inlineCode",{parentName:"p"},"describe")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," are used to structure and organize your tests in Mocha. The ",(0,i.kt)("inlineCode",{parentName:"p"},"describe")," function is used to group together related tests, while the ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," function is used to define individual test cases."),(0,i.kt)("p",null,"For example, the following example from ",(0,i.kt)("inlineCode",{parentName:"p"},"00-test-hello.ts")," :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'describe(\'[HELLO] Call entries\', async () => {\n  it("Call \'exec\'", async () => {\n    await hello.exec({ as : alice })\n    const s_after = await hello.get_s()\n    assert(s_after === "Hello Archetype World!")\n  })\n  it("Call \'exec2\'", async () => {\n    await hello.exec2({ as : alice })\n    const s_after = await hello.get_s()\n    assert(s_after === "Hello TS Binding World!")\n  })\n})\n')),(0,i.kt)("p",null,"Then the output looks like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-completium"},"[HELLO] Call entry\n    \u2714 Call 'exec'\n    \u2714 Call 'exec2'\n")),(0,i.kt)("h2",{id:"failing-test"},"Failing test"),(0,i.kt)("p",null,"When the call to a contract's entry point is expected to fail, the function ",(0,i.kt)("inlineCode",{parentName:"p"},"expect_to_fail")," catches the contract error and compares it to the expected one passed in parameter. It fails if the actual error is different from the expected one, or if the contract does not fail."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"expect_to_fail")," function takes two arguments: a callback function that executes the call to the entry point expected to fail, and the expected error."),(0,i.kt)("p",null,"For example, consider the following ",(0,i.kt)("inlineCode",{parentName:"p"},"mint")," entry point of ",(0,i.kt)("inlineCode",{parentName:"p"},"fa2_nft")," contract:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"entry mint(tow : address, tid : nat, tmd: map<string, bytes>) {\n  called by owner\n  effect {\n    /* ... */\n  }\n}\n")),(0,i.kt)("p",null,"The following expects the call to ",(0,i.kt)("inlineCode",{parentName:"p"},"mint")," as ",(0,i.kt)("inlineCode",{parentName:"p"},"bob")," to fail with error ",(0,i.kt)("inlineCode",{parentName:"p"},"INVALID_CALLER"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{12}","{12}":!0},"import { expect_to_fail } from '@completium/experiment-ts'\n\n// ...\n\nit('Mint tokens on FA2 as non owner should fail', async () => {\n  await expect_to_fail(async () => {\n    await fa2_nft.mint(\n      bob.get_address(),      // owner\n      token_id,               // token id\n      [['', new Bytes('')]],  // metadata\n    { as: bob });\n  }, fa2_nft.errors.INVALID_CALLER);\n});\n")),(0,i.kt)("p",null,"Note that the ",(0,i.kt)("a",{parentName:"p",href:"/docs/tests/binding#errors"},(0,i.kt)("inlineCode",{parentName:"a"},"errors"))," field of contract's binding interface is the list of possible errors (here ",(0,i.kt)("inlineCode",{parentName:"p"},"fa2_nft.errors"),")."),(0,i.kt)("h2",{id:"batch"},"Batch"),(0,i.kt)("p",null,"It is possible to batch call contract entry points with the ",(0,i.kt)("a",{parentName:"p",href:"/docs/tests/apis/experiment#exec_batchcps-p"},(0,i.kt)("inlineCode",{parentName:"a"},"exec_batch"))," function. It takes transaction parameters returned by dedicated binding methods as presented ",(0,i.kt)("a",{parentName:"p",href:"/docs/tests/binding#entry-points-parameters"},"here"),"."),(0,i.kt)("h2",{id:"utils"},"Utils"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@completium/experiment-ts"},(0,i.kt)("inlineCode",{parentName:"a"},"@completium/experiment-ts"))," and ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@completium/archetype-ts-types"},(0,i.kt)("inlineCode",{parentName:"a"},"@completium/archetype-ts-types"))," packages the binding generation relies on, also provide some utility functions presented below. See the full packages API ",(0,i.kt)("a",{parentName:"p",href:"/docs/tests/apis/"},"here"),"."),(0,i.kt)(r.Z,{title:"Experiment",data:o.w8,xs:4,mdxType:"Api"}),(0,i.kt)("br",null),(0,i.kt)(r.Z,{title:"Type Utils",data:o.V5,mdxType:"Api"}))}h.isMDXComponent=!0},2321:(e,t,n)=>{n.d(t,{Z:()=>a});const a={divider:"divider_LuCZ",gradient:"gradient_kJ7D"}}}]);