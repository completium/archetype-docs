"use strict";(self.webpackChunkarchetype_docs=self.webpackChunkarchetype_docs||[]).push([[3896],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),h=r,u=d["".concat(l,".").concat(h)]||d[h]||m[h]||o;return n?a.createElement(u,i(i({ref:t},p),{},{components:n})):a.createElement(u,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8337:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return m}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],c={sidebar_position:8},l="External contract",s={unversionedId:"reference/declarations/external-contract",id:"reference/declarations/external-contract",title:"External contract",description:"It is possible to import external Archetype contracts (.arl extension), or contracts compiled in Michelson (.tz extension).",source:"@site/docs/reference/declarations/external-contract.md",sourceDirName:"reference/declarations",slug:"/reference/declarations/external-contract",permalink:"/docs/reference/declarations/external-contract",draft:!1,editUrl:"https://github.com/completium/archetype-docs/blob/main/docs/reference/declarations/external-contract.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"docs",previous:{title:"View",permalink:"/docs/reference/declarations/view"},next:{title:"Types",permalink:"/docs/reference/types"}},p={},m=[{value:"Composite types",id:"composite-types",level:2},{value:"Entrypoint",id:"entrypoint",level:2},{value:"View",id:"view",level:2},{value:"Michelson",id:"michelson",level:2}],d={toc:m};function h(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"external-contract"},"External contract"),(0,o.kt)("p",null,"It is possible to import external Archetype contracts (",(0,o.kt)("inlineCode",{parentName:"p"},".arl")," extension), or contracts compiled in Michelson (",(0,o.kt)("inlineCode",{parentName:"p"},".tz")," extension)."),(0,o.kt)("p",null,"Importing an archetype contract means that the following elements are available in the current contract:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"named composite types (",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/declarations/compositetypes#enum"},"enum"),", ",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/declarations/compositetypes#record"},"record"),", ",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/declarations/compositetypes#event"},"event")," and ",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/instructions/asset"},"asset"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/reference/declarations/entrypoint"},"entrypoints"),"' signatures"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/reference/declarations/view"},"views"),"' signatures"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/reference/declarations/inlined#constant"},"constants")," declarations")),(0,o.kt)("p",null,"When importing a Michelson contract, only entrpoint's signatures are imported."),(0,o.kt)("h2",{id:"composite-types"},"Composite types"),(0,o.kt)("p",null,"In order to use a type declared in a contract, the contract is imported and the type name is prefixed by the imported contract name followed by ",(0,o.kt)("inlineCode",{parentName:"p"},"::"),"."),(0,o.kt)("p",null,"For example, consider the following record declaration in ",(0,o.kt)("inlineCode",{parentName:"p"},"somecontract.arl"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype",metastring:'title="somecontract.arl"',title:'"somecontract.arl"'},"archetype somecontract\n\nrecord person {\n  name : string;\n  age : nat;\n}\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"person")," record may be used in ",(0,o.kt)("inlineCode",{parentName:"p"},"anothercontract.arl")," by importing ",(0,o.kt)("inlineCode",{parentName:"p"},"somecontract"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype",metastring:'title="anothercontract.arl" {7}',title:'"anothercontract.arl"',"{7}":!0},'archetype anothercontract\n\nimport "somecontract.arl"\n\nvariable max_age : nat = 0\n\nentry register(p : somecontract::person) {\n  max_age := max(max_age, p.age)\n}\n')),(0,o.kt)("p",null,"Note that in order to use a type declared in ",(0,o.kt)("inlineCode",{parentName:"p"},"somecontract"),", it is prefixed by ",(0,o.kt)("inlineCode",{parentName:"p"},"somecontract::"),"."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The path is relative to the current importing contract."))),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"somecontract")," contract, the file name and the archetype identifier (id after ",(0,o.kt)("inlineCode",{parentName:"p"},"archetype"),") must be the same!"))),(0,o.kt)("h2",{id:"entrypoint"},"Entrypoint"),(0,o.kt)("p",null,"External contract's entrypoints can be used without specifying their signature. The imported contract handler is passed the contract address, followed by the entrypoint name as illustrated in the following example."),(0,o.kt)("p",null,"Consider the ",(0,o.kt)("inlineCode",{parentName:"p"},"register")," entry declaration in ",(0,o.kt)("inlineCode",{parentName:"p"},"somecontract.arl"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype",metastring:'title="somecontract.arl"',title:'"somecontract.arl"'},"archetype somecontract\n\nasset person {\n  name : string;\n  age : nat;\n}\n\nentry register(n : string, a : nat) {\n  person.add({ n; a })\n}\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"register")," entrypoint may be called in ",(0,o.kt)("inlineCode",{parentName:"p"},"anothercontract.arl")," by importing ",(0,o.kt)("inlineCode",{parentName:"p"},"somecontract"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype",metastring:'title="anothercontract.arl" {9}',title:'"anothercontract.arl"',"{9}":!0},'archetype anothercontract(person_storage : address)\n\nimport "somecontract.arl"\n\nvariable max_age : nat = 0\n\nentry declare(n : string, a : nat) {\n  max_age := max(max_age, a);\n  transfer 0tz to entry somecontract(person_storage).register((n, a))\n}\n')),(0,o.kt)("h2",{id:"view"},"View"),(0,o.kt)("p",null,"External contract's views can be used without specifying their signature. The imported contract handler is passed the contract address, followed by the view name as illustrated in the following example."),(0,o.kt)("p",null,"Consider the ",(0,o.kt)("inlineCode",{parentName:"p"},"get_age_average")," view declaration in ",(0,o.kt)("inlineCode",{parentName:"p"},"somecontract.arl"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype",metastring:'title="somecontract.arl"',title:'"somecontract.arl"'},"archetype somecontract\n\nasset person {\n  name : string;\n  age : nat;\n}\n\nview get_age_average() : rational {\n  return (person.sum(the.age) / person.count())\n}\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"get_age_average")," viexw may be called in ",(0,o.kt)("inlineCode",{parentName:"p"},"anothercontract.arl")," by importing ",(0,o.kt)("inlineCode",{parentName:"p"},"somecontract"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype",metastring:'title="anothercontract.arl" {8}',title:'"anothercontract.arl"',"{8}":!0},'archetype anothercontract(person_storage : address)\n\nimport "somecontract.arl"\n\nvariable max_average : rational = 0.0\n\nentry get_info() {\n  max_average ?:= somecontract(person_storage).get_age_average(Unit) : "ERROR"\n}\n')),(0,o.kt)("h2",{id:"michelson"},"Michelson"),(0,o.kt)("p",null,"It is also possible to import Michelson contract."),(0,o.kt)("p",null,"Consider the following Michelson contract that provides one entrypoint that takes a ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/types#nat"},(0,o.kt)("inlineCode",{parentName:"a"},"nat"))," parameter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype",metastring:'title="simple.tz"',title:'"simple.tz"'},'{ storage nat ;\n  parameter (or (nat %inc) (nat %dec)) ;\n  code { UNPAIR ;\n         IF_LEFT\n           { DUP ;\n             DUP 3 ;\n             ADD ;\n             DIP 1 { SWAP ; DROP 1 } ;\n             SWAP ;\n             DROP 1 ;\n             NIL operation ;\n             PAIR }\n           { PUSH int 0 ;\n             DUP 2 ;\n             INT ;\n             DUP 4 ;\n             SUB ;\n             COMPARE ;\n             GE ;\n             IF { DUP ; INT ; DUP 3 ; SUB ; ABS }\n                { PUSH string "NAT_NEG_ASSIGN" ; FAILWITH } ;\n             DIP 1 { SWAP ; DROP 1 } ;\n             SWAP ;\n             DROP 1 ;\n             NIL operation ;\n             PAIR } } }\n')),(0,o.kt)("p",null,"This contract declares two entrypoints ",(0,o.kt)("inlineCode",{parentName:"p"},"inc")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"dec")," that takes a ",(0,o.kt)("inlineCode",{parentName:"p"},"nat")," value as parameter."),(0,o.kt)("p",null,"The following contract calls these entrypoints:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype",metastring:'title="anothercontract.arl" {3,6-7}',title:'"anothercontract.arl"',"{3,6-7}":!0},'archetype anothercontract(simple_addr : address)\n\nimport simple from "simple.tz"\n\nentry exec () {\n  transfer 0tz to entry simple(simple_addr).inc(3);\n  transfer 0tz to entry simple(simple_addr).dec(2);\n}\n')),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Note that the imported contract is ",(0,o.kt)("em",{parentName:"p"},"named")," (",(0,o.kt)("inlineCode",{parentName:"p"},"simple")," above) when imported from Michelson format."))))}h.isMDXComponent=!0}}]);