"use strict";(self.webpackChunkarchetype_docs=self.webpackChunkarchetype_docs||[]).push([[7854],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>u});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),l=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=l(a),f=n,u=d["".concat(p,".").concat(f)]||d[f]||m[f]||o;return a?r.createElement(u,c(c({ref:t},s),{},{components:a})):r.createElement(u,c({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,c=new Array(o);c[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:n,c[1]=i;for(var l=2;l<o;l++)c[l]=a[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},2999:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:1},c="Archetype contract",i={unversionedId:"reference/declarations/contract",id:"reference/declarations/contract",title:"Archetype contract",description:"An archetype contract starts with the archetype keyword followed by a contract identifier.",source:"@site/docs/reference/declarations/contract.md",sourceDirName:"reference/declarations",slug:"/reference/declarations/contract",permalink:"/docs/reference/declarations/contract",draft:!1,editUrl:"https://github.com/completium/archetype-docs/blob/main/docs/reference/declarations/contract.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"Identifier",permalink:"/docs/reference/declarations/identifier"},next:{title:"Storage",permalink:"/docs/reference/declarations/storage"}},p={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Variable",id:"variable",level:3},{value:"Constant",id:"constant",level:3},{value:"Metadata",id:"metadata",level:2}],s={toc:l};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"archetype-contract"},"Archetype contract"),(0,n.kt)("p",null,"An archetype contract starts with the ",(0,n.kt)("inlineCode",{parentName:"p"},"archetype")," keyword followed by a contract ",(0,n.kt)("a",{parentName:"p",href:"/docs/reference/declarations/identifier"},"identifier"),"."),(0,n.kt)("p",null,"For example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-archetype"},"archetype escrow\n\n/* ... */\n")),(0,n.kt)("admonition",{type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"If generating contract ",(0,n.kt)("a",{parentName:"p",href:"/docs/tests/framework#contract-binding"},"bindings")," for test purposes, it is mandatory that the contract identifier be the same as the contract file name. For example, the identifier for the contract file auction.arl should be auction.")),(0,n.kt)("h2",{id:"parameters"},"Parameters"),(0,n.kt)("p",null,"A contract may have parameters. A parameter value is not in the source code and is provided at deployment (origination) time. For example, the address of the contract owner is typically a contract parameter."),(0,n.kt)("h3",{id:"variable"},"Variable"),(0,n.kt)("p",null,"By default, a contract parameter is an element of the contract storage. It is defined by an ",(0,n.kt)("a",{parentName:"p",href:"/docs/reference/declarations/identifier"},"identifier")," and a ",(0,n.kt)("a",{parentName:"p",href:"/docs/reference/types"},"type"),". The list of parameters follows the contract's identifier between parenthesis and separated by comma."),(0,n.kt)("p",null,"For example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-archetype"},"archetype escrow(seller : address, buyer : address)\n\n/* ... */\n")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"seller")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"buyer")," ",(0,n.kt)("a",{parentName:"p",href:"/docs/reference/types#address"},"addresses")," then need to be set at deployment time with the completium CLI's ",(0,n.kt)("inlineCode",{parentName:"p"},"deploy")," command; for example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'completium-cli deploy escrow.arl --parameters \'{ "seller" : "tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb", "buyer" : "tz1aSkwEot3L2kmUvcoxzjMomb9mvBNuzFK6" }\'\n')),(0,n.kt)("p",null,"The value of a contract parameter may be modified by ",(0,n.kt)("a",{parentName:"p",href:"/docs/reference/instructions/assignment"},"assignment")," instructions in ",(0,n.kt)("a",{parentName:"p",href:"/docs/reference/declarations/entrypoint"},"entrypoints"),"."),(0,n.kt)("h3",{id:"constant"},"Constant"),(0,n.kt)("p",null,"If a contract parameter is not meant to be modified, nor to appear in the storage, it may be declared ",(0,n.kt)("inlineCode",{parentName:"p"},"const"),". Its value, provided at deployment time as for ",(0,n.kt)("a",{parentName:"p",href:"/docs/reference/declarations/contract#variable"},"variable")," parameter, is then ",(0,n.kt)("em",{parentName:"p"},"inlined"),", that it replaces each occurence of the parmeter."),(0,n.kt)("p",null,"For example, the declaration of the ",(0,n.kt)("a",{parentName:"p",href:"/docs/reference/declarations/contract#variable"},(0,n.kt)("inlineCode",{parentName:"a"},"FA 1.2"))," token contract:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-archetype"},'archetype fa1_2(const initial_holder : address, const total_supply : nat)\nwith metadata ""\n\n/* ... */\n')),(0,n.kt)("h2",{id:"metadata"},"Metadata"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"https://tzip.tezosagora.org/proposal/tzip-16/"},"TZIP-16")," specifies the standard contract's metadata as a storage ",(0,n.kt)("a",{parentName:"p",href:"/docs/language-basics/container#map"},"map"),". It is declared with ",(0,n.kt)("inlineCode",{parentName:"p"},"with metadata")," in contract declaration followed by intitial URL to metadata file:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-archetype"},'archetype my_token with metadata ""\n')),(0,n.kt)("p",null,"This adds the ",(0,n.kt)("a",{parentName:"p",href:"/docs/reference/expressions/variables#metadata"},(0,n.kt)("inlineCode",{parentName:"a"},"metadata"))," map to the storage."),(0,n.kt)("p",null,"A metadata template is provided ",(0,n.kt)("a",{parentName:"p",href:"/docs/templates/metadata#example"},"here"),"."))}d.isMDXComponent=!0}}]);