"use strict";(self.webpackChunkarchetype_docs=self.webpackChunkarchetype_docs||[]).push([[9751],{1519:function(e,t,n){n.d(t,{Z:function(){return f}});var a=n(3366),r=n(7462),l=n(7294),s=n(6010),i=n(7192),o=n(1796),c=n(2110),d=n(1539),p=n(8979);function m(e){return(0,p.Z)("MuiDivider",e)}(0,n(6087).Z)("MuiDivider",["root","absolute","fullWidth","inset","middle","flexItem","light","vertical","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","wrapper","wrapperVertical"]);var u=n(5893);const k=["absolute","children","className","component","flexItem","light","orientation","role","textAlign","variant"],y=(0,c.ZP)("div",{name:"MuiDivider",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.absolute&&t.absolute,t[n.variant],n.light&&t.light,"vertical"===n.orientation&&t.vertical,n.flexItem&&t.flexItem,n.children&&t.withChildren,n.children&&"vertical"===n.orientation&&t.withChildrenVertical,"right"===n.textAlign&&"vertical"!==n.orientation&&t.textAlignRight,"left"===n.textAlign&&"vertical"!==n.orientation&&t.textAlignLeft]}})((({theme:e,ownerState:t})=>(0,r.Z)({margin:0,flexShrink:0,borderWidth:0,borderStyle:"solid",borderColor:e.palette.divider,borderBottomWidth:"thin"},t.absolute&&{position:"absolute",bottom:0,left:0,width:"100%"},t.light&&{borderColor:(0,o.Fq)(e.palette.divider,.08)},"inset"===t.variant&&{marginLeft:72},"middle"===t.variant&&"horizontal"===t.orientation&&{marginLeft:e.spacing(2),marginRight:e.spacing(2)},"middle"===t.variant&&"vertical"===t.orientation&&{marginTop:e.spacing(1),marginBottom:e.spacing(1)},"vertical"===t.orientation&&{height:"100%",borderBottomWidth:0,borderRightWidth:"thin"},t.flexItem&&{alignSelf:"stretch",height:"auto"})),(({theme:e,ownerState:t})=>(0,r.Z)({},t.children&&{display:"flex",whiteSpace:"nowrap",textAlign:"center",border:0,"&::before, &::after":{position:"relative",width:"100%",borderTop:`thin solid ${e.palette.divider}`,top:"50%",content:'""',transform:"translateY(50%)"}})),(({theme:e,ownerState:t})=>(0,r.Z)({},t.children&&"vertical"===t.orientation&&{flexDirection:"column","&::before, &::after":{height:"100%",top:"0%",left:"50%",borderTop:0,borderLeft:`thin solid ${e.palette.divider}`,transform:"translateX(0%)"}})),(({ownerState:e})=>(0,r.Z)({},"right"===e.textAlign&&"vertical"!==e.orientation&&{"&::before":{width:"90%"},"&::after":{width:"10%"}},"left"===e.textAlign&&"vertical"!==e.orientation&&{"&::before":{width:"10%"},"&::after":{width:"90%"}}))),b=(0,c.ZP)("span",{name:"MuiDivider",slot:"Wrapper",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.wrapper,"vertical"===n.orientation&&t.wrapperVertical]}})((({theme:e,ownerState:t})=>(0,r.Z)({display:"inline-block",paddingLeft:`calc(${e.spacing(1)} * 1.2)`,paddingRight:`calc(${e.spacing(1)} * 1.2)`},"vertical"===t.orientation&&{paddingTop:`calc(${e.spacing(1)} * 1.2)`,paddingBottom:`calc(${e.spacing(1)} * 1.2)`})));var f=l.forwardRef((function(e,t){const n=(0,d.Z)({props:e,name:"MuiDivider"}),{absolute:l=!1,children:o,className:c,component:p=(o?"div":"hr"),flexItem:f=!1,light:h=!1,orientation:g="horizontal",role:_=("hr"!==p?"separator":void 0),textAlign:v="center",variant:E="fullWidth"}=n,w=(0,a.Z)(n,k),x=(0,r.Z)({},n,{absolute:l,component:p,flexItem:f,light:h,orientation:g,role:_,textAlign:v,variant:E}),T=(e=>{const{absolute:t,children:n,classes:a,flexItem:r,light:l,orientation:s,textAlign:o,variant:c}=e,d={root:["root",t&&"absolute",c,l&&"light","vertical"===s&&"vertical",r&&"flexItem",n&&"withChildren",n&&"vertical"===s&&"withChildrenVertical","right"===o&&"vertical"!==s&&"textAlignRight","left"===o&&"vertical"!==s&&"textAlignLeft"],wrapper:["wrapper","vertical"===s&&"wrapperVertical"]};return(0,i.Z)(d,m,a)})(x);return(0,u.jsx)(y,(0,r.Z)({as:p,className:(0,s.Z)(T.root,c),role:_,ref:t,ownerState:x},w,{children:o?(0,u.jsx)(b,{className:T.wrapper,ownerState:x,children:o}):null}))}))},5861:function(e,t,n){n.d(t,{Z:function(){return g}});var a=n(3366),r=n(7462),l=n(7294),s=n(6010),i=n(9707),o=n(7192),c=n(2110),d=n(1539),p=n(8216),m=n(8979);function u(e){return(0,m.Z)("MuiTypography",e)}(0,n(6087).Z)("MuiTypography",["root","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","button","caption","overline","alignLeft","alignRight","alignCenter","alignJustify","noWrap","gutterBottom","paragraph"]);var k=n(5893);const y=["align","className","component","gutterBottom","noWrap","paragraph","variant","variantMapping"],b=(0,c.ZP)("span",{name:"MuiTypography",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.variant&&t[n.variant],"inherit"!==n.align&&t[`align${(0,p.Z)(n.align)}`],n.noWrap&&t.noWrap,n.gutterBottom&&t.gutterBottom,n.paragraph&&t.paragraph]}})((({theme:e,ownerState:t})=>(0,r.Z)({margin:0},t.variant&&e.typography[t.variant],"inherit"!==t.align&&{textAlign:t.align},t.noWrap&&{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},t.gutterBottom&&{marginBottom:"0.35em"},t.paragraph&&{marginBottom:16}))),f={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",subtitle1:"h6",subtitle2:"h6",body1:"p",body2:"p",inherit:"p"},h={primary:"primary.main",textPrimary:"text.primary",secondary:"secondary.main",textSecondary:"text.secondary",error:"error.main"};var g=l.forwardRef((function(e,t){const n=(0,d.Z)({props:e,name:"MuiTypography"}),l=(e=>h[e]||e)(n.color),c=(0,i.Z)((0,r.Z)({},n,{color:l})),{align:m="inherit",className:g,component:_,gutterBottom:v=!1,noWrap:E=!1,paragraph:w=!1,variant:x="body1",variantMapping:T=f}=c,N=(0,a.Z)(c,y),C=(0,r.Z)({},c,{align:m,color:l,className:g,component:_,gutterBottom:v,noWrap:E,paragraph:w,variant:x,variantMapping:T}),Z=_||(w?"p":T[x]||f[x])||"span",A=(e=>{const{align:t,gutterBottom:n,noWrap:a,paragraph:r,variant:l,classes:s}=e,i={root:["root",l,"inherit"!==e.align&&`align${(0,p.Z)(t)}`,n&&"gutterBottom",a&&"noWrap",r&&"paragraph"]};return(0,o.Z)(i,u,s)})(C);return(0,k.jsx)(b,(0,r.Z)({as:Z,ref:t,ownerState:C,className:(0,s.Z)(A.root,g)},N))}))},8216:function(e,t,n){var a=n(601);t.Z=a.Z},4810:function(e,t,n){n.d(t,{Z:function(){return i}});n(7294);var a=n(4880),r=n(8357),l=n(5893);const s=(0,r.Z)({key:"css",prepend:!0});function i(e){const{injectFirst:t,children:n}=e;return t?(0,l.jsx)(a.C,{value:s,children:n}):n}},7682:function(e,t,n){n.d(t,{ZP:function(){return o}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),s=["components"],i={toc:[{value:"String",id:"string",level:3},{value:"Bytes",id:"bytes",level:3},{value:"List",id:"list",level:3},{value:"List of values",id:"list-of-values",level:3}]};function o(e){var t=e.components,n=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Concatenates two values of type ",(0,l.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"bytes"),", or ",(0,l.kt)("inlineCode",{parentName:"p"},"list<T>"),", or a list of values of type ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"bytes"),"."),(0,l.kt)("h3",{id:"string"},"String"),(0,l.kt)("p",null,"Concatenates two ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/types#string"},(0,l.kt)("inlineCode",{parentName:"a"},"string"))," values."),(0,l.kt)("p",null,"For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-archetype"},'const m = concat("Hello ", "Archetype");\n/* m is "Hello Archetype" */\n')),(0,l.kt)("p",null,"It is equivalent to the ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/expressions/operators/arithmetic#a--b"},(0,l.kt)("inlineCode",{parentName:"a"},"+"))," operator."),(0,l.kt)("h3",{id:"bytes"},"Bytes"),(0,l.kt)("p",null,"Concatenates two ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/types#bytes"},(0,l.kt)("inlineCode",{parentName:"a"},"bytes"))," values."),(0,l.kt)("p",null,"For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-archetype"},"const m = concat(0x48656c6c6f, 0x417263686574797065);\n/* m is 0x48656c6c6f417263686574797065 */\n")),(0,l.kt)("h3",{id:"list"},"List"),(0,l.kt)("p",null,"Concatenates two ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/types#list%3CT%3E"},(0,l.kt)("inlineCode",{parentName:"a"},"lists"))," of any element of any type."),(0,l.kt)("p",null,"It is equivalent to the following code:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-archetype"},"var res : list<T> = l;\nfor e in reverse(L) do\n  res.prepend(e)\ndone;\nL := res\n")),(0,l.kt)("p",null,"For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-archetype"},"const l = concat([1; 2; 3], [4; 5]);\n/* l is [1; 2; 3; 4; 5] */\n")),(0,l.kt)("h3",{id:"list-of-values"},"List of values"),(0,l.kt)("p",null,"Concatenates values of a list, of type ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/types#string"},(0,l.kt)("inlineCode",{parentName:"a"},"string"))," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/types#bytes"},(0,l.kt)("inlineCode",{parentName:"a"},"bytes"))),(0,l.kt)("p",null,"For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-archetype"},'const m = concat([ "Hello "; "Archetype "; "world!" ]);\n/* m is "Hello Archetype world!"*/\n')))}o.isMDXComponent=!0},447:function(e,t,n){n.d(t,{ZP:function(){return o}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),s=["components"],i={toc:[]};function o(e){var t=e.components,n=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Returns the first n elements of list ",(0,l.kt)("inlineCode",{parentName:"p"},"L")," according to its order:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-archetype"},"  h0 := head([0; 1; 2], 2); /* h0 = [0; 1] */\n")),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," is greater than ",(0,l.kt)("inlineCode",{parentName:"p"},"length(L)"),", then the entire list is returned:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-archetype"},"  h1 := head([0; 1; 2], 4); /* h1 = [0; 1; 2] */\n")))}o.isMDXComponent=!0},2461:function(e,t,n){n.d(t,{ZP:function(){return o}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),s=["components"],i={toc:[]};function o(e){var t=e.components,n=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Returns the last n elements of list ",(0,l.kt)("inlineCode",{parentName:"p"},"L")," according to its order:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-archetype"},"  t0 := tail([0; 1; 2], 2); /* t0 = [1; 2] */\n")),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," is greater than ",(0,l.kt)("inlineCode",{parentName:"p"},"length(L)"),", then the entire list is returned:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-archetype"},"  t1 := tail([0; 1; 2], 4); /* t1 = [0; 1; 2] */\n")))}o.isMDXComponent=!0},2659:function(e,t,n){n.d(t,{Q:function(){return pe},H:function(){return de}});var a=n(9960),r=n(7294),l=n(7462),s=n(3366),i=n(3905),o=["components"],c={toc:[]};function d(e){var t=e.components,n=(0,s.Z)(e,o);return(0,i.kt)("wrapper",(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Returns the absolute value of input ",(0,i.kt)("inlineCode",{parentName:"p"},"t"),"."),(0,i.kt)("p",null,"When ",(0,i.kt)("inlineCode",{parentName:"p"},"t")," is of type:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/types#int"},(0,i.kt)("inlineCode",{parentName:"a"},"int")),", ",(0,i.kt)("inlineCode",{parentName:"li"},"abs(t)")," is typed ",(0,i.kt)("inlineCode",{parentName:"li"},"nat")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/types#rational"},(0,i.kt)("inlineCode",{parentName:"a"},"rational")),", ",(0,i.kt)("inlineCode",{parentName:"li"},"abs(t)")," is typed ",(0,i.kt)("inlineCode",{parentName:"li"},"rational"))),(0,i.kt)("p",null,"The function may be considered as a non-failing conversion function from ",(0,i.kt)("inlineCode",{parentName:"p"},"int")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"nat"),"."))}d.isMDXComponent=!0;var p=["components"],m={toc:[]};function u(e){var t=e.components,n=(0,s.Z)(e,p);return(0,i.kt)("wrapper",(0,l.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Executes ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Partial_application"},"partial application")," of a lambda value ",(0,i.kt)("inlineCode",{parentName:"p"},"f")," to an argument value ",(0,i.kt)("inlineCode",{parentName:"p"},"x"),"."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"const plus_x = lambda<nat>((a : nat * nat) -> a[0] + a[1]);\nconst plus_three = apply_lambda(plus_x, 3);\nconst r = exec_lambda(plus_three, 1);\n/* r is equal to 4 */\n")))}u.isMDXComponent=!0;var k=["components"],y={toc:[]};function b(e){var t=e.components,n=(0,s.Z)(e,k);return(0,i.kt)("wrapper",(0,l.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Calls a contract's ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/declarations/view"},"view")," and returns an ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#option%3CT%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"option<T>"))," of the result."),(0,i.kt)("p",null,"For example, consider the following view declaration in contract ",(0,i.kt)("inlineCode",{parentName:"p"},"A"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"view affine(x : rational) : rational {\n    return (2 * x + 3)\n}\n")),(0,i.kt)("p",null,"Call this function from contract ",(0,i.kt)("inlineCode",{parentName:"p"},"B")," with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'const r ?= call_view<rational>(addr_A, "affine", -3/2) : "AFFINE_ERR"\n')))}b.isMDXComponent=!0;var f=n(7682),h=["components"],g={toc:[]};function _(e){var t=e.components,n=(0,s.Z)(e,h);return(0,i.kt)("wrapper",(0,l.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Creates an operation for contract creation. The returned operation is then to be added to the ",(0,i.kt)("inlineCode",{parentName:"p"},"operations")," builtin list of generated operations."),(0,i.kt)("p",null,"For example, in order to deploy a contract from source ",(0,i.kt)("inlineCode",{parentName:"p"},"simple.tz")," for ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," as natural initial storage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'archetype anothercontract\n\nimport simple from "simple.tz"\n\nentry exec() {\n  const storage_init : nat = 0;\n  const op_addr : (operation * address) =\n    create_contract(simple, none, 0tz, storage_init);\n  operations := [op_addr[0]]\n}\n')),(0,i.kt)("p",null,"It is also possible to create a contract from an archetype source."),(0,i.kt)("p",null,"Instead of passing the initial storage, a record of contract ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/declarations/contract#parameters"},"parameters")," is passed."),(0,i.kt)("p",null,"Say for example that the deployed contract has a ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/declarations/contract#variable"},"variable parameter")," named ",(0,i.kt)("inlineCode",{parentName:"p"},"owner")," typed ",(0,i.kt)("inlineCode",{parentName:"p"},"address"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'archetype anothercontract\n\nimport "simple.arl"\n\nentry exec() {\n  const op_addr : (operation * address) =\n    create_contract(simple, none, 0tz, { owner = caller });\n  operations := [op_addr[0]]\n}\n')),(0,i.kt)("p",null,"When the contract declared a ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/declarations/contract#constant"},"constant parameter"),", then only a literal value can be passed. Say for example that the created contract has a constant parameter named ",(0,i.kt)("inlineCode",{parentName:"p"},"total_amount")," typed ",(0,i.kt)("inlineCode",{parentName:"p"},"nat"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'archetype anothercontract\n\nimport "simple.arl"\n\nentry exec() {\n  const op_addr : (operation * address) =\n    create_contract(simple, none, 0tz, { total_amount = 1_000_000 });\n  operations := [op_addr[0]]\n}\n')))}_.isMDXComponent=!0;var v=["components"],E={toc:[]};function w(e){var t=e.components,n=(0,s.Z)(e,v);return(0,i.kt)("wrapper",(0,l.Z)({},E,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Applies a lambda value ",(0,i.kt)("inlineCode",{parentName:"p"},"f")," to argument ",(0,i.kt)("inlineCode",{parentName:"p"},"x"),"."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"const plus_three = lambda((x : nat) -> x + 3);\nconst r = exec_lambda(plus_three, 1);\n/* r is equal to 4 */\n")))}w.isMDXComponent=!0;var x=["components"],T={toc:[]};function N(e){var t=e.components,n=(0,s.Z)(e,x);return(0,i.kt)("wrapper",(0,l.Z)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fold")," applies the ",(0,i.kt)("em",{parentName:"p"},"inlined")," function ",(0,i.kt)("inlineCode",{parentName:"p"},"f")," to the ",(0,i.kt)("inlineCode",{parentName:"p"},"left")," of initial value ",(0,i.kt)("inlineCode",{parentName:"p"},"i"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"if it returns a ",(0,i.kt)("inlineCode",{parentName:"li"},"left")," value, it applies ",(0,i.kt)("inlineCode",{parentName:"li"},"f")," to the result of ",(0,i.kt)("inlineCode",{parentName:"li"},"f(i)"),", and iteratively applies f on as long as it returns a ",(0,i.kt)("inlineCode",{parentName:"li"},"left")," value."),(0,i.kt)("li",{parentName:"ul"},"if it returns a ",(0,i.kt)("inlineCode",{parentName:"li"},"right")," value, iteration stops, and the ",(0,i.kt)("inlineCode",{parentName:"li"},"right")," value is returned.")),(0,i.kt)("p",null,"Hence the application may be represented as:\n",(0,i.kt)("inlineCode",{parentName:"p"},"fold(i, f) = right(f(...(f(i))))")),(0,i.kt)("p",null,"For example, the following expression ",(0,i.kt)("em",{parentName:"p"},"reverses")," the list ",(0,i.kt)("inlineCode",{parentName:"p"},"l")," typed ",(0,i.kt)("inlineCode",{parentName:"p"},"list<nat>"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"var empty : list<nat> = [];\nvar p : or<list<nat> * list<nat>, list<nat>> = left<list<nat>> ((empty, l));\nres := fold (p, x ->\n  match x[1] with\n   | hd::tail -> left<list<nat>> ((prepend(x[0], hd), tail))\n   | []       -> right<list<nat> * list<nat>>(x[0])\n  end\n)\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Folded function is inlined and cannot be a ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#lambda%3CT,%20R%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"lambda"))," variable."))))}N.isMDXComponent=!0;var C=["components"],Z={toc:[]};function A(e){var t=e.components,n=(0,s.Z)(e,C);return(0,i.kt)("wrapper",(0,l.Z)({},Z,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Returns an ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#option%3CT%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"option"))," of contract's entrypoint (typed ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#contract%3CT%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"contract<T>")),") to the entrypoint ",(0,i.kt)("inlineCode",{parentName:"p"},"s")," with argument ",(0,i.kt)("inlineCode",{parentName:"p"},"T")," at contract address ",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"."),(0,i.kt)("p",null,"For example, consider the following contract at address ",(0,i.kt)("inlineCode",{parentName:"p"},"a"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"archetype example\n\nentry exec(n : nat) { /* ... */ }\n\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"exec")," entrypoint may be retrieved with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'const e = get_entrypoint("%exec", a) ? the : fail("EXEC_NOT_FOUND")\n')),(0,i.kt)("p",null,"The entrypoint may then be used as an argument of ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/expressions/builtins#make_operation(a%20:%20tez,%20c%20:%20contract%3CT%3E,%20arg%20:%20T)"},(0,i.kt)("inlineCode",{parentName:"a"},"make_operation")),"."))}A.isMDXComponent=!0;var L=["components"],z={toc:[]};function M(e){var t=e.components,n=(0,s.Z)(e,L);return(0,i.kt)("wrapper",(0,l.Z)({},z,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," if an optional value ",(0,i.kt)("inlineCode",{parentName:"p"},"o")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"some"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," otherwise."),(0,i.kt)("p",null,"It is equivalent to the following expression:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"o ? false : true\n")),(0,i.kt)("p",null,"or equivalently:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"match o with\n| some(v) -> false\n| none    -> true\nend\n")))}M.isMDXComponent=!0;var R=["components"],V={toc:[]};function S(e){var t=e.components,n=(0,s.Z)(e,R);return(0,i.kt)("wrapper",(0,l.Z)({},V,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if an optional value ",(0,i.kt)("inlineCode",{parentName:"p"},"o")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"some"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,i.kt)("p",null,"It is equivalent to the following expression:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"o ? true : false\n")),(0,i.kt)("p",null,"or equivalently:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"match o with\n| some(v) -> true\n| none    -> false\nend\n")))}S.isMDXComponent=!0;var D=["components"],I={toc:[]};function K(e){var t=e.components,n=(0,s.Z)(e,D);return(0,i.kt)("wrapper",(0,l.Z)({},I,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Constructs a ",(0,i.kt)("em",{parentName:"p"},"left")," value typed ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#or%3CT1,%20T2%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"or<L, R>")),"."),(0,i.kt)("p",null,"The left type ",(0,i.kt)("inlineCode",{parentName:"p"},"L")," may be omitted as it can be inferred, but the right type ",(0,i.kt)("inlineCode",{parentName:"p"},"R")," is mandatory."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"const o = left<string>(2)\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"o")," is then typed ",(0,i.kt)("inlineCode",{parentName:"p"},"option<nat, string>"),". It is equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"const o = left<nat, string>(2)\n")))}K.isMDXComponent=!0;var P=n(447),O=n(2461),X=["components"],B={toc:[]};function G(e){var t=e.components,n=(0,s.Z)(e,X);return(0,i.kt)("wrapper",(0,l.Z)({},B,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Creates an asset from identifier and data (key and value)."),(0,i.kt)("p",null,"It is typically convenient when an asset data is provided as an entry point parameter."),(0,i.kt)("p",null,"Consider for example the following asset declaration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset vehicle {\n  vin          : string;\n  nbrepairs    : nat  = 0;\n  dateofrepair : date = now;\n}\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"add_vehicle")," entry point below provides a vehicle data as a record:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"entry add_vehicle(k : asset_key<vehicle>, d : asset_value<vehicle>) {\n  vehicle.put(make_asset(k, d))\n}\n")))}G.isMDXComponent=!0;var F=["components"],q={toc:[{value:"List",id:"list",level:3},{value:"Map",id:"map",level:3},{value:"Option",id:"option",level:3}]};function H(e){var t=e.components,n=(0,s.Z)(e,F);return(0,i.kt)("wrapper",(0,l.Z)({},q,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Maps a value of type ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#list%3CT%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"list<T>")),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#map%3CK,%20V%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"map<K, V>")),", or ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#option%3CT%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"option<T>")),"."),(0,i.kt)("h3",{id:"list"},"List"),(0,i.kt)("p",null,"Applies an inlined function of type ",(0,i.kt)("inlineCode",{parentName:"p"},"T -> T")," on each element of a list of elements typed ",(0,i.kt)("inlineCode",{parentName:"p"},"T")," and returns a new list."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"const l = map([ 1; 2 ; 3 ], x -> 2 * x + 1);\n/* l is [ 3; 5; 7 ] */\n")),(0,i.kt)("h3",{id:"map"},"Map"),(0,i.kt)("p",null,"Applies an inlined function of type ",(0,i.kt)("inlineCode",{parentName:"p"},"(K * V) -> V")," on each value of a map with key of type ",(0,i.kt)("inlineCode",{parentName:"p"},"K")," and value of type ",(0,i.kt)("inlineCode",{parentName:"p"},"V"),"; it returns a new map."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'const m = map([ ("a", 5); ("b", 6); ("c", 7) ], x -> 2 * x[1] + 1)\n/* m is [ ("a", 11); ("b", 13); ("c", 15) ] */\n')),(0,i.kt)("p",null,"Note that the ",(0,i.kt)("inlineCode",{parentName:"p"},"x")," intput of the inlined mapping function is a ",(0,i.kt)("em",{parentName:"p"},"pair")," (key and value) of the map; hence ",(0,i.kt)("inlineCode",{parentName:"p"},"x[0]")," is the key and ",(0,i.kt)("inlineCode",{parentName:"p"},"x[1]")," is the value."),(0,i.kt)("h3",{id:"option"},"Option"),(0,i.kt)("p",null,"Applies an inlined function of type ",(0,i.kt)("inlineCode",{parentName:"p"},"T -> T")," to the ",(0,i.kt)("inlineCode",{parentName:"p"},"some")," value of an ",(0,i.kt)("inlineCode",{parentName:"p"},"option<T>")," value, or returns ",(0,i.kt)("inlineCode",{parentName:"p"},"none"),"."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"const o1 = map(some(2), x -> 2 * x + 1);\n/* o1 is some(5) */\nconst o2 = map(none, x -> 2 * x + 1);\n/* o2 is none */\n")),(0,i.kt)("p",null,"Note that the ",(0,i.kt)("inlineCode",{parentName:"p"}," ? :")," syntax is also available to fold an option. The above example is then equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"const o1 = some(2) ? 2 * the + 1 : none;\n/* o1 is some(5) */\n")))}H.isMDXComponent=!0;var U=["components"],j={toc:[]};function W(e){var t=e.components,n=(0,s.Z)(e,U);return(0,i.kt)("wrapper",(0,l.Z)({},j,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Converts a ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#tez"},(0,i.kt)("inlineCode",{parentName:"a"},"tez"))," value in mutez (millionth of tez) to a ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#nat"},(0,i.kt)("inlineCode",{parentName:"a"},"nat"))," value."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"const n = mutez_to_nat(5tz);\n/* n is 5000000 */\n")))}W.isMDXComponent=!0;var Y=["components"],J={toc:[]};function Q(e){var t=e.components,n=(0,s.Z)(e,Y);return(0,i.kt)("wrapper",(0,l.Z)({},J,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Returns an option of the ",(0,i.kt)("inlineCode",{parentName:"p"},"n"),"th element of list ",(0,i.kt)("inlineCode",{parentName:"p"},"l"),"."),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Implementation is in O(n) complexity (Michelson lists are linked)."))))}Q.isMDXComponent=!0;var $=["components"],ee={toc:[]};function te(e){var t=e.components,n=(0,s.Z)(e,$);return(0,i.kt)("wrapper",(0,l.Z)({},ee,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Constructs a ",(0,i.kt)("em",{parentName:"p"},"right")," value typed ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#or%3CT1,%20T2%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"or<L, R>")),"."),(0,i.kt)("p",null,"The left type ",(0,i.kt)("inlineCode",{parentName:"p"},"L")," is mandatory, while the right type ",(0,i.kt)("inlineCode",{parentName:"p"},"R")," may be omited as it can be inferred."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'const o = right<nat>("abc")\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"o")," is then typed ",(0,i.kt)("inlineCode",{parentName:"p"},"option<nat, string>"),". It is equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'const o = right<nat, string>("abc")\n')))}te.isMDXComponent=!0;var ne=["components"],ae={toc:[]};function re(e){var t=e.components,n=(0,s.Z)(e,ne);return(0,i.kt)("wrapper",(0,l.Z)({},ae,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Extracts a section of a string or bytes ",(0,i.kt)("inlineCode",{parentName:"p"},"s")," and returns it as a new string or bytes."),(0,i.kt)("p",null,"The section starts at offset postion ",(0,i.kt)("inlineCode",{parentName:"p"},"o")," is has a length of ",(0,i.kt)("inlineCode",{parentName:"p"},"l"),"."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'const s = "Hello Archetype World!";\nconst e = slice(s, 6, 9) ? the : "";  /* e is "Archetype" */\nconst b = 0x48656c6c6f2041726368657479706520576f726c64;\nconst c = slice(b, 12, 18); /* c is some(0x417263686574797065) */\nconst f = slice(b, 30, 40); /* f is none */\n')))}re.isMDXComponent=!0;var le,se=["components"],ie={toc:[]};function oe(e){var t=e.components,n=(0,s.Z)(e,se);return(0,i.kt)("wrapper",(0,l.Z)({},ie,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Deserializes a value of type ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#bytes"},(0,i.kt)("inlineCode",{parentName:"a"},"bytes"))," into the corresponding value of type ",(0,i.kt)("inlineCode",{parentName:"p"},"option<T>"),"."),(0,i.kt)("p",null,"For example, suppose ",(0,i.kt)("inlineCode",{parentName:"p"},"p")," is a bytes value:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'const v ?= unpack<nat>(p) : "UNPACK_FAILED";\n/* v is typed nat */\n')))}oe.isMDXComponent=!0;var ce="https://tezos.gitlab.io/michelson-reference/",de=function(e){return e.replace(/ /g,"%20")},pe=((le={call_view:{sig:"call_view<T>(a : address, id : string, arg : X)",desc:r.createElement(b,null),parameters:[{type:"address",alias:"a",desc:r.createElement("div",null,"Address of the contract to call")},{type:"string",alias:"id",desc:r.createElement("div",null,"Name of the view; must be a string literal (e.g. ",r.createElement("code",null,'"my_view"'),")")},{type:"X",withLink:!1,alias:"arg",desc:r.createElement("div",null,"Argument of the called view")}],returns:{type:"option<T>",desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"none")," if a problem occured (view not found, or view execution failed)"),r.createElement("li",null,r.createElement("code",null,"some(v)"),", ",r.createElement("code",null,"v")," being the value returned by the view")))},michelson:"VIEW",michelson_ref_url:ce+"#VIEW",related:[{keyword:"View",link:"/docs/reference/declarations/view"}]},make_asset:{sig:"make_asset(k : asset_key<A>, v : asset_value<A>)",desc:r.createElement(G,null),parameters:[{type:"asset_key<A>",alias:"k",desc:r.createElement("div",null,"Asset identifier")},{type:"asset_value<A>",alias:"v",desc:r.createElement("div",null,"Asset value")}],returns:{type:"A",withLink:!1,desc:r.createElement("div",null,"Asset literal with identifier ",r.createElement("code",null,"k")," and data ",r.createElement("code",null,"v"),".")},related:[{keyword:"Asset",link:"/docs/asset"}]},make_big_map:{sig:"make_big_map<K, T>(m)",desc:r.createElement("div",null,"Create a big_map from literal.",r.createElement("br",null),"This is used for example to create an empty big map with ",r.createElement("code",null,"make_big_map<K, V>([])"),"."),parameters:[{type:"big_map",alias:"m",desc:r.createElement("div",null,"Literal of big_map")}],returns:{type:"big_map<K, T>",desc:r.createElement("div",null,"Returns big_map")}}}).make_big_map={sig:"make_big_map<K, V>(m)",desc:r.createElement("div",null,"Makes a big_map from ",r.createElement("i",null,"literal")," or variable.",r.createElement("br",null),"This is useful to solve the type amiguity of literals, like for example the empty big_map ",r.createElement("code",null,"[]"),"."),parameters:[{type:"big_map<K, V>",alias:"m",desc:r.createElement("div",null,"Big_map")}],returns:{type:"big_map<K, V>",desc:r.createElement("div",null,"Returns big_map")}},le.make_map={sig:"make_map<K, V>(m)",desc:r.createElement("div",null,"Makes a map from ",r.createElement("i",null,"literal")," or variable.",r.createElement("br",null),"This is useful to solve the type amiguity of literals, like for example the empty map ",r.createElement("code",null,"[]"),"."),parameters:[{type:"map<K, V>",alias:"m",desc:r.createElement("div",null,"Map")}],returns:{type:"map<K, V>",desc:r.createElement("div",null,"Returns map")}},le.make_list={sig:"make_list<T>(l)",desc:r.createElement("div",null,"Makes a list from ",r.createElement("i",null,"literal")," or variable.",r.createElement("br",null),"This is useful to solve the type amiguity of literals, like for example the empty list ",r.createElement("code",null,"[]"),"."),parameters:[{type:"list<T>",alias:"l",desc:r.createElement("div",null,"List")}],returns:{type:"list<T>",desc:r.createElement("div",null,"Returns list")}},le.make_set={sig:"make_set<T>(s)",desc:r.createElement("div",null,"Makes a set from ",r.createElement("i",null,"literal")," or variable.",r.createElement("br",null),"This is useful to solve the type amiguity of literals, like for example the empty set ",r.createElement("code",null,"[]"),"."),parameters:[{type:"set<T>",alias:"s",desc:r.createElement("div",null,"Set")}],returns:{type:"set<T>",desc:r.createElement("div",null,"Returns set")}},le.make_operation={sig:"make_operation(a : tez, c : contract<T>, arg : T)",desc:r.createElement("div",null,"Makes an operation."),parameters:[{type:"tez",alias:"a",desc:r.createElement("div",null,"The amount of tez sent with the operation")},{type:"contract<T>",alias:"c",desc:r.createElement("div",null,"Entrypoint with argument of type ",r.createElement("code",null,"T")," (as returned by ",r.createElement("code",null,"get_entrypoint"),")")},{type:"T",withLink:!1,alias:"arg",desc:r.createElement("div",null,"The argument of the called entrypoint")}],returns:{type:"operation",desc:r.createElement("div",null,"The generated operation")},michelson:"TRANSFER_TOKENS",michelson_ref_url:ce+"#instr-TRANSFER_TOKENS",related:[{keyword:"Operations",link:"/docs/reference/instructions/operation"},{keyword:"get_entrypoint",link:"/docs/reference/expressions/builtins#get_entrypoint<T>(s,%20a%20:%20address)"}]},le.fold={sig:"fold (i : or<L, R>, f : L -> or<L, R>)",desc:r.createElement(N,null),parameters:[{type:"or<L, R>",alias:"i",desc:r.createElement("div",null,"Initial value")},{type:"function",withLink:!1,alias:"f",desc:r.createElement("div",null,r.createElement("i",null,"Inlined")," folding function that:",r.createElement("ul",null,r.createElement("li",null,"takes a parameter of type ",r.createElement("code",null,"L")),r.createElement("li",null,"returns a values of type ",r.createElement("code",null,"or<L, R>")," ")))}],returns:{type:"R",withLink:!1,desc:r.createElement("div",null,"Folded value")},michelson:"LOOP_LEFT",michelson_ref_url:ce+"#instr-LOOP_LEFT",related:[{keyword:"or",link:"/docs/reference/types#or<T1,%20T2>"},{keyword:"left",link:"/docs/reference/expressions/builtins#left<(L,)?%20T>(x%20:%20L)"},{keyword:"right",link:"/docs/reference/expressions/builtins#right<T(,%20R)>(x%20:%20R)"}]},le.map={sig:"map",desc:r.createElement(H,null),parameters:[{type:"-",withLink:!1,alias:"s",desc:r.createElement("div",null,"Input to map of type:",r.createElement("ul",null,r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#list<T>"},r.createElement("code",null,"list<T>"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#map<K,%20V>"},r.createElement("code",null,"map<K, V>"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#option<T>"},r.createElement("code",null,"option<T>")))))},{type:"function",withLink:!1,alias:"f",desc:r.createElement("div",null,r.createElement("i",null,"Inlined")," mapping function.")}],returns:{type:"-",withLink:!1,desc:r.createElement("div",null,"Returns a mapped value of the same type as the input.")},michelson:"MAP",michelson_ref_url:ce+"#instr-MAP",related:[{keyword:"list<T>",link:"/docs/reference/types#list<T>"},{keyword:"map<K, V>",link:"/docs/reference/types#map<K,%20V>"},{keyword:"option<T>",link:"/docs/reference/types#option<T>"},{keyword:"? :",link:"/docs/reference/expressions/controls#a--b--c"}]},le.exec_lambda={sig:"exec_lambda(f : lambda<T, R>, x : T)",desc:r.createElement(w,null),parameters:[{type:"lambda<T, R>",alias:"f",desc:r.createElement("div",null,"Lambda to execute")},{type:"T",withLink:!1,alias:"x",desc:r.createElement("div",null,"Argument")}],returns:{type:"T",desc:r.createElement("div",null,"Evaluation of ",r.createElement("i",null,"f(x)"))},michelson:"EXEC",michelson_ref_url:ce+"#instr-EXEC",related:[{keyword:"lambda",link:"/docs/reference/types#lambda<T,%20R>"},{keyword:"apply_lambda",link:"/docs/reference/expressions/builtins#apply_lambda(f%20:%20lambda<A%20*%20T,%20R>,%20x%20:%20A)"}]},le.apply_lambda={sig:"apply_lambda(f : lambda<A * T, R>, x : A)",desc:r.createElement(u,null),parameters:[{type:"lambda<A*T,R>",withLink:!1,alias:"f",desc:r.createElement("div",null,"Lambda to partially apply")},{type:"A",alias:"x",withLink:!1,desc:r.createElement("div",null,"Lambda argument")}],returns:{type:"lambda<T, R>",desc:r.createElement("div",null,"Partially applied lambda value")},michelson:"APPLY",michelson_ref_url:ce+"#instr-APPLY",related:[{keyword:"lambda",link:"/docs/reference/types#lambda<T,%20R>"},{keyword:"exec_lambda",link:"/docs/reference/expressions/builtins#exec_lambda(f%20:%20lambda<T,%20R>,%20x%20:%20T)"}]},le.sub_nat={sig:"sub_nat(a : nat, b : nat)",desc:r.createElement("div",null,"Subtracts ",r.createElement("code",null,"a")," to ",r.createElement("code",null,"b")," and returns an option of nat value."),parameters:[{type:"nat",alias:"a",desc:r.createElement("div",null,"Left-hand side operand to subtract")},{type:"nat",alias:"b",desc:r.createElement("div",null,"Right-hand side operand to subtract")}],returns:{type:"option<nat>",withLink:!1,desc:r.createElement("div",null,"Option of nat value:",r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"some")," of ",r.createElement("code",null,"a - b")," when ",r.createElement("code",null,"a >= b")),r.createElement("li",null,r.createElement("code",null,"none")," otherwise")))},related:[{keyword:"nat",link:"/docs/reference/types#nat"}]},le.sub_mutez={sig:"sub_mutez(a : tez, b : tez)",desc:r.createElement("div",null,"Subtracts ",r.createElement("code",null,"a")," to ",r.createElement("code",null,"b")," and returns an option of tez value."),parameters:[{type:"tez",alias:"a",desc:r.createElement("div",null,"Left-hand side operand to subtract")},{type:"tez",alias:"b",desc:r.createElement("div",null,"Right-hand side operand to subtract")}],returns:{type:"option<tez>",desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"none")," if ",r.createElement("code",null,"a - b")," is negative"),r.createElement("li",null,r.createElement("code",null,"some(v)"),", if ",r.createElement("code",null,"a - b")," is positive, with ",r.createElement("code",null,"v = a - b"))))},michelson:"SUB_MUTEZ",michelson_ref_url:ce+"#instr-SUB_MUTEZ",related:[{keyword:"tez",link:"/docs/reference/types#tez"}]},le.left={sig:"left<(L,)? T>(x : L)",desc:r.createElement(K,null),parameters:[{type:"L",alias:"x",withLink:!1,desc:r.createElement("div",null,"Value to convert")}],returns:{type:"or<L, T>",desc:r.createElement("div",null,"Value converted to left literal")},michelson:"LEFT",michelson_ref_url:ce+"#instr-LEFT",related:[{keyword:"or",link:"/docs/reference/types#or<T1,%20T2>"},{keyword:"right",link:"/docs/reference/expressions/builtins#right<T(,%20R)>(x%20:%20R)"}]},le.right={sig:"right<T(, R)>(x : R)",desc:r.createElement(te,null),parameters:[{type:"R",withLink:!1,alias:"x",desc:r.createElement("div",null,"Value to convert")}],returns:{type:"or<T, R>",desc:r.createElement("div",null,"Value converted to right literal")},michelson:"RIGHT",michelson_ref_url:ce+"#instr-RIGHT",related:[{keyword:"or",link:"/docs/reference/types#or<T1,%20T2>"},{keyword:"left",link:"/docs/reference/expressions/builtins#left<(L,)?%20T>(x%20:%20L)"}]},le.none={sig:"none<T>",desc:r.createElement("div",null,"Optional ",r.createElement("code",null,"none")," value for type ",r.createElement("code",null,"option<T>"),"."),parameters:[],returns:{type:"option<T>",desc:r.createElement("div",null,"Value none")},michelson:"NONE",michelson_ref_url:ce+"#instr-NONE",related:[{keyword:"Option",link:"/docs/language-basics/composite#option"},{keyword:"some",link:"/docs/reference/expressions/builtins#some(v%20:%20T)"},{keyword:"math with",link:"/docs/reference/instructions/control#match-with"}]},le.some={sig:"some(v : T)",desc:r.createElement("div",null,"Optional ",r.createElement("code",null,"some")," value for type ",r.createElement("code",null,"option<T>"),"."),parameters:[{type:"T",alias:"v",desc:r.createElement("div",null,"Some value")}],returns:{type:"option<T>",desc:r.createElement("div",null,"Optional value of ",r.createElement("code",null,"v"))},michelson:"SOME",michelson_ref_url:ce+"#instr-SOME",related:[{keyword:"Option",link:"/docs/language-basics/composite#option"},{keyword:"none",link:"/docs/reference/expressions/builtins#none<T>"},{keyword:"math with",link:"/docs/reference/instructions/control#match-with"}]},le.add={sig:"add(s : set<T>, e : T)",desc:r.createElement("div",null,"Returns a copy of set ",r.createElement("code",null,"s")," augmented with element ",r.createElement("code",null,"e"),".",r.createElement("p",null),"If ",r.createElement("code",null,"e")," is already present in ",r.createElement("code",null,"s"),", it returns a copy of ",r.createElement("code",null,"s"),"."),parameters:[{type:"set<T>",alias:"s",desc:r.createElement("div",null,"Input set")},{type:"T",withLink:!1,alias:"e",desc:r.createElement("div",null,"Element to add")}],returns:{type:"set<T>",desc:r.createElement("div",null,"Set that contains all elements of ",r.createElement("code",null,"s")," and element ",r.createElement("code",null,"e"))},michelson:"UPDATE",michelson_ref_url:ce+"#instr-UPDATE",related:[{keyword:"Set",link:"/docs/language-basics/container#set"},{keyword:"remove",link:"/docs/reference/expressions/builtins#remove(c%20:%20C,%20i%20:%20T)"}]},le.prepend={sig:"prepend(l : list<T>, e : T)",desc:r.createElement("div",null,"Adds element ",r.createElement("code",null,"e")," at the beginning of list ",r.createElement("code",null,"l"),"."),parameters:[{type:"list<T>",alias:"l",desc:r.createElement("div",null,"List")},{type:"T",alias:"e",desc:r.createElement("div",null,"Element to add")}],returns:{type:"list<T>",desc:r.createElement("div",null,"List with element ",r.createElement("code",null,"e")," followed by list ",r.createElement("code",null,"l")," of elements.")},michelson:"CONS",michelson_ref_url:ce+"#instr-CONS",related:[{keyword:"List",link:"/docs/language-basics/container#list"}]},le.nth={sig:"nth(l : list<T>, n : nat)",desc:r.createElement(Q,null),parameters:[{type:"list<T>",alias:"l",desc:r.createElement("div",null,"List of elements typed ",r.createElement("code",null,"T"))},{type:"nat",alias:"n",desc:r.createElement("div",null,"Position in range ",r.createElement("code",null,"0")," to ",r.createElement("code",null,"length(l)-1"))}],returns:{type:"option<T>",desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"some")," of element at position ",r.createElement("code",null,"n")),r.createElement("li",null,r.createElement("code",null,"none")," when ",r.createElement("code",null,"n")," is out of bound")))},related:[{keyword:"List",link:"/docs/language-basics/container#list"},{keyword:"length",link:"/docs/reference/expressions/builtins#length(o%20:%20T)"}]},le.reverse={sig:"reverse(l : list<T>)",desc:r.createElement("div",null,"Returns a copy of list ",r.createElement("code",null,"l")," with elements in reverse order."),parameters:[{type:"list<T>",alias:"l",desc:r.createElement("div",null,"List to reverse")}],returns:{type:"list<T>",desc:r.createElement("div",null,"List with reversed elements")},related:[{keyword:"List",link:"/docs/language-basics/container#list"},{keyword:"reverse",link:"/docs/reference/instructions/containers#lreverse"},{keyword:"prepend",link:"/docs/reference/expressions/builtins#prepend(l%20:%20list<T>,%20e%20:%20T)"}]},le.put={sig:"put(m : map<K, V>, k : K, v : V)",desc:r.createElement("div",null,"Associates value ",r.createElement("code",null,"v")," with key ",r.createElement("code",null,"k")," in map (",r.createElement("code",null,"map"),", ",r.createElement("code",null,"big_map")," or ",r.createElement("code",null,"iterable_map"),")",r.createElement("code",null,"m"),"."),parameters:[{type:"map",alias:"m",desc:r.createElement("div",null,"Map (or ",r.createElement(a.Z,{to:"/docs/reference/types#big_map<K,%20V>"},r.createElement("code",null,"big_map"))," or ",r.createElement(a.Z,{to:"/docs/reference/types#iterable_big_map<K,%20V>"},r.createElement("code",null,"iterable_big_map")),")")},{type:"K",alias:"k",desc:r.createElement("div",null,"Key to put")},{type:"V",alias:"v",desc:r.createElement("div",null,"Value to put")}],returns:{type:"map<K, V>",desc:r.createElement("div",null,"Copy of map ",r.createElement("code",null,"m")," whith new key-value pair (returns same type as ",r.createElement("code",null,"m"),")")},michelson:"UPDATE",michelson_ref_url:ce+"#instr-UPDATE",related:[{keyword:"Map",link:"/docs/language-basics/container#map"},{keyword:"remove",link:"/docs/reference/expressions/builtins#remove(c%20:%20C,%20i%20:%20T)"},{keyword:"update",link:"/docs/reference/expressions/builtins#update(m%20:%20map<K,%20V>,%20k%20:%20K,%20v%20:%20option<V>)"}]},le.update_set={sig:"update(s : set<T>, e : T, b : bool)",index:"update",desc:r.createElement("div",null,"Adds or removes element ",r.createElement("code",null,"e")," in set ",r.createElement("code",null,"s"),": ",r.createElement("ul",null,r.createElement("li",null,"removes ",r.createElement("code",null,"e")," when ",r.createElement("code",null,"b")," is ",r.createElement("code",null,"false")),r.createElement("li",null,"adds ",r.createElement("code",null,"e")," when ",r.createElement("code",null,"b")," is ",r.createElement("code",null,"true")))),parameters:[{type:"set<T>",alias:"s",desc:r.createElement("div",null,"Set to add or remove element from")},{type:"T",withLink:!1,alias:"e",desc:r.createElement("div",null,"element to add/remove")},{type:"bool",alias:"b",desc:r.createElement("div",null,"Optional value to decide to add or remove")}],returns:{type:"setT>",desc:r.createElement("div",null,"Copy of set ",r.createElement("code",null,"s")," with element ",r.createElement("code",null,"e")," added or removed.")},related:[{keyword:"Set",link:"/docs/language-basics/container#set"},{keyword:"add",link:"/docs/reference/instructions/containers#sadde"},{keyword:"remove",link:"/docs/reference/instructions/containers#sremovee"}]},le.update_map={sig:"update(m : map<K, V>, k : K, v : option<T>)",index:"update",desc:r.createElement("div",null,"Adds or removes value ",r.createElement("code",null,"v")," from associated to key ",r.createElement("code",null,"k")," in map ",r.createElement("code",null,"m"),": ",r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"none")," removes key ",r.createElement("code",null,"k")),r.createElement("li",null,r.createElement("code",null,"some(v)"),", adds key ",r.createElement("code",null,"k")," with value ",r.createElement("code",null,"v")))),parameters:[{type:"map<K, V>",alias:"m",desc:r.createElement("div",null,"Map (or ",r.createElement(a.Z,{to:"/docs/reference/types#big_map<K,%20V>"},r.createElement("code",null,"big_map"))," or ",r.createElement(a.Z,{to:"/docs/reference/types#iterable_big_map<K,%20V>"},r.createElement("code",null,"iterable_big_map")),")")},{type:"K",withLink:!1,alias:"k",desc:r.createElement("div",null,"Key to add/remove")},{type:"option<T>",alias:"v",desc:r.createElement("div",null,"Optional value to associate to ",r.createElement("code",null,"k"))}],returns:{type:"map<K, V>",desc:r.createElement("div",null,"Copy of map ",r.createElement("code",null,"m")," where ",r.createElement("code",null,"k")," is associated to ",r.createElement("code",null))},michelson:"UPDATE",michelson_ref_url:ce+"#instr-UPDATE",related:[{keyword:"Map",link:"/docs/language-basics/container#map"},{keyword:"put",link:"/docs/reference/instructions/containers#mputk-v"},{keyword:"remove",link:"/docs/reference/expressions/builtins#remove(c%20:%20C,%20i%20:%20T)"}]},le.remove={sig:"remove(c : C, i : T)",desc:r.createElement("div",null,"Returns a copy of ",r.createElement("code",null,"c")," without item ",r.createElement("code",null,"i"),"."),parameters:[{type:"C",withLink:!1,alias:"c",desc:r.createElement("div",null,"Container to remove element from; ",r.createElement("code",null,"C")," is either:",r.createElement("ul",null,r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#set<T>"},r.createElement("code",null,"set"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#map<K,%20V>"},r.createElement("code",null,"map"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#big_map<K,%20V>"},r.createElement("code",null,"big_map"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#iterable_big_map<K,%20V>"},r.createElement("code",null,"iterable_big_map")))))},{type:"T",withLink:!1,alias:"i",desc:r.createElement("div",null,"Item to remove (key value for map containers).")}],returns:{type:"C",desc:r.createElement("div",null,"Container that contains all elements from ",r.createElement("code",null,"c")," except ",r.createElement("code",null,"i"))},michelson:"UPDATE",michelson_ref_url:ce+"#instr-UPDATE",related:[{keyword:"Containers",link:"/docs/language-basics/container"}]},le.contains={sig:"contains(c : C, e : T)",desc:r.createElement("div",null,"Tests whether element ",r.createElement("code",null,"e")," is contained in ",r.createElement("code",null,"c")," or not."),parameters:[{type:"C",alias:"c",desc:r.createElement("div",null,"C must be either:",r.createElement("ul",null,r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#set<T>"},r.createElement("code",null,"set"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#list<T>"},r.createElement("code",null,"list"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#map<K,%20V>"},r.createElement("code",null,"map"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#big_map<K,%20V>"},r.createElement("code",null,"big_map"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#iterable_big_map<K,%20V>"},r.createElement("code",null,"iterable_big_map")))))},{type:"T",alias:"e",desc:r.createElement("div",null,"Element to test")}],returns:{type:"bool",desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"true")," when ",r.createElement("code",null,"e")," is contained in ",r.createElement("code",null,"c")),r.createElement("li",null,r.createElement("code",null,"false")," when ",r.createElement("code",null,"e")," is ",r.createElement("i",null,"not")," contained in ",r.createElement("code",null,"c"))))},michelson:"MEM",michelson_ref_url:ce+"#instr-MEM",related:[{keyword:"Containers",link:"/docs/language-basics/container"}]},le.min={sig:"min(a : T, b : T)",desc:r.createElement("div",null,"Returns minimum value between ",r.createElement("code",null,"a")," and ",r.createElement("code",null,"b")),parameters:[{type:"T",alias:"a",desc:r.createElement("div",null,"First element to compare")},{type:"T",alias:"b",desc:r.createElement("div",null,"Second element to compare")}],returns:{type:"T",desc:r.createElement("div",null,"Minimum value. ",r.createElement("code",null,"T")," must be a ",r.createElement(a.Z,{to:"/docs/language-basics/types#comparable"},"comparable")," type.")},related:[{keyword:"Basic types",link:"/docs/language-basics/types"}]},le.max={sig:"max(a : T, b : T)",desc:r.createElement("div",null,"Returns maximum value between ",r.createElement("code",null,"a")," and ",r.createElement("code",null,"b")),parameters:[{type:"T",alias:"a",desc:r.createElement("div",null,"First element to compare")},{type:"T",alias:"b",desc:r.createElement("div",null,"Second element to compare")}],returns:{type:"T",desc:r.createElement("div",null,"Maximum value. ",r.createElement("code",null,"T")," must be a ",r.createElement(a.Z,{to:"/docs/language-basics/types#comparable"},"comparable")," type.")},related:[{keyword:"Basic types",link:"/docs/language-basics/types"}]},le.abs={sig:"abs(t : T)",desc:r.createElement(d,null),parameters:[{type:"T",alias:"t",desc:r.createElement("div",null,"Value of type ",r.createElement("code",null,"int")," or ",r.createElement("code",null,"rational"))}],returns:{type:"R",withLink:!1,desc:r.createElement("div",null,"Absolute value of ",r.createElement("code",null,"t"))},michelson:"ABS",michelson_ref_url:ce+"#instr-ABS",related:[{keyword:"int_to_nat",link:"/docs/reference/expressions/builtins#int_to_nat(i%20:%20int)"}]},le.concat={sig:"concat",desc:r.createElement(f.ZP,null),returns:{type:"T",withLink:!1,desc:r.createElement("div",null,"Concantenation of 2 values or list of values of type",r.createElement("ul",null,r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#string"},r.createElement("code",null,"string"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#bytes"},r.createElement("code",null,"bytes"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#list<T>"},r.createElement("code",null,"list<T>")))))},michelson:"CONCAT",michelson_ref_url:ce+"#instr-CONCAT",related:[{keyword:"string",link:"/docs/reference/types#string"},{keyword:"bytes",link:"/docs/reference/types#bytes"},{keyword:"+",link:"/docs/reference/expressions/operators/arithmetic#a--b"}]},le.slice={sig:"slice(s : T, o : nat, l : nat)",desc:r.createElement(re,null),parameters:[{type:"T",alias:"s",desc:r.createElement("div",null,"Sequence to slice, T must be either:",r.createElement("ul",null,r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#string"},r.createElement("code",null,"string"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#bytes"},r.createElement("code",null,"bytes")))))},{type:"nat",alias:"o",desc:r.createElement("div",null,"Offset to start sub sequence")},{type:"nat",alias:"l",desc:r.createElement("div",null,"Length of sub sequence")}],returns:{type:"option<T>",desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"none")," if a problem occured (offset + length out of bounds)"),r.createElement("li",null,r.createElement("code",null,"some(v)"),", ",r.createElement("code",null,"v")," being the value of sub sequence")))},michelson:"SLICE",michelson_ref_url:ce+"#instr-SLICE",related:[{keyword:"string",link:"/docs/reference/types#string"}]},le.length={sig:"length(o : T)",desc:r.createElement("div",null,"Returns the length of a string or bytes value, or the number of elements of a container."),parameters:[{type:"T",alias:"o",desc:r.createElement("div",null,"T must be either:",r.createElement("ul",null,r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#string"},r.createElement("code",null,"string"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#bytes"},r.createElement("code",null,"bytes"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#set<T>"},r.createElement("code",null,"set"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#list<T>"},r.createElement("code",null,"list"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#map<K,%20V>"},r.createElement("code",null,"map"))),r.createElement("li",null,r.createElement(a.Z,{to:"/docs/reference/types#iterable_big_map<K,%20V>"},r.createElement("code",null,"iterable_big_map")))))}],returns:{type:"nat",desc:r.createElement("div",null,"Length or size of argument ",r.createElement("code",null,"o"))},michelson:"SIZE",michelson_ref_url:ce+"#instr-SIZE",related:[{keyword:"string",link:"/docs/reference/types#string"},{keyword:"bytes",link:"/docs/reference/types#bytes"},{keyword:"Containers",link:"/docs/language-basics/container"}]},le.is_implicit_address={sig:"is_implicit_address(a : address)",desc:r.createElement("div",null,"Returns whether the address parameter is a ",r.createElement("code",null,"tz1")," ",r.createElement("code",null,"tz2")," ",r.createElement("code",null,"tz3")," or ",r.createElement("code",null,"tz4"),", that is whether it is an ",r.createElement("a",{href:"https://opentezos.com/tezos-basics/operations/#implicit-accounts-and-originated-accounts",target:"_blank"},"implicit address"),"."),parameters:[{type:"address",alias:"a",desc:r.createElement("div",null,"Address to check")}],returns:{type:"bool",desc:r.createElement("div",null,r.createElement("code",null,"true")," if a is implicit, ",r.createElement("code",null,"false")," otherwise")}},le.is_none={sig:"is_none(o : option<T>)",desc:r.createElement(M,null),parameters:[{type:"option<T>",alias:"o",desc:r.createElement("div",null,"Optional value to test if it is none")}],returns:{type:"bool",desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"true")," when ",r.createElement("code",null,"o")," is none"),r.createElement("li",null,r.createElement("code",null,"false")," when ",r.createElement("code",null,"o")," is some ")))},related:[{keyword:"Option",link:"/docs/language-basics/composite#option"}]},le.is_some={sig:"is_some(o : option<T>)",desc:r.createElement(S,null),parameters:[{type:"option<T>",alias:"o",desc:r.createElement("div",null,"Optional value to test if it is some")}],returns:{type:"bool",desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"true")," when ",r.createElement("code",null,"o")," is some"),r.createElement("li",null,r.createElement("code",null,"false")," when ",r.createElement("code",null,"o")," is none ")))},related:[{keyword:"Option",link:"/docs/language-basics/composite#option"}]},le.int_to_nat={sig:"int_to_nat(i : int)",desc:r.createElement("div",null,"Converts an ",r.createElement(a.Z,{to:"/docs/reference/types#int"},r.createElement("code",null,"int"))," value to an ",r.createElement(a.Z,{to:"/docs/reference/types#option<T>"},r.createElement("code",null,"option")),"` of ",r.createElement(a.Z,{to:"/docs/reference/types#nat"},r.createElement("code",null,"nat"))," value."),parameters:[{type:"int",alias:"i",desc:r.createElement("div",null,"Integer to convert")}],returns:{type:"option<nat>",withLink:!1,desc:r.createElement("div",null,"Optional natural value:",r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"some(n)")," when ",r.createElement("code",null,"i")," is positive"),r.createElement("li",null,r.createElement("code",null,"none")," otherwise")))},michelson:"ISNAT",michelson_ref_url:ce+"#instr-ISNAT",related:[{keyword:"nat",link:"/docs/reference/types#nat"},{keyword:"int",link:"/docs/reference/types#int"},{keyword:"option",link:"/docs/reference/types#option<T>"},{keyword:"abs",link:"/docs/reference/expressions/builtins#abs(t%20:%20T)"}]},le.floor={sig:"floor(r : rational)",desc:r.createElement("div",null,"Converts a ",r.createElement(a.Z,{to:"/docs/reference/types#rational"},r.createElement("code",null,"rational"))," to an ",r.createElement(a.Z,{to:"/docs/reference/types#int"},r.createElement("code",null,"int"))," with ",r.createElement("a",{href:"https://en.wikipedia.org/wiki/Floor_and_ceiling_functions",target:"_blank"},"floor")," policy"),parameters:[{type:"rational",alias:"r",desc:r.createElement("div",null)}],returns:{type:"int",desc:r.createElement("div",null,"Floored integer")},related:[{keyword:"ceil",link:"/docs/reference/expressions/builtins#ceil(r%20:%20rational)"}]},le.ceil={sig:"ceil(r : rational)",desc:r.createElement("div",null,"Converts a ",r.createElement(a.Z,{to:"/docs/reference/types#rational"},r.createElement("code",null,"rational"))," to an ",r.createElement(a.Z,{to:"/docs/reference/types#int"},r.createElement("code",null,"int"))," with ",r.createElement("a",{href:"https://en.wikipedia.org/wiki/Floor_and_ceiling_functions",target:"_blank"},"ceiling")," policy"),parameters:[{type:"rational",alias:"r",desc:r.createElement("div",null)}],returns:{type:"int",desc:r.createElement("div",null,"Ceiled integer")},related:[{keyword:"floor",link:"/docs/reference/expressions/builtins#floor(r%20:%20rational)"}]},le.simplify_rational={sig:"simplify_rational(r : rational)",desc:r.createElement("div",null,"Simplifies a ",r.createElement(a.Z,{to:"/docs/reference/types#rational"},r.createElement("code",null,"rational"))," with ",r.createElement(a.Z,{to:"https://en.wikipedia.org/wiki/Euclidean_algorithm"},"Euclidean")," algorithm"),parameters:[{type:"rational",alias:"r",desc:r.createElement("div",null)}],returns:{type:"rational",desc:r.createElement("div",null,"Rational simplified")},related:[{keyword:"rational",link:"/docs/reference/types#rational"},{keyword:"get_numerator",link:"/docs/reference/expressions/builtins#get_numerator(r%20:%20rational)"},{keyword:"get_denominator",link:"/docs/reference/expressions/builtins#get_denominator(r%20:%20rational)"}]},le.get_numerator={sig:"get_numerator(r : rational)",desc:r.createElement("div",null,"Gets the numerator of a ",r.createElement(a.Z,{to:"/docs/reference/types#rational"},r.createElement("code",null,"rational"))),parameters:[{type:"rational",alias:"r",desc:r.createElement("div",null)}],returns:{type:"int",desc:r.createElement("div",null,"Numerator of the rational")},related:[{keyword:"rational",link:"/docs/reference/types#rational"},{keyword:"int",link:"/docs/reference/types#int"},{keyword:"simplify_rational",link:"/docs/reference/expressions/builtins#simplify_rational(r%20:%20rational)"},{keyword:"get_denominator",link:"/docs/reference/expressions/builtins#get_denominator(r%20:%20rational)"}]},le.get_denominator={sig:"get_denominator(r : rational)",desc:r.createElement("div",null,"Gets the denominator of a ",r.createElement(a.Z,{to:"/docs/reference/types#rational"},r.createElement("code",null,"rational"))),parameters:[{type:"rational",alias:"r",desc:r.createElement("div",null)}],returns:{type:"nat",desc:r.createElement("div",null,"Denominator of the rational")},related:[{keyword:"rational",link:"/docs/reference/types#rational"},{keyword:"nat",link:"/docs/reference/types#nat"},{keyword:"simplify_rational",link:"/docs/reference/expressions/builtins#simplify_rational(r%20:%20rational)"},{keyword:"get_numerator",link:"/docs/reference/expressions/builtins#get_numerator(r%20:%20rational)"}]},le.bytes_to_nat={sig:"bytes_to_nat(b : bytes)",desc:r.createElement("div",null,"Converts bytes to a natural."),parameters:[{type:"bytes",alias:"b",desc:r.createElement("div",null,"Bytes to convert")}],returns:{type:"nat",desc:r.createElement("div",null,"Natural converted to bytes")},related:[{keyword:"Conversion",link:"/docs/language-basics/types#conversion"},{keyword:"bytes",link:"/docs/reference/types#bytes"},{keyword:"nat",link:"/docs/reference/types#nat"}]},le.nat_to_bytes={sig:"nat_to_bytes(n : nat)",desc:r.createElement("div",null,"Converts a natural to bytes."),parameters:[{type:"nat",alias:"n",desc:r.createElement("div",null,"Nat to convert")}],returns:{type:"bytes",desc:r.createElement("div",null,"Bytes converted to nat")},related:[{keyword:"Conversion",link:"/docs/language-basics/types#conversion"},{keyword:"nat",link:"/docs/reference/types#nat"},{keyword:"bytes",link:"/docs/reference/types#bytes"}]},le.nat_to_string={sig:"nat_to_string(n : nat)",desc:r.createElement("div",null,"Converts a natural to a string."),parameters:[{type:"nat",alias:"n",desc:r.createElement("div",null,"Nat to convert")}],returns:{type:"string",desc:r.createElement("div",null,"String converted to nat")},related:[{keyword:"Conversion",link:"/docs/language-basics/types#conversion"},{keyword:"nat",link:"/docs/reference/types#nat"},{keyword:"string",link:"/docs/reference/types#string"}]},le.pack={sig:"pack(o : T)",desc:r.createElement("div",null,"Serializes any value of ",r.createElement(a.Z,{to:"/docs/language-basics/types#packable"},"packable")," type to a ",r.createElement(a.Z,{to:"/docs/reference/types#bytes"},r.createElement("code",null,"bytes"))," representation."),parameters:[{type:"T",alias:"o",desc:r.createElement("div",null,"Value of ",r.createElement(a.Z,{to:"/docs/language-basics/types#packable"},"packable")," type ",r.createElement("code",null,"T"))}],returns:{type:"bytes",desc:r.createElement("div",null,"Packed value")},michelson:"PACK",michelson_ref_url:ce+"#instr-PACK",related:[{keyword:"bytes",link:"/docs/reference/types#bytes"},{keyword:"unpack",link:"/docs/reference/expressions/builtins#unpack<T>(b%20:%20bytes)"}]},le.unpack={sig:"unpack<T>(b : bytes)",desc:r.createElement(oe,null),parameters:[{type:"bytes",alias:"b",desc:r.createElement("div",null,"Bytes to unpack")}],returns:{type:"option<T>",desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"none")," when ",r.createElement("code",null,"b")," is unpackable of type ",r.createElement("code",null,"T")),r.createElement("li",null,r.createElement("code",null,"some(v)")," ",r.createElement("code",null,"v")," being the value returned by unpacking process ")))},michelson:"UNPACK",michelson_ref_url:ce+"#instr-UNPACK",related:[{keyword:"bytes",link:"/docs/reference/types#bytes"},{keyword:"pack",link:"/docs/reference/expressions/builtins#pack(o%20:%20T)"}]},le.set_delegate={sig:"set_delegate(opkh : option<key_hash>)",desc:r.createElement("div",null,"Sets delegate account for current contract."),parameters:[{type:"option<key_hash>",alias:"opkh",desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"none")," remove delegation of current contract"),r.createElement("li",null,r.createElement("code",null,"some(pkh)")," update delegation of current contract with address behind ",r.createElement("code",null,"pkh")," ")))}],returns:{type:"operation",desc:r.createElement("div",null,"Operation of type ")},michelson:"SET_DELEGATE",michelson_ref_url:ce+"#instr-SET_DELEGATE",related:[]},le.key_hash_to_contract={sig:"key_hash_to_contract(pkh : key_hash)",desc:r.createElement("div",null,"Converts key_hash to contract."),parameters:[{type:"key_hash",alias:"pkh",desc:r.createElement("div",null,"key hash to convert")}],returns:{type:"contract<unit>",withLink:!1,desc:r.createElement("div",null,"The extracted contract unit")},michelson:"IMPLICIT_ACCOUNT",michelson_ref_url:ce+"#instr-IMPLICIT_ACCOUNT",related:[{keyword:"Cryptography",link:"/docs/language-basics/crypto"}]},le.contract_to_address={sig:"contract_to_address(c : contract<T>)",desc:r.createElement("div",null,"Returns the address of a contract."),parameters:[{type:"contract",alias:"c",desc:r.createElement("div",null,"Contract to get the address of")}],returns:{type:"address",desc:r.createElement("div",null,"Address of ",r.createElement("code",null,"c"))},related:[{keyword:"Cryptography",link:"/docs/language-basics/crypto"}]},le.address_to_contract={sig:"address_to_contract<T>(a : address)",desc:r.createElement("div",null,r.createElement("p",null,"Converts address ",r.createElement("code",null,"a")," to a ",r.createElement("code",null,"contract<T>")," value to be used as parameter of ",r.createElement(a.Z,{to:"/docs/reference/expressions/builtins#make_operation(a%20:%20tez,%20c%20:%20contract<T>,%20arg%20:%20T)"},r.createElement("code",null,"make_operation")),"."),r.createElement("p",null,r.createElement("code",null,"T")," is:",r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"unit")," for an account address (",r.createElement("code",null,"tz1..."),")"),r.createElement("li",null,"the type of the ",r.createElement("i",null,"parameter")," section for a contract address")),"When the contract's parameter is annotated it is easier to use ",r.createElement(a.Z,{to:"/docs/reference/expressions/builtins#get_entrypoint<T>(s,%20a%20:%20address)"},r.createElement("code",null,"get_entrypoint"))," builtin.")),parameters:[{type:"address",alias:"a",desc:r.createElement("div",null,"Address to convert")}],returns:{type:"option<contract<T>>",withLink:!1,desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"none")," when the address or the path to entrypoint is invalid"),r.createElement("li",null,r.createElement("code",null,"some")," of a ",r.createElement("code",null,"contract<T>")," value")))},related:[{keyword:"Operation",link:"/docs/reference/instructions/operation"},{keyword:"get_entrypoint",link:"/docs/reference/expressions/builtins#get_entrypoint<T>(s,%20a%20:%20address)"},{keyword:"make_operation",link:"/docs/reference/expressions/builtins#make_operation(a%20:%20tez,%20c%20:%20contract<T>,%20arg%20:%20T)"}]},le.key_to_address={sig:"key_to_address(k : key)",desc:r.createElement("div",null,"Converts a key to an address"),parameters:[{type:"key",alias:"k",desc:r.createElement("div",null,"Key to convert")}],returns:{type:"address",desc:r.createElement("div",null,"Key converted to address")},related:[{keyword:"Cryptography",link:"/docs/language-basics/crypto"}]},le.blake2b={sig:"blake2b(b : bytes)",desc:r.createElement("div",null,"Hashes bytes value with ",r.createElement("a",{href:"https://en.wikipedia.org/wiki/BLAKE_%28hash_function%29",target:"_blank"},"blake2b")," algorithm."),parameters:[{type:"bytes",alias:"b",desc:r.createElement("div",null,"Array of byte to hash")}],returns:{type:"bytes",desc:r.createElement("div",null,"Hash of bytes ",r.createElement("code",null,"b"))},michelson:"BLAKE2B",michelson_ref_url:ce+"#instr-BLAKE2B",related:[{keyword:"Hash",link:"/docs/language-basics/crypto#hash"},{keyword:"keccak",link:"/docs/reference/expressions/builtins#keccak(b%20:%20bytes)"},{keyword:"sha256",link:"/docs/reference/expressions/builtins#sha256(b%20:%20bytes)"},{keyword:"sha3",link:"/docs/reference/expressions/builtins#sha3(b%20:%20bytes)"},{keyword:"sha512",link:"/docs/reference/expressions/builtins#sha512(b%20:%20bytes)"}]},le.sha256={sig:"sha256(b : bytes)",desc:r.createElement("div",null,"Hashes bytes value with sha256 algorithm."),parameters:[{type:"bytes",alias:"b",desc:r.createElement("div",null,"Message to be hashed")}],returns:{type:"bytes",desc:r.createElement("div",null,"Hash of b bytes")},michelson:"SHA256",michelson_ref_url:ce+"#instr-SHA256",related:[{keyword:"Hash",link:"/docs/language-basics/crypto#hash"},{keyword:"blake2b",link:"/docs/reference/expressions/builtins#blake2b(b%20:%20bytes)"},{keyword:"keccak",link:"/docs/reference/expressions/builtins#keccak(b%20:%20bytes)"},{keyword:"sha3",link:"/docs/reference/expressions/builtins#sha3(b%20:%20bytes)"},{keyword:"sha512",link:"/docs/reference/expressions/builtins#sha512(b%20:%20bytes)"}]},le.sha512={sig:"sha512(b : bytes)",desc:r.createElement("div",null,"Hashes bytes value with sha512 algorithm."),parameters:[{type:"bytes",alias:"b",desc:r.createElement("div",null,"Message to be hashed")}],returns:{type:"bytes",desc:r.createElement("div",null,"Hash of b bytes")},michelson:"SHA512",michelson_ref_url:ce+"#instr-SHA512",related:[{keyword:"Hash",link:"/docs/language-basics/crypto#hash"},{keyword:"blake2b",link:"/docs/reference/expressions/builtins#blake2b(b%20:%20bytes)"},{keyword:"keccak",link:"/docs/reference/expressions/builtins#keccak(b%20:%20bytes)"},{keyword:"sha256",link:"/docs/reference/expressions/builtins#sha256(b%20:%20bytes)"},{keyword:"sha3",link:"/docs/reference/expressions/builtins#sha3(b%20:%20bytes)"}]},le.sha3={sig:"sha3(b : bytes)",desc:r.createElement("div",null,"Hashes bytes value with ",r.createElement("a",{href:"https://en.wikipedia.org/wiki/SHA-3",target:"_blank"},"sha3")," algorithm."),parameters:[{type:"bytes",alias:"b",desc:r.createElement("div",null,"Message to be hashed")}],returns:{type:"bytes",desc:r.createElement("div",null,"Hash of b bytes")},michelson:"SHA3",michelson_ref_url:ce+"#instr-SHA3",related:[{keyword:"Hash",link:"/docs/language-basics/crypto#hash"},{keyword:"blake2b",link:"/docs/reference/expressions/builtins#blake2b(b%20:%20bytes)"},{keyword:"keccak",link:"/docs/reference/expressions/builtins#keccak(b%20:%20bytes)"},{keyword:"sha256",link:"/docs/reference/expressions/builtins#sha256(b%20:%20bytes)"},{keyword:"sha512",link:"/docs/reference/expressions/builtins#sha512(b%20:%20bytes)"}]},le.keccak={sig:"keccak(b : bytes)",desc:r.createElement("div",null,"Hashes bytes value with ",r.createElement("a",{href:"https://en.wikipedia.org/wiki/SHA-3",target:"_blank"},"keccak")," algorithm."),parameters:[{type:"bytes",alias:"b",desc:r.createElement("div",null,"Array of byte to hash")}],returns:{type:"bytes",desc:r.createElement("div",null,"Hash of ",r.createElement("code",null,"b"))},michelson:"KECCAK",michelson_ref_url:ce+"#instr-KECCAK",related:[{keyword:"Hash",link:"/docs/language-basics/crypto#hash"},{keyword:"blake2b",link:"/docs/reference/expressions/builtins#blake2b(b%20:%20bytes)"},{keyword:"sha256",link:"/docs/reference/expressions/builtins#sha256(b%20:%20bytes)"},{keyword:"sha3",link:"/docs/reference/expressions/builtins#sha3(b%20:%20bytes)"},{keyword:"sha512",link:"/docs/reference/expressions/builtins#sha512(b%20:%20bytes)"}]},le.key_to_key_hash={sig:"key_to_key_hash(k : key)",desc:r.createElement("div",null,"Converts a key to key_hash."),parameters:[{type:"key",alias:"k",desc:r.createElement("div",null,"key to hash")}],returns:{type:"key_hash",desc:r.createElement("div",null,"hashed value of ",r.createElement("code",null,"k"))},michelson:"HASH_KEY",michelson_ref_url:ce+"#instr-HASH_KEY",related:[{keyword:"Cryptography",link:"/docs/language-basics/crypto"}]},le.check_signature={sig:"check_signature(k : key, s : signature, b : bytes)",desc:r.createElement("div",null,"Checks whether signature ",r.createElement("code",null,"s")," is obtained by signing sequence of bytes ",r.createElement("code",null,"b")," with account public key ",r.createElement("code",null,"k"),"."),parameters:[{type:"key",alias:"k",desc:r.createElement("div",null,"Public key of the account to sign ",r.createElement("code",null,"b"),".")},{type:"signature",alias:"s",desc:r.createElement("div",null,"Signature to be compared with the one obtained by signing ",r.createElement("code",null,"b")," with ",r.createElement("code",null,"k"),".")},{type:"bytes",alias:"b",desc:r.createElement("div",null,"Sequence of bytes to sign with ",r.createElement("code",null,"k")," and to compare to ",r.createElement("code",null,"s"),".")}],returns:{type:"bool",desc:r.createElement("div",null,"Returns ",r.createElement("code",null,"true")," if ",r.createElement("code",null,"s")," is obtained by signing ",r.createElement("code",null,"b")," with ",r.createElement("code",null,"k"),", ",r.createElement("code",null,"false")," otherwise.")},michelson:"CHECK_SIGNATURE",michelson_ref_url:ce+"#instr-CHECK_SIGNATURE",related:[{keyword:"Cryptography",link:"/docs/language-basics/crypto"}]},le.voting_power={sig:"voting_power(k : key_hash)",desc:r.createElement("div",null,"Gets the voting power from a ",r.createElement("code",null,"key_hash")," value."),parameters:[{type:"key_hash",alias:"k",desc:r.createElement("div",null,"Value to get the voting power of")}],returns:{type:"nat",desc:r.createElement("div",null,"Voting power")},michelson:"VOTING_POWER",michelson_ref_url:ce+"#instr-VOTING_POWER",related:[]},le.create_ticket={sig:"create_ticket(s : T, n : nat)",desc:r.createElement("div",null,"Creates a ",r.createElement(a.Z,{to:"/docs/reference/types#s-t"},"ticket")," from a value typed T and an amount."),parameters:[{type:"T",alias:"s",desc:r.createElement("div",null,"The information of the ticket")},{type:"nat",alias:"n",desc:r.createElement("div",null,"The amount of the ticket")}],returns:{type:"option<ticket<T>>",withLink:!1,desc:r.createElement("div",null,"Returns an ",r.createElement(a.Z,{to:"/docs/reference/types#option<T>"},"option")," of ticket. It is ",r.createElement(a.Z,{to:"/docs/reference/expressions/builtins#none<T>"},r.createElement("code",null,"none"))," if ",r.createElement("code",null,"n")," is equal to ",r.createElement("code",null,"0")," (ie. it is not possible to create 0-valued ticket).")},michelson:"TICKET",michelson_ref_url:ce+"#instr-TICKET",related:[{keyword:"join_tickets",link:"/docs/reference/expressions/builtins#join_tickets(t1%20:%20ticket<T>,%20t2%20:%20ticket<T>)"},{keyword:"read_ticket",link:"/docs/reference/expressions/builtins#read_ticket(t%20:%20ticket<T>)"},{keyword:"split_ticket",link:"/docs/reference/expressions/builtins#split_ticket(t%20:%20ticket<T>,%20n1%20:%20nat,%20n2%20:%20nat)"}]},le.read_ticket={sig:"read_ticket(t : ticket<T>)",desc:r.createElement("div",null,"Reads ticket's origin contract, value and amount."),parameters:[{type:"ticket<T>",alias:"t",desc:r.createElement("div",null,"Ticket to read")}],returns:{type:"address * T * nat",withLink:!1,desc:r.createElement("div",null,"Tuple of ticket's address of origin contract, value and the amount")},michelson:"READ_TICKET",michelson_ref_url:ce+"#instr-READ_TICKET",related:[{keyword:"create_ticket",link:"/docs/reference/expressions/builtins#create_ticket(s%20:%20T,%20n%20:%20nat)"},{keyword:"join_tickets",link:"/docs/reference/expressions/builtins#join_tickets(t1%20:%20ticket<T>,%20t2%20:%20ticket<T>)"},{keyword:"split_ticket",link:"/docs/reference/expressions/builtins#split_ticket(t%20:%20ticket<T>,%20n1%20:%20nat,%20n2%20:%20nat)"}]},le.split_ticket={sig:"split_ticket(t : ticket<T>, n1 : nat, n2 : nat)",desc:r.createElement("div",null,"Splits ticket in two new tickets."),parameters:[{type:"ticket<T>",alias:"t",desc:r.createElement("div",null,"Ticket to split")},{type:"nat",alias:"n1",desc:r.createElement("div",null,"Amount of first created ticket")},{type:"nat",alias:"n2",desc:r.createElement("div",null,"Amount of second created ticket")}],returns:{type:"option<ticket<T> * ticket<T>>",withLink:!1,desc:r.createElement("div",null,"Option of pair of created tickets, respectively with ",r.createElement("code",null,"n1")," and ",r.createElement("code",null,"n2")," values.")},michelson:"SPLIT_TICKET",michelson_ref_url:ce+"#instr-SPLIT_TICKET",related:[{keyword:"create_ticket",link:"/docs/reference/expressions/builtins#create_ticket(s%20:%20T,%20n%20:%20nat)"},{keyword:"join_tickets",link:"/docs/reference/expressions/builtins#join_tickets(t1%20:%20ticket<T>,%20t2%20:%20ticket<T>)"},{keyword:"read_ticket",link:"/docs/reference/expressions/builtins#read_ticket(t%20:%20ticket<T>)"}]},le.join_tickets={sig:"join_tickets(t1 : ticket<T>, t2 : ticket<T>)",desc:r.createElement("div",null,"Joins two compatible tickets (same value, same origin contract)."),parameters:[{type:"ticket<T>",alias:"t1",desc:r.createElement("div",null,"First ticket to join")},{type:"ticket<T>",alias:"t2",desc:r.createElement("div",null,"Second ticket to join")}],returns:{type:"option<ticket<T>>",withLink:!1,desc:r.createElement("div",null,"Joined ticket")},michelson:"JOIN_TICKETS",michelson_ref_url:ce+"#instr-JOIN_TICKETS",related:[{keyword:"create_ticket",link:"/docs/reference/expressions/builtins#create_ticket(s%20:%20T,%20n%20:%20nat)"},{keyword:"read_ticket",link:"/docs/reference/expressions/builtins#read_ticket(t%20:%20ticket<T>)"},{keyword:"split_ticket",link:"/docs/reference/expressions/builtins#split_ticket(t%20:%20ticket<T>,%20n1%20:%20nat,%20n2%20:%20nat)"}]},le.sapling_empty_state={sig:"sapling_empty_state(k : key_hash)",desc:r.createElement("div",null,"Creates a sapling state with the specified memo size. The memo is an arbitrary string message encrypted and available to anyone owning the outgoing viewing key."),parameters:[{type:"nat",alias:"n",desc:r.createElement("div",null,"Memo size")}],returns:{type:"sapling_state(n)",desc:r.createElement("div",null,"The fresh sapling state")},michelson:"SAPLING_EMPTY_STATE",michelson_ref_url:ce+"#instr-SAPLING_EMPTY_STATE",related:[{keyword:"Sapling",link:"/docs/language-basics/crypto#sapling"}]},le.sapling_verify_update={sig:"sapling_verify_update(s, t)",desc:r.createElement("div",null,"Applies sapling transaction on sapling state."),parameters:[{type:"sapling_state(n)",alias:"s",desc:r.createElement("div",null,"Sapling state")},{type:"sapling_transaction(n)",alias:"t",desc:r.createElement("div",null,"Sapling transaction")}],returns:{type:"option<bytes * int * sapling_state(n)>",withLink:!1,desc:r.createElement("div",null,"The result")},michelson:"SAPLING_VERIFY_UPDATE",michelson_ref_url:ce+"#instr-SAPLING_VERIFY_UPDATE",related:[{keyword:"Sapling",link:"/docs/language-basics/crypto#sapling"}]},le.pairing_check={sig:"pairing_check(l : list<bls12_381_g1 * bls12_381_g2>)",desc:r.createElement("div",null,"Checks pairing of pairs of ",r.createElement("a",{href:"https://en.wikipedia.org/wiki/BLS_digital_signature",target:"_blank"},"BLS")," values."),parameters:[{type:"list<bls12_381_g1 * bls12_381_g2>",withLink:!1,alias:"l",desc:r.createElement("div",null,"List of pairs of bls curves")}],returns:{type:"bool",desc:r.createElement("div",null,"The result")},michelson:"PAIRING_CHECK",michelson_ref_url:ce+"#instr-PAIRING_CHECK",related:[{keyword:"Elliptic curves",link:"/docs/language-basics/crypto#elliptic-curves"}]},le.open_chest={sig:"open_chest(k : chest_key, c : chest, t : nat)",desc:r.createElement("div",null,"Opens chest ",r.createElement("code",null,"c")," with key ",r.createElement("code",null,"k")," under time ",r.createElement("code",null,"t"),"."),parameters:[{type:"chest_key",alias:"k",desc:r.createElement("div",null,"Chest key")},{type:"chest",alias:"c",desc:r.createElement("div",null,"Chest")},{type:"nat",alias:"t",desc:r.createElement("div",null,'"Time" (number of operations) used to lock the chest')}],returns:{type:"or<bytes, bool>",withLink:!1,desc:r.createElement("div",null,"The returned value has 3 possible values:",r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"left(v)"),", ",r.createElement("code",null,"v")," being the value in the chest"),r.createElement("li",null,r.createElement("code",null,"right(true)")," when chest key ",r.createElement("code",null,"k")," does not open the chest"),r.createElement("li",null,r.createElement("code",null,"right(false)")," when chest key ",r.createElement("code",null,"k")," opens the chest but ",r.createElement("code",null,"t")," parameter is not the value used to lock the chest")))},michelson:"OPEN_CHEST",michelson_ref_url:ce+"#instr-OPEN_CHEST",related:[{keyword:"Cryptography",link:"/docs/language-basics/crypto"}]},le.int_to_date={sig:"int_to_date(i : int)",desc:r.createElement("div",null,"Converts an integer value ",r.createElement("code",null,"i")," to a date, where ",r.createElement("code",null,"i")," is considered as a tiemstamp value, that is the number of seconds since ",r.createElement("code",null,"1970-01-01"),"."),parameters:[{type:"int",alias:"i",desc:r.createElement("div",null,"The timestamp to convert")}],returns:{type:"date",desc:r.createElement("div",null,"Date corresponding to timestamp ",r.createElement("code",null,"i"))},related:[{keyword:"Conversion",link:"/docs/language-basics/types#conversion"},{keyword:"int",link:"/docs/reference/types#int"},{keyword:"date",link:"/docs/reference/types#date"}]},le.mutez_to_nat={sig:"mutez_to_nat(v : tez)",desc:r.createElement(W,null),parameters:[{type:"tez",alias:"v",desc:r.createElement("div",null,"The amount of tez to convert")}],returns:{type:"nat",desc:r.createElement("div",null,"The amount of mutez")},related:[{keyword:"tez",link:"/docs/reference/types#tez"},{keyword:"nat",link:"/docs/reference/types#nat"}]},le.get_entrypoint={sig:"get_entrypoint<T>(s, a : address)",desc:r.createElement(A,null),parameters:[{type:"string literal",withLink:!1,alias:"s",desc:r.createElement("div",null,"Entrypoint name as string literal prefixed by ",r.createElement("code",null,"%"))},{type:"address",alias:"a",desc:r.createElement("div",null,"Address of the entrypoint's contract")}],returns:{type:"option<contract<T>>",withLink:!1,desc:r.createElement("div",null,"Option of entrypoint as a ",r.createElement("code",null,"contract")," value")},related:[{keyword:"transfer",link:"/docs/reference/instructions/operation#transfer"},{keyword:"make_operation",link:"/docs/reference/expressions/builtins#make_operation(a%20:%20tez,%20c%20:%20contract<T>,%20arg%20:%20T)"}],michelson:"CONTRACT",michelson_ref_url:ce+"#instr-CONTRACT"},le.greedy_and={sig:"greedy_and(a : bool, b : bool)",desc:r.createElement("div",null,"Greedy evaluation of boolean conjonction of ",r.createElement("code",null,"a")," and ",r.createElement("code",null,"b"),", meaning that ",r.createElement("code",null,"b")," is evaluated even if ",r.createElement("code",null,"a")," is false."),parameters:[{type:"bool",alias:"a",desc:r.createElement("div",null,"Boolean input")},{type:"bool",alias:"b",desc:r.createElement("div",null,"Boolean input")}],returns:{type:"bool",desc:r.createElement("div",null,"true if ",r.createElement("code",null,"a")," ",r.createElement("i",null,"and")," ",r.createElement("code",null,"b")," are true, false otherwise.")},related:[{keyword:"and",link:"/docs/reference/expressions/operators/arithmetic#a-and-b"},{keyword:"greedy_or",link:"/docs/reference/expressions/builtins#greedy_or(a%20:%20bool,%20b%20:%20bool)"}],michelson:"AND",michelson_ref_url:ce+"#instr-AND"},le.greedy_or={sig:"greedy_or(a : bool, b : bool)",desc:r.createElement("div",null,"Greedy evaluation of boolean disjonction of ",r.createElement("code",null,"a")," and ",r.createElement("code",null,"b"),", meaning that ",r.createElement("code",null,"b")," is evaluated even if ",r.createElement("code",null,"a")," is true."),parameters:[{type:"bool",alias:"a",desc:r.createElement("div",null,"Boolean input")},{type:"bool",alias:"b",desc:r.createElement("div",null,"Boolean input")}],returns:{type:"bool",desc:r.createElement("div",null,"true if ",r.createElement("code",null,"a")," ",r.createElement("i",null,"or")," ",r.createElement("code",null,"b")," is true, false otherwise.")},related:[{keyword:"or",link:"/docs/reference/expressions/operators/arithmetic#a-or-b"},{keyword:"greedy_and",link:"/docs/reference/expressions/builtins#greedy_and(a%20:%20bool,%20b%20:%20bool)"}],michelson:"OR",michelson_ref_url:ce+"#instr-OR"},le.create_contract={sig:"create_contract(handler, delegator, amount, init)",desc:r.createElement(_,null),parameters:[{type:"identifier",withLink:!1,alias:"handler",desc:r.createElement("div",null,"Contract handler declared with ",r.createElement(a.Z,{to:"/docs/reference/declarations/external-contract"},"import")," declaration")},{type:"option<address>",alias:"del",withLink:!1,desc:r.createElement("div",null,"Option of delegate address")},{type:"amount",alias:"tez",desc:r.createElement("div",null,"Amount of balance to transfer to new contract")},{type:"any",withLink:!1,alias:"init",desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,"Record of parameters for Archetype contract"),r.createElement("li",null,"Initial storage value for Michelson contrat")))}],returns:{type:"operation * address",withLink:!1,desc:r.createElement("div",null,"Returns a pair of:",r.createElement("ul",null,r.createElement("li",null,"Operation for contract creation"),r.createElement("li",null,"Address of created contract")))},related:[{keyword:"operation",link:"/docs/reference/types#operation"},{keyword:"set_delegate",link:"/docs/reference/expressions/builtins#set_delegate(opkh%20:%20option<key_hash>)"}],michelson:"CREATE_CONTRACT",michelson_ref_url:ce+"#instr-CREATE_CONTRACT"},le.head={sig:"head(l : list<T>, n : nat)",desc:r.createElement(P.ZP,null),parameters:[{type:"list<T>",alias:"l",desc:r.createElement("div",null,"List to get n first elements")},{type:"nat",withLink:!0,alias:"n",desc:r.createElement("div",null,"Number of elements to consider")}],returns:{type:"list<T>",desc:r.createElement("div",null,"List with n first elements")},fails:[],related:[{keyword:"list",link:"/docs/reference/types#list<T>"},{keyword:"length",link:"/docs/reference/expressions/builtins#length(o%20:%20T)"}]},le.tail={desc:r.createElement(O.ZP,null),sig:"tail(l : list<T>, n : nat)",parameters:[{type:"list<T>",alias:"l",desc:r.createElement("div",null,"List to get n last elements")},{type:"nat",withLink:!0,alias:"n",desc:r.createElement("div",null,"Number of elements to consider")}],returns:{type:"list<T>",desc:r.createElement("div",null,"List with n last elements")},fails:[],related:[{keyword:"list",link:"/docs/reference/types#list<T>"},{keyword:"length",link:"/docs/reference/expressions/builtins#length(o%20:%20T)"}]},le.global_constant={sig:"global_constant<T>(hash)",desc:r.createElement("div",null,"Gets the ",r.createElement(a.Z,{to:"https://tezos.gitlab.io/active/global_constants.html"},"global constant")," associated to ",r.createElement("code",null,"hash"),". ",r.createElement("br",null)," ",r.createElement("br",null),"Check ",r.createElement(a.Z,{to:"https://tzkt.io/constants"},"here")," the list of available global constants on mainnet."),parameters:[{type:"T",alias:"hash",desc:r.createElement("div",null,"Hash of the michelson expression (e.g. ",r.createElement("code",null,"expruQN5r2umbZVHy6WynYM8f71F8zS4AERz9bugF8UkPBEqrHLuU8"),")")}],returns:{type:"T",desc:r.createElement("div",null,"Global constant")}},le)},6912:function(e,t,n){n.d(t,{_:function(){return b}});var a=n(7294),r=n(7462),l=n(3366),s=n(3905),i=["components"],o={toc:[]};function c(e){var t=e.components,n=(0,l.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Number of tez held by the contract."),(0,s.kt)("p",null,"It is indeed possible to send tez to a contract, either with a buitlin ",(0,s.kt)("em",{parentName:"p"},"tansfer")," command (tezos-client, wallets, ...) or when calling an entrypoint."),(0,s.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Note however that it is ",(0,s.kt)("strong",{parentName:"p"},"not")," possible to transfer the balance of a contract unless it is ",(0,s.kt)("strong",{parentName:"p"},"explicitely")," made possible by entrypoints."))),(0,s.kt)("p",null,"If a contract is receiving tez, it is recommended to add the following ",(0,s.kt)("inlineCode",{parentName:"p"},"collect")," entrypoint:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-archetype"},"entry collect(collector : address) {\n  called by owner\n  effect {\n    transfer balance to collector\n  }\n}\n")))}c.isMDXComponent=!0;var d=n(6886),p=n(2156),m=["components"],u={toc:[]};function k(e){var t=e.components,n=(0,l.Z)(e,m);return(0,s.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Chain unique identifier."),(0,s.kt)("p",null,"It is typically used in ",(0,s.kt)("em",{parentName:"p"},"signed")," permits data to be ",(0,s.kt)("em",{parentName:"p"},"verified")," on chain, in order to avoid replay attacks from testnet to mainnet (so that a permit from testnet cannot be used on mainnet)."),(0,s.kt)("p",null,"The table below shows the chain id of the main networks:"),(0,s.kt)(d.ZP,{container:!0,mdxType:"Grid"},(0,s.kt)(d.ZP,{xs:12,sm:12,md:2.5,mdxType:"Grid"},"Mainnet"),(0,s.kt)(d.ZP,{xs:12,sm:12,md:9.5,mdxType:"Grid"},(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},'"NetXdQprcVkpaWU"'))),(0,s.kt)(d.ZP,{xs:12,mdxType:"Grid"},(0,s.kt)(p.Z,{mdxType:"ThemedDivider"})),(0,s.kt)(d.ZP,{xs:12,sm:12,md:2.5,style:{marginTop:"18px"},mdxType:"Grid"},"Testnet (Ithacanet)"),(0,s.kt)(d.ZP,{xs:12,sm:12,md:9.5,style:{marginTop:"18px"},mdxType:"Grid"},(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},'"NetXnHfVqm9iesp"')))),(0,s.kt)("p",null,"The chain id is provided by the tezos node at:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<node url>/chains/main/chain_id\n")))}k.isMDXComponent=!0;var y="https://tezos.gitlab.io/michelson-reference",b={minblocktime:{desc:a.createElement("div",null,"Current minimal block time (between two blocks) in seconds."),type:"nat",michelson:"MIN_BLOCK_TIME",michelson_ref_url:y+"/#instr-MIN_BLOCK_TIME",related:[]},balance:{desc:a.createElement(c,null),type:"tez",michelson:"BALANCE",michelson_ref_url:y+"/#instr-BALANCE",related:[]},self_chain_id:{desc:a.createElement(k,null),type:"chain_id",michelson:"CHAIN_ID",michelson_ref_url:y+"/#instr-CHAIN_ID",related:[]},caller:{desc:"Address calling the contract. It may be an account or another smart contract.",type:"address",michelson:"SENDER",michelson_ref_base_url:y+"/#SENDER",related:[{keyword:"source",link:"/docs/reference/expressions/constants#source"},{keyword:"called by",link:"/docs/reference/declarations/entrypoint#called-by"}]},level:{desc:a.createElement("div",null,"Current block level."),type:"nat",michelson:"LEVEL",michelson_ref_url:y+"/#instr-LEVEL",related:[]},now:{desc:a.createElement("div",null,"Block date. It is constant throughout endpoint execution."),type:"date",michelson:"NOW",michelson_ref_url:y+"/#instr-NOW",related:[]},self_address:{desc:a.createElement("div",null,"Address of current contract."),type:"address",michelson:"SELF_ADDRESS",michelson_ref_url:y+"/#instr-SELF_ADDRESS",related:[{keyword:"caller",link:"/docs/reference/expressions/constants#caller"},{keyword:"sourced by",link:"/docs/reference/declarations/entrypoint#sourced-by"}]},source:{desc:"Address of the account at the origin of the call to the entrypoint. If Alice calls contract A, which calls contract B, then source in contract B is Alice (and caller in contract B is contract A).",type:"address",michelson:"SOURCE",michelson_ref_url:y+"/#instr-SOURCE",related:[{keyword:"caller",link:"/docs/reference/expressions/constants#caller"},{keyword:"sourced by",link:"/docs/reference/declarations/entrypoint#sourced-by"}]},state:{desc:a.createElement("div",null,"State of the contract when designed as a state machine. It is changed with ",a.createElement("code",null,"transition")," entrypoints, not assignment instructions.",a.createElement("p",null),"The Michelson representation is a ",a.createElement("code",null,"nat")," storage variable named ",a.createElement("code",null,"_state"),"."),related:[{keyword:"State Machine",link:"/docs/statemachine"},{keyword:"States declaration",link:"/docs/reference/declarations/compositetypes#states"},{keyword:"Transition",link:"/docs/reference/declarations/compositetypes#transition"},{keyword:"Assignment",link:"/docs/reference/instructions/assignment"}]},transferred:{desc:a.createElement("div",null,"Amount of tez sent to current entrypoint execution."),type:"tez",michelson:"AMOUNT",michelson_ref_url:y+"/#instr-AMOUNT",related:[{keyword:"tez",link:"/docs/reference/types#tez"},{keyword:"balance",link:"/docs/reference/expressions/constants#balance"}]},total_voting_power:{desc:"Total voting power of all contracts.",type:"nat",michelson:"TOTAL_VOTING_POWER",michelson_ref_url:y+"/#instr-TOTAL_VOTING_POWER",related:[{keyword:"voting_power",link:"/docs/reference/expressions/builtins#voting_power(k%20:%20key_hash)"}]}}},8864:function(e,t,n){n.d(t,{m:function(){return r}});var a="/docs/reference/expressions",r={controls:[{label:"if then else",link:a+"/controls#if-then-else"},{label:"match with",link:a+"/controls#match-with"},{label:"? :",link:a+"/controls#a--b--c"}],declaration:[{label:"let in",link:a+"/declaration"}],asset:[{label:"[]",link:a+"/asset#ak--asset_keya",desc:"Gets asset record value from key"},{label:"[].",link:a+"/asset#ak--asset_keyaf",desc:"Gets an asset field from key"},{label:"[]?.",link:a+"/asset#ak--asset_keyaf-1",desc:"Gets an option of asset field from key"},{label:"contains",link:a+"/asset#acontainsk--asset_keya",desc:"Tests whether the collection contains an asset"},{label:"count",link:a+"/asset#acount",desc:"Returns the number of assets in collection"},{label:"nth",link:a+"/asset#anthi--nat",desc:"Returns nth element in collection"},{label:"sort",link:a+"/asset#asortf",desc:"Sorts assets according to a field"},{label:"sum",link:a+"/asset#asumf",desc:"Sums values of asset field"},{label:"select",link:a+"/asset#aselectp",desc:"Selects assets that verify a predicate"},{label:"head",link:a+"/asset#aheadi--nat",desc:"Returns first assets"},{label:"tail",link:a+"/asset#ataili--nat",desc:"Returns last assets"},{label:"to_container",link:a+"/asset#ato_container",desc:"Returns collection as basic container"}],assettypes:[{label:"asset_key<A>",link:"/docs/reference/types#asset_key<A>",desc:"Type of the asset identifier"},{label:"asset_value<A>",link:"/docs/reference/types#asset_value<A>",desc:"Type of the asset data"},{label:"asset_container<A>",link:"/docs/reference/types#asset_container<A>",desc:"Type of the asset collection"},{label:"asset_view<A>",link:"/docs/reference/types#asset_view<A>",desc:"Read-only collection of assets"}],assetbuiltins:[{label:"make_asset",link:"/docs/reference/expressions/builtins#make_asset(k%20:%20asset_key<A>,%20v%20:%20asset_value<A>)",desc:"Creates an asset object from key and value"}]}},9110:function(e,t,n){n.d(t,{G:function(){return b}});var a=n(9960),r=n(7294),l=n(7462),s=n(3366),i=n(3905),o=["components"],c={toc:[]};function d(e){var t=e.components,n=(0,s.Z)(e,o);return(0,i.kt)("wrapper",(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Returns the euclidean quotient of two ",(0,i.kt)("inlineCode",{parentName:"p"},"a")," divided by ",(0,i.kt)("inlineCode",{parentName:"p"},"b"),"; ",(0,i.kt)("inlineCode",{parentName:"p"},"a div b")," is equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'match a /% b with\n| some(q,r) -> q\n| none -> fail("DIV_BY_ZERO")\nend\n')))}d.isMDXComponent=!0;var p=["components"],m={toc:[]};function u(e){var t=e.components,n=(0,s.Z)(e,p);return(0,i.kt)("wrapper",(0,l.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Returns the euclidean remainder of ",(0,i.kt)("inlineCode",{parentName:"p"},"a")," divided by ",(0,i.kt)("inlineCode",{parentName:"p"},"b")," (modulus); ",(0,i.kt)("inlineCode",{parentName:"p"},"a % b")," is equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'match a /% b with\n| some(q,r) -> r\n| none -> fail("DIV_BY_ZERO")\nend\n')))}u.isMDXComponent=!0;var k=function(e){return[{typa:"bool",typb:"bool",typr:e},{typa:"nat",typb:"nat",typr:e},{typa:"int",typb:"int",typr:e},{typa:"tez",typb:"tez",typr:e},{typa:"rational",typb:"rational",typr:e},{typa:"date",typb:"date",typr:e},{typa:"duration",typb:"duration",typr:e},{typa:"enum",typb:"enum",typr:e},{typa:"key",typb:"key",typr:e},{typa:"key_hash",typb:"key_hash",typr:e},{typa:"signature",typb:"signature",typr:e},{typa:"option<T>",typb:"option<T>",typr:e,comment:r.createElement("div",null,"when ",r.createElement("code",null,"T")," is comparable.")},{typa:"or<T1,T2>",typb:"or<T1,T2>",typr:e,comment:r.createElement("div",null,"when ",r.createElement("code",null,"T1")," and ",r.createElement("code",null,"T2")," are comparable.")},{typa:"asset_key<A>",typb:"asset_key<A>",typr:e},{typa:"tuple",typb:"tuple",typr:e,comment:r.createElement("div",null,"when all composing types are comparable")},{typa:"string",typb:"string",typr:e},{typa:"bytes",typb:"bytes",typr:e},{typa:"address",typb:"address",typr:e},{typa:"chain_id",typb:"chain_id",typr:e},{typa:"unit",typb:"unit",typr:e},{typa:"never",typb:"never",typr:e}]},y=function(e){return[{typa:"int",typb:"nat",typr:e},{typa:"nat",typb:"int",typr:e},{typa:"int",typb:"rational",typr:e},{typa:"rational",typb:"int",typr:e},{typa:"nat",typb:"rational",typr:e},{typa:"rational",typb:"nat",typr:e}]},b={add:{label:"a + b",link:"a--b",desc:r.createElement("div",null,"Adds numbers or concatenates strings."),types:[{typa:"nat",typb:"nat",typr:"nat"},{typa:"int",typb:"int",typr:"int"},{typa:"rational",typb:"rational",typr:"rational"},{typa:"tez",typb:"tez",typr:"tez"},{typa:"string",typb:"string",typr:"string"},{typa:"duration",typb:"duration",typr:"duration"},{typa:"date",typb:"duration",typr:"date"},{typa:"duration",typb:"date",typr:"date"},{typa:"bls12_381_fr",typb:"bls12_381_fr",typr:"bls12_381_fr"},{typa:"bls12_381_g1",typb:"bls12_381_g1",typr:"bls12_381_g1"},{typa:"bls12_381_g2",typb:"bls12_381_g2",typr:"bls12_381_g2"}],promotions:[{typa:"nat",typb:"int",typr:"int"},{typa:"int",typb:"nat",typr:"int"},{typa:"rational",typb:"nat",typr:"rational"},{typa:"nat",typb:"rational",typr:"rational"},{typa:"rational",typb:"int",typr:"rational"},{typa:"nat",typb:"rational",typr:"rational"},{typa:"bls12_381_fr",typb:"nat",typr:"bls12_381_fr"},{typa:"bls12_381_fr",typb:"int",typr:"bls12_381_fr"},{typa:"nat",typb:"bls12_381_fr",typr:"bls12_381_fr"},{typa:"int",typb:"bls12_381_fr",typr:"bls12_381_fr"}],fails:[{keyword:'"proto.alpha.tez.addition_overflow"',desc:r.createElement("div",null,"when ",r.createElement("code",null,"a + b")," value typed ",r.createElement("code",null,"tez")," exceeds ",r.createElement("code",null,"9223372036854775807utz"))}]},sub:{label:"a - b",link:"a---b",desc:"Subtracts numbers.",types:[{typa:"nat",typb:"nat",typr:"int"},{typa:"int",typb:"int",typr:"int"},{typa:"tez",typb:"tez",typr:"tez"},{typa:"rational",typb:"rational",typr:"rational"},{typa:"duration",typb:"duration",typr:"duration"},{typa:"date",typb:"date",typr:"duration"},{typa:"bls12_381_fr",typb:"bls12_381_fr",typr:"bls12_381_fr"},{typa:"bls12_381_g1",typb:"bls12_381_g1",typr:"bls12_381_g1"},{typa:"bls12_381_g2",typb:"bls12_381_g2",typr:"bls12_381_g2"}],promotions:[{typa:"nat",typb:"int",typr:"int"},{typa:"int",typb:"nat",typr:"int"},{typa:"rational",typb:"nat",typr:"rational"},{typa:"nat",typb:"rational",typr:"rational"},{typa:"rational",typb:"int",typr:"rational"},{typa:"nat",typb:"rational",typr:"rational"},{typa:"bls12_381_fr",typb:"nat",typr:"bls12_381_fr"},{typa:"bls12_381_fr",typb:"int",typr:"bls12_381_fr"},{typa:"nat",typb:"bls12_381_fr",typr:"bls12_381_fr"},{typa:"int",typb:"bls12_381_fr",typr:"bls12_381_fr"}],fails:[{keyword:'"INVALID_NEGATIVE_TEZ"',desc:r.createElement("div",null,"when ",r.createElement("code",null,"a - b")," value typed ",r.createElement("code",null,"tez")," is negative.")}]},minus:{label:"- a",link:"--a",desc:r.createElement("div",null,"Returns the opposite of ",r.createElement("code",null,"a"),"."),binary:!1,types:[{typa:"int",typr:"int"},{typa:"nat",typr:"int"},{typa:"duration",typr:"duration"},{typa:"rational",typr:"rational"},{typa:"bls12_381_fr",typr:"bls12_381_fr"},{typa:"bls12_381_g1",typr:"bls12_381_g1"},{typa:"bls12_381_g2",typr:"bls12_381_g2"}]},mult:{label:"a * b",link:"a--b-1",desc:"Multiplies two numbers",types:[{typa:"nat",typb:"nat",typr:"nat"},{typa:"int",typb:"int",typr:"int"},{typa:"rational",typb:"rational",typr:"rational"},{typa:"nat",typb:"tez",typr:"tez"},{typa:"int",typb:"tez",typr:"tez"},{typa:"rational",typb:"tez",typr:"tez",comment:"(quotient of euclidean division)"},{typa:"nat",typb:"duration",typr:"duration"},{typa:"int",typb:"duration",typr:"duration"},{typa:"bls12_381_fr",typb:"bls12_381_fr",typr:"bls12_381_fr"},{typa:"bls12_381_g1",typb:"bls12_381_fr",typr:"bls12_381_g1"},{typa:"bls12_381_g2",typb:"bls12_381_fr",typr:"bls12_381_g2"}],promotions:[{typa:"nat",typb:"int",typr:"int"},{typa:"int",typb:"nat",typr:"int"},{typa:"rational",typb:"nat",typr:"rational"},{typa:"nat",typb:"rational",typr:"rational"},{typa:"rational",typb:"int",typr:"rational"},{typa:"int",typb:"rational",typr:"rational"},{typa:"bls12_381_fr",typb:"nat",typr:"bls12_381_fr"},{typa:"nat",typb:"bls12_381_fr",typr:"bls12_381_fr"},{typa:"bls12_381_fr",typb:"int",typr:"bls12_381_fr"},{typa:"int",typb:"bls12_381_fr",typr:"bls12_381_fr"}]},slash:{label:"a / b",link:"a--b-2",desc:"Divides two numbers as a rational.",types:[{typa:"nat",typb:"nat",typr:"rational"},{typa:"int",typb:"int",typr:"rational"},{typa:"duration",typb:"duration",typr:"rational"},{typa:"rational",typb:"rational",typr:"rational"},{typa:"tez",typb:"tez",typr:"rational"}],promotions:[{typa:"nat",typb:"int",typr:"rational"},{typa:"int",typb:"nat",typr:"rational"},{typa:"nat",typb:"rational",typr:"rational"},{typa:"rational",typb:"nat",typr:"rational"},{typa:"int",typb:"rational",typr:"rational"},{typa:"rational",typb:"int",typr:"rational"}]},div:{label:"a div b",link:"a-div-b",desc:r.createElement(d,null),types:[{typa:"nat",typb:"nat",typr:"nat"},{typa:"int",typb:"int",typr:"int"},{typa:"duration",typb:"duration",typr:"int"},{typa:"duration",typb:"nat",typr:"duration"},{typa:"duration",typb:"int",typr:"duration"},{typa:"tez",typb:"nat",typr:"tez"}],promotions:[{typa:"int",typb:"nat",typr:"int"},{typa:"nat",typb:"int",typr:"int"},{typa:"int",typb:"nat",typr:"int"}],fails:[{keyword:'"DIV_BY_ZERO"',desc:r.createElement("div",null,"when ",r.createElement("code",null,"b")," is equal to 0")}]},mod:{label:"a % b",link:"a--b-3",desc:r.createElement(u,null),types:[{typa:"nat",typb:"nat",typr:"nat"},{typa:"int",typb:"int",typr:"int"},{typa:"duration",typb:"duration",typr:"int"},{typa:"nat",typb:"int",typr:"nat"},{typa:"int",typb:"nat",typr:"nat"},{typa:"tez",typb:"tez",typr:"tez"}],fails:[{keyword:'"DIV_BY_ZERO"',desc:r.createElement("div",null,"when ",r.createElement("code",null,"b")," is equal to 0")}]},divmod:{label:"a /% b",link:"a--b-4",desc:r.createElement("div",null,"Returns the euclidean division of ",r.createElement("code",null,"a")," by ",r.createElement("code",null,"b"),"; returns an option of quotient and remainder:",r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"some(q, r)"),", when ",r.createElement("code",null,"b")," is different from 0, ",r.createElement("code",null),r.createElement("code",null,"q")," being the quotient and ",r.createElement("code",null,"r")," the remainder"),r.createElement("li",null,r.createElement("code",null,"none"),", when ",r.createElement("code",null,"b")," is equal to 0"))),types:[{typa:"nat",typb:"nat",typr:"option<nat * nat>",withLink:!1},{typa:"int",typb:"int",typr:"option<int * nat>",withLink:!1},{typa:"tez",typb:"tez",typr:"option<nat * tez>",withLink:!1},{typa:"nat",typb:"int",typr:"option<int * nat>",withLink:!1},{typa:"int",typb:"nat",typr:"option<int * nat>",withLink:!1},{typa:"tez",typb:"nat",typr:"option<tez * tez>",withLink:!1}]},lsl:{label:"a <<| b",link:"a--b-5",desc:r.createElement("div",null,"Shifts the bits of ",r.createElement("code",null,"a")," to the left by the number of positions specified by ",r.createElement("code",null,"b"),". Simultaneously, the empty spaces created by the bits shifted to the left are then filled with zeroes. It is a fast way to multiply by a power of 2.",r.createElement("br",null),r.createElement("br",null)),types:[{typa:"nat",typb:"nat",typr:"nat"}],fails:[{keyword:'"script_overflow"',desc:r.createElement("div",null,"when ",r.createElement("code",null,"b")," is greater than ",r.createElement("code",null,"256"))}]},lsr:{label:"a |>> b",link:"a--b-6",desc:r.createElement("div",null,"Shifts the bits of ",r.createElement("code",null,"a")," to the right by the number of positions specified by ",r.createElement("code",null,"b"),". It is a fast way to divide by a power of 2.",r.createElement("br",null),r.createElement("br",null)),types:[{typa:"nat",typb:"nat",typr:"nat"}],fails:[{keyword:'"script_overflow"',desc:r.createElement("div",null,"when ",r.createElement("code",null,"b")," is greater than ",r.createElement("code",null,"256"))}]},and:{label:"a and b",link:"a-and-b",desc:r.createElement("div",null,r.createElement(a.Z,{to:"/blog/shortcut-evaluation"},"Shortcut evaluation")," of logical conjonction:",r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"true")," if ",r.createElement("code",null,"a")," and ",r.createElement("code",null,"b")," are ",r.createElement("code",null,"true")),r.createElement("li",null,r.createElement("code",null,"false")," otherwise"),r.createElement("li",null,"Bitwise ",r.createElement("code",null,"and")," of integers"))),types:[{typa:"bool",typb:"bool",typr:"bool"},{typa:"nat",typb:"nat",typr:"nat"},{typa:"int",typb:"nat",typr:"nat"}]},or:{label:"a or b",link:"a-or-b",desc:r.createElement("div",null,r.createElement(a.Z,{to:"/blog/shortcut-evaluation"},"Shortcut evaluation")," of logical disjonction:",r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"true")," if ",r.createElement("code",null,"a")," or ",r.createElement("code",null,"b")," is ",r.createElement("code",null,"true")),r.createElement("li",null,r.createElement("code",null,"false")," otherwise"),r.createElement("li",null,"Bitwise ",r.createElement("code",null,"or")," of naturals"))),types:[{typa:"bool",typb:"bool",typr:"bool"},{typa:"nat",typb:"nat",typr:"nat"}]},xor:{label:"a xor b",link:"a-xor-b",desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"true")," if ",r.createElement("code",null,"a")," and ",r.createElement("code",null,"b")," are different"),r.createElement("li",null,r.createElement("code",null,"false")," otherwise"),r.createElement("li",null,"Bitwise ",r.createElement("code",null,"xor")," of naturals"))),types:[{typa:"bool",typb:"bool",typr:"bool"},{typa:"nat",typb:"nat",typr:"nat"}]},not:{label:"not a",link:"not-a",binary:!1,desc:r.createElement("div",null,r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"true")," if ",r.createElement("code",null,"a")," is ",r.createElement("code",null,"false")),r.createElement("li",null,r.createElement("code",null,"false")," if ",r.createElement("code",null,"a")," is ",r.createElement("code",null,"true")),r.createElement("li",null,r.createElement(a.Z,{to:"https://en.wikipedia.org/wiki/Two%27s_complement"},"2-complement")," if ",r.createElement("code",null,"a")," is a natural or an integer"))),types:[{typa:"bool",typr:"bool"},{typa:"int",typr:"int"},{typa:"nat",typr:"int"}]},eq:{label:"a = b",link:"a--b-7",desc:r.createElement("div",null,"Equality operator"),types:k("bool"),promotions:y("bool")},neq:{label:"a <> b",link:"a--b-8",desc:r.createElement("div",null,"Difference operator, equivalent to ",r.createElement("code",null,"not (a = b)"),"."),types:k("bool"),promotions:y("bool")},lt:{label:"a < b",link:"a--b-9",desc:r.createElement("div",null,"'Less than' operator"),types:k("bool"),promotions:y("bool")},lteq:{label:"a <= b",link:"a--b-10",desc:r.createElement("div",null,"'Less than or equal to' operator"),types:k("bool"),promotions:y("bool")},gt:{label:"a > b",link:"a--b-11",desc:r.createElement("div",null,"'Greater than' operator"),types:k("bool"),promotions:y("bool")},gteq:{label:"a >= b",link:"a--b-12",desc:r.createElement("div",null,"'Greater than or equal to' operator"),types:k("bool"),promotions:y("bool")},cmp:{label:"a <=> b",link:"a--b-13",desc:r.createElement("div",null,"Comparison operator on which above comparison operators are built; it returns:",r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"-1")," when ",r.createElement("code",null,"a < b")),r.createElement("li",null,r.createElement("code",null,"1"),"  when ",r.createElement("code",null,"a > b")),r.createElement("li",null,r.createElement("code",null,"0")," when ",r.createElement("code",null,"a = b")))),types:k("int"),promotions:y("int")},doubleinequality:{label:"a < b < c",link:"a--b--c",equivalence:[{label:"a < b < c",desc:r.createElement("div",null,r.createElement("code",null,"a < b and b < c"))},{label:"a <= b < c",desc:r.createElement("div",null,r.createElement("code",null,"a \u2264 b and b < c"))},{label:"a < b <= c",desc:r.createElement("div",null,r.createElement("code",null,"a < b and b \u2264 c"))},{label:"a <= b <= c",desc:r.createElement("div",null,r.createElement("code",null,"a \u2264 b and b \u2264 c"))}]}}},264:function(e,t,n){n.d(t,{R:function(){return u}});var a=n(7294),r=n(7462),l=n(3366),s=n(3905),i=["components"],o={toc:[]};function c(e){var t=e.components,n=(0,l.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Builtin list of ",(0,s.kt)("em",{parentName:"p"},"operations")," returned by entrypoint execution."),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"transfer")," instruction ",(0,s.kt)("a",{parentName:"p",href:"/docs/reference/instructions/operation#low-level-instructio"},"appends")," an operation to this list."))}c.isMDXComponent=!0;var d=["components"],p={toc:[]};function m(e){var t=e.components,n=(0,l.Z)(e,d);return(0,s.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Contract's metadata as specified by the ",(0,s.kt)("a",{parentName:"p",href:"https://tzip.tezosagora.org/proposal/tzip-16/"},"TZIP-16")," norm."),(0,s.kt)("p",null,"It is available only when the contract is declared with ",(0,s.kt)("inlineCode",{parentName:"p"},"with metadata")," followed by the url of the metadata file."),(0,s.kt)("p",null,"For example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-archetype"},'archetype my_contract with metadata ""\n')),(0,s.kt)("p",null,"It is updated as any ",(0,s.kt)("a",{parentName:"p",href:"/docs/language-basics/container#map"},"map")," object:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-archetype"},"metadata.put(ikey, idata)\n")))}m.isMDXComponent=!0;var u={metadata:{desc:a.createElement(m,null),type:"map<string, bytes>",typeUrl:"map<K,%20V>",related:[{keyword:"string",link:"/docs/reference/types#string"},{keyword:"bytes",link:"/docs/reference/types#bytes"}]},operations:{desc:a.createElement(c,null),type:"list<operation>",typeUrl:"list<T>",related:[{keyword:"transfer",link:"/docs/reference/instructions/operation#transfer"},{keyword:"operation",link:"/docs/reference/types#operation"}]}}},8441:function(e,t,n){n.d(t,{N:function(){return r}});var a="/docs/reference/instructions",r={sequence:[{label:"begin end",link:a+"/sequence"},{label:" ; ",link:a+"/sequence"}],localvar:[{label:"var",link:a+"/localvariable#var"},{label:"const",link:a+"/localvariable#const"},{label:"?=",link:a+"/localvariable#-"}],assignments:[{label:":=",link:a+"/assignment#a--b"},{label:"?:=",link:a+"/assignment#a--b--e"},{label:"+=",link:a+"/assignment#a--b-1"},{label:"-=",link:a+"/assignment#a---b"},{label:"*=",link:a+"/assignment#a--b-2"},{label:"/=",link:a+"/assignment#a--b-3"},{label:"&=",link:a+"/assignment#a--b-4"},{label:"|=",link:a+"/assignment#a--b-5"}],controls:[{label:"if",link:a+"/control#if"},{label:"match",link:a+"/control#match-with"},{label:"for",link:a+"/control#for"},{label:"while",link:a+"/control#while"},{label:"iter",link:a+"/control#iter"}],divergent:[{label:"fail",link:a+"/divergent#faile"},{label:"fail_some",link:a+"/divergent#fail_somee--optiont"},{label:"do_require",link:a+"/divergent#do_requiret-e"},{label:"do_fail_if",link:a+"/divergent#do_fail_ift-e"}],sets:[{label:"add",link:a+"/containers#sadde"},{label:"remove",link:a+"/containers#sremovee"},{label:"update",link:a+"/containers#supdatee-b"}],lists:[{label:"prepend",link:a+"/containers#lprepende"},{label:"reverse",link:a+"/containers#lreverse"},{label:"concat",link:a+"/containers#lconcatl"}],maps:[{label:"put",link:a+"/containers#mputk-v"},{label:"remove",link:a+"/containers#mremovek"},{label:"update",link:a+"/containers#mupdatek--k-o--optiont"}],assets:[{label:"add",link:a+"/asset#aadda",desc:"Adds a new asset in collection"},{label:"put",link:a+"/asset#aputa",desc:"Adds or replace an asset in collection"},{label:"update",link:a+"/asset#aupdatek--u-",desc:"Updates one or several fields of an asset in collection"},{label:"update_all",link:a+"/asset#aupdate_allk--u-",desc:"Updates one or several fields of an asset collection or view"},{label:"add_update",link:a+"/asset#aadd_updatek--u-",desc:"Adds a new asset or updates an asset in collection"},{label:"remove",link:a+"/asset#aremovek",desc:"Removes element from collection, partition or aggregate"},{label:"put_remove",link:a+"/asset#aput_removek-o",desc:"Puts or removes an element in collection"},{label:"remove_if",link:a+"/asset#aremove_ifp",desc:"Removes referenced assets that verify a predicate"},{label:"remove_all",link:a+"/asset#aremove_all",desc:"Removes all assets from collection"},{label:"clear",link:a+"/asset#aclear",desc:"Removes all referenced assets from an asset view"}],blockchain:[{label:"transfer",link:a+"/operation#transfer"},{label:"emit",link:a+"/operation#emit"}]}},5340:function(e,t,n){n.d(t,{V5:function(){return B}});var a=n(9960),r=n(7294),l=n(7462),s=n(3366),i=n(3905),o=["components"],c={toc:[]};function d(e){var t=e.components,n=(0,s.Z)(e,o);return(0,i.kt)("wrapper",(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Type of asset field to ",(0,i.kt)("em",{parentName:"p"},"reference")," assets from another collection ",(0,i.kt)("inlineCode",{parentName:"p"},"A"),"."),(0,i.kt)("p",null,"For example, field ",(0,i.kt)("inlineCode",{parentName:"p"},"drives")," references assets from the ",(0,i.kt)("inlineCode",{parentName:"p"},"car")," asset collection:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset car {\n  vin     : string;\n  nbdoors : nat = 0\n}\n\nasset driver {\n  id     : address;\n  drives : aggregate<car>\n}\n")),(0,i.kt)("p",null,"Notes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"two drivers may reference the same car"),(0,i.kt)("li",{parentName:"ul"},"adding in ",(0,i.kt)("inlineCode",{parentName:"li"},"drives")," fails if car's vin is not present in ",(0,i.kt)("inlineCode",{parentName:"li"},"car")," collection.")))}d.isMDXComponent=!0;var p=["components"],m={toc:[]};function u(e){var t=e.components,n=(0,s.Z)(e,p);return(0,i.kt)("wrapper",(0,l.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Type of asset field to ",(0,i.kt)("em",{parentName:"p"},"reference")," assets from another collection ",(0,i.kt)("inlineCode",{parentName:"p"},"A"),", so that each asset from ",(0,i.kt)("inlineCode",{parentName:"p"},"A")," is referenced by exactly one asset from this collection."),(0,i.kt)("p",null,"For example, field ",(0,i.kt)("inlineCode",{parentName:"p"},"drives")," references assets from the ",(0,i.kt)("inlineCode",{parentName:"p"},"car")," asset collection:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset car {\n  vin     : string;\n  nbdoors : nat = 0\n}\n\nasset driver {\n  id     : address;\n  drives : partition<car>\n}\n")),(0,i.kt)("p",null,"Notes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a ",(0,i.kt)("inlineCode",{parentName:"li"},"car")," asset may only be added via the ",(0,i.kt)("inlineCode",{parentName:"li"},"drives")," partition with for example:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'driver[a].drives.add({ vin : "1G1AF1F57A7192174" })\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"straightforwardly adding in ",(0,i.kt)("inlineCode",{parentName:"li"},"car")," collection fails at compilation"),(0,i.kt)("li",{parentName:"ul"},"two drivers cannot reference the same car")))}u.isMDXComponent=!0;var k=["components"],y={toc:[]};function b(e){var t=e.components,n=(0,s.Z)(e,k);return(0,i.kt)("wrapper",(0,l.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Map from ",(0,i.kt)("inlineCode",{parentName:"p"},"K"),"-typed key to ",(0,i.kt)("inlineCode",{parentName:"p"},"V"),"-typed value, that can deal with a high number of keys."),(0,i.kt)("p",null,"The issue with a standard map is that the cost of ",(0,i.kt)("em",{parentName:"p"},"deserialisation")," becomes prohibitive as the number of keys increases. Indeed a map, as well as any storage element, is stored in a serialised format, and gets deserialised each time the contract storage is accessed."),(0,i.kt)("p",null,"A big map is not stored in the contract storage, but rather has its own dedicated storage; it is ",(0,i.kt)("em",{parentName:"p"},"referenced")," from the contract storage by an integer value, hence the deserialisation cost of the contract storage is not impacted by the number of keys in the big map."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The constraint is that a big map is ",(0,i.kt)("strong",{parentName:"p"},"not")," iterable (because only a ",(0,i.kt)("em",{parentName:"p"},"hash")," of the key is stored, not the key itself). It means that the ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/instructions/control#for"},(0,i.kt)("inlineCode",{parentName:"a"},"for"))," instruction and the ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/expressions/builtins#length(o%20:%20T)"},(0,i.kt)("inlineCode",{parentName:"a"},"length"))," builtin are not available for big maps. See the ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#iterable_big_map"},(0,i.kt)("inlineCode",{parentName:"a"},"iterable_big_map"))," type for an iterable big map."))))}b.isMDXComponent=!0;var f=["components"],h={toc:[]};function g(e){var t=e.components,n=(0,s.Z)(e,f);return(0,i.kt)("wrapper",(0,l.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Type of an asset value generated from asset declaration. An asset value is a record that provides all asset fields but the asset identifier field(s)."),(0,i.kt)("p",null,"Consider for example the following asset declaration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset result {\n  id    : string;\n  score : nat;\n  time  : duration;\n}\n")),(0,i.kt)("p",null,"The asset value for ",(0,i.kt)("inlineCode",{parentName:"p"},"result")," is the record with ",(0,i.kt)("inlineCode",{parentName:"p"},"score")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"time")," fields. Hence ",(0,i.kt)("inlineCode",{parentName:"p"},"asset_value<result>")," is equivalent to the following declaration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"record ledger_asset_value {\n  score : nat;\n  time  : duration;\n}\n")),(0,i.kt)("p",null,"An asset record value is returned by the ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/expressions/asset#ak--asset_keya"},(0,i.kt)("inlineCode",{parentName:"a"},"[]"))," asset method (and ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/expressions/asset#agetk--asset_keya"},(0,i.kt)("inlineCode",{parentName:"a"},"get")),"). As for any record, fields are accessed normally with ",(0,i.kt)("inlineCode",{parentName:"p"},".")," operator:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'const v : asset_value<result> = result["#sub001"];\nconst s = v.score;\nconst t = v.time;\n')))}g.isMDXComponent=!0;var _=["components"],v={toc:[]};function E(e){var t=e.components,n=(0,s.Z)(e,_);return(0,i.kt)("wrapper",(0,l.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"An iterable big map has the scalability property of a ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#big_map%3CK,%20V%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"big_map"))," and can be iterated."),(0,i.kt)("p",null,"Consider the following declaration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"variable m : iterable_big_map<nat, string> = []\n")),(0,i.kt)("p",null,"It is then possible to iterate over ",(0,i.kt)("inlineCode",{parentName:"p"},"m"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"for (k,v) in m do\n  /* k is the key */\n  /* v is the value associated to k */\ndone\n")),(0,i.kt)("p",null,"An iterable big map is compiled in Michelson as a triplet:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a big map for the keys"),(0,i.kt)("li",{parentName:"ul"},"a big map for the values"),(0,i.kt)("li",{parentName:"ul"},"a counter")),(0,i.kt)("p",null,"The detailed mechanism is presented in this ",(0,i.kt)("a",{parentName:"p",href:"/blog/iterable-big-map"},"blog entry"),"."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The order in which keys are iterated is ",(0,i.kt)("em",{parentName:"p"},"not")," the natural order."))),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The possiblity to iterate comes with an increased cost of ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/instructions/containers#mputk-v"},(0,i.kt)("inlineCode",{parentName:"a"},"put"))," ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/instructions/containers#mremovek"},(0,i.kt)("inlineCode",{parentName:"a"},"remove"))," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/instructions/containers#mupdatek--k-o--optiont"},(0,i.kt)("inlineCode",{parentName:"a"},"update"))," operations."))))}E.isMDXComponent=!0;var w=n(6886),x=(n(2156),["components"]),T={toc:[]};function N(e){var t=e.components,n=(0,s.Z)(e,x);return(0,i.kt)("wrapper",(0,l.Z)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Evaluates to the ",(0,i.kt)("a",{parentName:"p",href:"/docs/language-basics/container"},"basic container")," type of collection of asset ",(0,i.kt)("inlineCode",{parentName:"p"},"A"),"."),(0,i.kt)("p",null,"The following table presents examples of the correspondance betweed asset collection and container types:"),(0,i.kt)(w.ZP,{container:!0,spacing:2,mdxType:"Grid"},(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:6,mdxType:"Grid"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset whitelist {\n  user : address;\n}\n"))),(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:6,mdxType:"Grid"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"asset_container<whitelist>")," is evaluated to:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"set<address>")))),(0,i.kt)(w.ZP,{container:!0,spacing:2,mdxType:"Grid"},(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:6,mdxType:"Grid"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset data {\n  owner : address;\n  amount : nat\n}\n"))),(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:6,mdxType:"Grid"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"asset_container<data>")," is evaluated to:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"map<address, nat>")))),(0,i.kt)(w.ZP,{container:!0,spacing:2,mdxType:"Grid"},(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:6,mdxType:"Grid"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset data to big_map {\n  owner : address;\n  amount : nat\n}\n"))),(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:6,mdxType:"Grid"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"asset_container<data>")," is evaluated to:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"big_map<address, nat>")))),(0,i.kt)(w.ZP,{container:!0,spacing:2,mdxType:"Grid"},(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:6,mdxType:"Grid"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset whitelist to big_map {\n  user : address;\n}\n"))),(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:6,mdxType:"Grid"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"asset_container<whitelist>")," is evaluated to:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"big_map<address, unit>")))))}N.isMDXComponent=!0;var C=["components"],Z={toc:[]};function A(e){var t=e.components,n=(0,s.Z)(e,C);return(0,i.kt)("wrapper",(0,l.Z)({},Z,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Evaluates to the asset identifer type of collection ",(0,i.kt)("inlineCode",{parentName:"p"},"A"),"."),(0,i.kt)("p",null,"The following table presents examples of key type evaluation:"),(0,i.kt)(w.ZP,{container:!0,spacing:2,mdxType:"Grid"},(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:7,mdxType:"Grid"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset whitelist {\n  user : address;\n}\n"))),(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:5,mdxType:"Grid"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"asset_key<whitelist>")," is evaluated to:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"address")))),(0,i.kt)(w.ZP,{container:!0,spacing:2,mdxType:"Grid"},(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:7,mdxType:"Grid"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset data {\n  owner : address;\n  amount : nat\n}\n"))),(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:5,mdxType:"Grid"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"asset_key<data>")," is evaluated to:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"address")))),(0,i.kt)(w.ZP,{container:!0,spacing:2,direction:"row",justifyContent:"center",alignItems:"center",mdxType:"Grid"},(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:7,mdxType:"Grid"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset ledger identified by owner tokenid {\n  owner     : address;\n  tokenid   : nat;\n  amount    : nat = 0;\n}\n"))),(0,i.kt)(w.ZP,{item:!0,xs:12,sm:12,md:5,mdxType:"Grid"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"asset_key<ledger>")," is evaluated to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"record ledger_key {\n  owner     : address;\n  tokenid   : nat;\n}\n")))))}A.isMDXComponent=!0;var L=["components"],z={toc:[]};function M(e){var t=e.components,n=(0,s.Z)(e,L);return(0,i.kt)("wrapper",(0,l.Z)({},z,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Read-only view on asset collection returned by asset methods: ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/expressions/asset#asortf"},(0,i.kt)("inlineCode",{parentName:"a"},"sort"))," ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/expressions/asset#aselectp"},(0,i.kt)("inlineCode",{parentName:"a"},"select"))," ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/expressions/asset#aheadi--nat"},(0,i.kt)("inlineCode",{parentName:"a"},"head"))," ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/expressions/asset#ataili--nat"},(0,i.kt)("inlineCode",{parentName:"a"},"tail"))),(0,i.kt)("p",null,"Consider for example the following asset declaration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset vehicle {\n  vin: string;\n  nbdoors : nat = 0\n}\n")),(0,i.kt)("p",null,"The asset view of vehicles with 5 doors is created with method ",(0,i.kt)("inlineCode",{parentName:"p"},"select"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"const sedan = vehicle.select(the.nbdoors = 5)\n")),(0,i.kt)("p",null,"It is possible to iterate on an ",(0,i.kt)("inlineCode",{parentName:"p"},"asset_view")," with the ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/instructions/control#for"},(0,i.kt)("inlineCode",{parentName:"a"},"for"))," instruction."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"for v in sedan do\n /* ... */\ndone\n")),(0,i.kt)("p",null,"(See the ",(0,i.kt)("em",{parentName:"p"},"Related")," section below for the ",(0,i.kt)("inlineCode",{parentName:"p"},"asset_view")," API)"))}M.isMDXComponent=!0;var R=["components"],V={toc:[]};function S(e){var t=e.components,n=(0,s.Z)(e,R);return(0,i.kt)("wrapper",(0,l.Z)({},V,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Empty type."),(0,i.kt)("p",null,"For example, it is used to prevent from using specific value in ",(0,i.kt)("inlineCode",{parentName:"p"},"or")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"option")," literals:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"variable res : or<never, nat> = right<never>(1)\n")))}S.isMDXComponent=!0;var D="https://tezos.gitlab.io/michelson-reference",I="/docs/reference/declarations/entrypoint#",K="/docs/reference/instructions",P="/docs/reference/expressions/constants#",O="/docs/reference/expressions/builtins#",X="/docs/reference/expressions/asset#",B={address:{desc:r.createElement("div",null,"Account or contract address on the Tezos blockchain. ",r.createElement("p",null),"An address is formed of a prefix (",r.createElement("code",null,"tz1")," ",r.createElement("code",null,"tz2")," ",r.createElement("code",null,"tz3")," ",r.createElement("code",null,"tz4")," and ",r.createElement("code",null,"KT1")," for contracts) followed by a Base58 encoded hash and terminated by a 4-byte checksum."),link:"#address",examples:["tz1Lc2qBKEWCBeDU8npG6zCeCqpmaegRi6Jg","tz2BFTyPeYRzxd5aiBchbXN3WCZhx7BqbMBq","tz3hFR7NZtjT2QtzgMQnWb4xMuD6yt2YzXUt","tz4HVR6aty9KwsQFHh81C1G7gBdhxT8kuytm","KT1VMCj69PwwKK7aRLRPnWoYh4X1xQqk2Vm2"],tags:[0,1,2,3],michelson:"address",michelson_ref_url:D+"/#type-address",related:[{keyword:"sourced by",link:I+"sourced-by"},{keyword:"called by",link:I+"called-by"},{keyword:"transfer",link:K+"/operation#transfer"},{keyword:"caller",link:P+"caller"},{keyword:"source",link:P+"source"},{keyword:"self_address",link:P+"self_address"},{keyword:"=",link:"/docs/reference/expressions/operators/arithmetic#a--b-7"},{keyword:"call_view",link:O+"call_view<T>(a%20:%20address,%20id%20:%20string,%20arg%20:%20X)"},{keyword:"set_delegate",link:O+"set_delegate(opkh%20:%20option<key_hash>)"},{keyword:"contract_to_address",link:O+"contract_to_address(c%20:%20contract<T>)"},{keyword:"address_to_contract",link:O+"address_to_contract(a%20:%20address)"},{keyword:"get_entrypoint",link:"/docs/reference/expressions/builtins#get_entrypoint<T>(s,%20a%20:%20address)"},{keyword:"key_to_address",link:O+"key_to_address(k%20:%20key)"},{keyword:"read_ticket",link:O+"read_ticket(t%20:%20ticket<T>)"}]},aggregate:{desc:r.createElement(d,null),link:"#aggregate<A>",examples:['[ "1G1AF1F57A7192174" ]'],tags:[1,2,3],related:[{keyword:"Asset",link:"/docs/asset",code:!1},{keyword:"add",link:K+"/asset#aadda"},{keyword:"remove",link:K+"/asset#aremovek"},{keyword:"remove_if",link:K+"/asset#aremove_ifp"},{keyword:"remove_all",link:K+"/asset#aremove_all"},{keyword:"clear",link:K+"/asset#aclear"},{keyword:"[]",link:X+"ak--asset_keyaf"},{keyword:"contains",link:X+"acontainsk--asset_keya"},{keyword:"count",link:X+"acount"},{keyword:"nth",link:X+"anthi--nat"},{keyword:"sort",link:X+"asortf"},{keyword:"sum",link:X+"asumf"},{keyword:"select",link:X+"aselectp"},{keyword:"head",link:X+"aheadi--nat"},{keyword:"tail",link:X+"ataili--nat"}]},asset_container:{desc:r.createElement(N,null),link:"#asset_container<A>",examples:[],parameters:[{keyword:"A",type:"asset",desc:"Any declared asset."}],tags:[0,1,2,3],related:[{keyword:"Asset",link:"/docs/asset"},{keyword:"asset_key",link:"/docs/reference/types#asset_key<A>"},{keyword:"asset_value",link:"/docs/reference/types#asset_value<A>"}]},asset_key:{desc:r.createElement(A,null),link:"#asset_key<A>",examples:[],parameters:[{keyword:"A",type:"asset",desc:"Any declared asset."}],tags:[0,1,2,3],related:[{keyword:"Asset",link:"/docs/asset"},{keyword:"asset_container",link:"/docs/reference/types#asset_container<A>"},{keyword:"asset_value",link:"/docs/reference/types#asset_value<A>"}]},asset_value:{desc:r.createElement(g,null),link:"#asset_value<A>",examples:[],parameters:[{keyword:"A",type:"asset",desc:"Any declared asset."}],tags:[0,1,2,3],related:[{keyword:"Asset",link:"/docs/asset"},{keyword:"asset_container",link:"/docs/reference/types#asset_container<A>"},{keyword:"asset_key",link:"/docs/reference/types#asset_key<A>"},{keyword:"[]",link:X+"ak--asset_keya"},{keyword:"get",link:X+"agetk--asset_keya"}]},asset_view:{desc:r.createElement(M,null),link:"#asset_view<A>",examples:["[]"],tags:[1,3],related:[{keyword:"Asset",link:"/docs/asset",code:!1},{keyword:"contains",link:X+"acontainsk--asset_keya"},{keyword:"count",link:X+"acount"},{keyword:"nth",link:X+"anthi--nat"},{keyword:"sort",link:X+"asortf"},{keyword:"sum",link:X+"asumf"},{keyword:"select",link:X+"aselectp"},{keyword:"head",link:X+"aheadi--nat"},{keyword:"tail",link:X+"ataili--nat"}]},big_map:{desc:r.createElement(b,null),link:"#big_map<K,%20V>",examples:["[]",'[ ("#1G1AF1F57A7192174", 5); ("#2F4AH1J77O7132095", 10) ]'],tags:[1,2],michelson:"big_map",michelson_ref_url:D+"/#type-big_map",related:[{keyword:"Map",link:"/docs/language-basics/container#map",code:!1},{keyword:"[]",link:"/docs/reference/expressions/operators/access#map"},{keyword:"put",link:K+"/containers#mputk-v"},{keyword:"remove",link:K+"/containers#mremovek"},{keyword:"update",link:K+"/containers#mupdatek--k-o--optiont"},{keyword:"put",link:"/docs/reference/expressions/builtins#put(m%20:%20map<K,%20V>,%20k%20:%20K,%20v%20:%20V)"},{keyword:"remove",link:"/docs/reference/expressions/builtins#remove(c%20:%20C,%20i%20:%20T)"},{keyword:"update",link:"/docs/reference/expressions/builtins#update(m%20:%20map<K,%20V>,%20k%20:%20K,%20v%20:%20option<T>)"},{keyword:"contains",link:"/docs/reference/expressions/builtins#contains(c%20:%20C,%20e%20:%20T)"},{keyword:"map",link:"/docs/reference/expressions/builtins#map<K,%20V>"},{keyword:"make_big_map",link:"/docs/reference/expressions/builtins#make_big_map<K,%20V>(m)"},{keyword:"iterable_big_map",link:"/docs/reference/types#iterable_big_map<K,%20V>"}]},bls12_381_fr:{desc:r.createElement("div",null,"Multplicative scalar for the BLS12_381 curves ",r.createElement(a.Z,{to:"/docs/reference/types#bls12_381_g1"},"g1")," and ",r.createElement(a.Z,{to:"/docs/reference/types#bls12_381_g2"},"g2"),".",r.createElement("br",null),"Literals can either be a raw bytes representation or a natural."),link:"#bls12_381_fr",examples:["0x02","2"],tags:[1,2,3],michelson:"bls12_381_fr",michelson_ref_url:D+"/#type-bls12_381_fr",related:[{keyword:"Elliptic curves",link:"/docs/language-basics/crypto#elliptic-curves"},{keyword:"bls12_381_g1",link:"/docs/reference/types#bls12_381_g1"},{keyword:"bls12_381_g2",link:"/docs/reference/types#bls12_381_g2"},{keyword:"pairing_check",link:"/docs/reference/expressions/builtins#pairing_check(l%20:%20list<bls12_381_g1%20*%20bls12_381_g2>)"}]},bls12_381_g1:{desc:r.createElement("div",null,"Point on the elliptic curve ",r.createElement(a.Z,{to:"/docs/reference/types#bls12_381_g1"},"g1"),"."),link:"#bls12_381_g1",examples:["0x063bd6e11e2fcaac1dd8cf68c6b1925a73c3c583e298ed37c41c3715115cf96358a42dbe85a0228cbfd8a6c8a8c54cd015b5ae2860d1cc47f84698d951f14d9448d03f04df2ca0ffe609a2067d6f1a892163a5e05e541279134cae52b1f23c6b"],tags:[1,2,3],michelson:"bls12_381_g1",michelson_ref_url:D+"/#type-bls12_381_g1",related:[{keyword:"Elliptic curves",link:"/docs/language-basics/crypto#elliptic-curves"},{keyword:"bls12_381_fr",link:"/docs/reference/types#bls12_381_fr"},{keyword:"bls12_381_g2",link:"/docs/reference/types#bls12_381_g2"},{keyword:"pairing_check",link:"/docs/reference/expressions/builtins#pairing_check(l%20:%20list<bls12_381_g1%20*%20bls12_381_g2>)"}]},bls12_381_g2:{desc:r.createElement("div",null,"Point on the elliptic curve ",r.createElement(a.Z,{to:"/docs/reference/types#bls12_381_g2"},"g2"),"."),link:"#bls12_381_g2",examples:["0x10c6d5cdca84fc3c7f33061add256f48e0ab03a697832b338901898b650419eb6f334b28153fb73ad2ecd1cd2ac67053161e9f46cfbdaf7b1132a4654a55162850249650f9b873ac3113fa8c02ef1cd1df481480a4457f351d28f4da89d19fa405c3d77f686dc9a24d2681c9184bf2b091f62e6b24df651a3da8bd7067e14e7908fb02f8955b84af5081614cb5bc49b416d9edf914fc608c441b3f2eb8b6043736ddb9d4e4d62334a23b5625c14ef3e1a7e99258386310221b22d83a5eac035c"],tags:[1,2,3],michelson:"bls12_381_g2",michelson_ref_url:D+"/#type-bls12_381_g2",related:[{keyword:"Elliptic curves",link:"/docs/language-basics/crypto#elliptic-curves"},{keyword:"bls12_381_fr",link:"/docs/reference/types#bls12_381_fr"},{keyword:"bls12_381_g1",link:"/docs/reference/types#bls12_381_g1"},{keyword:"pairing_check",link:"/docs/reference/expressions/builtins#pairing_check(l%20:%20list<bls12_381_g1%20*%20bls12_381_g2>)"}]},bool:{desc:r.createElement("div",null,"Boolean value ",r.createElement("code",null,"true")," or ",r.createElement("code",null,"false")," for logical tests."),link:"#bool",examples:["true","false"],tags:[0,1,2,3],michelson:"bool",michelson_ref_url:D+"/#type-bool",related:[{keyword:"if",link:"/docs/reference/instructions/control#if"},{keyword:"while",link:"/docs/reference/instructions/control#while"},{keyword:"do_require",link:"/docs/reference/instructions/divergent#do_requiret--bool-e--t"},{keyword:"do_fail_if",link:"/docs/reference/instructions/divergent#do_fail_ift--bool-e--t"},{keyword:"remove_if",link:"/docs/reference/instructions/asset#aremove_ifp"},{keyword:"&=",link:"/docs/reference/instructions/assignment#a--b-4"},{keyword:"|=",link:"/docs/reference/instructions/assignment#a--b-5"},{keyword:"and",link:"/docs/reference/expressions/operators/arithmetic#a-and-b"},{keyword:"or",link:"/docs/reference/expressions/operators/arithmetic#a-or-b"},{keyword:"xor",link:"/docs/reference/expressions/operators/arithmetic#a-xor-b"},{keyword:"not",link:"/docs/reference/expressions/operators/arithmetic#not-a"},{keyword:"=",link:"/docs/reference/expressions/operators/arithmetic#a--b-7"},{keyword:"<>",link:"/docs/reference/expressions/operators/arithmetic#a--b-8"},{keyword:"<=>",link:"/docs/reference/expressions/operators/arithmetic#a--b-13"},{keyword:"if",link:"/docs/reference/expressions/controls#if-then-else"},{keyword:"?:",link:"/docs/reference/expressions/controls#a--b--c"},{keyword:"check_signature",link:"/docs/reference/expressions/builtins#check_signature(k%20:%20key,%20s%20:%20signature,%20b%20:%20bytes)"},{keyword:"contains",link:"/docs/reference/expressions/builtins#contains(c%20:%20C,%20e%20:%20T)"},{keyword:"greedy_and",link:"/docs/reference/expressions/builtins#greedy_and(a%20:%20bool,%20b%20:%20bool)"},{keyword:"greedy_or",link:"/docs/reference/expressions/builtins#greedy_or(a%20:%20bool,%20b%20:%20bool)"},{keyword:"is_none",link:"/docs/reference/expressions/builtins#is_none(o%20:%20option<T>)"},{keyword:"is_some",link:"/docs/reference/expressions/builtins#is_some(o%20:%20option<T>)"},{keyword:"open_chest",link:"/docs/reference/expressions/builtins#open_chest(k%20:%20chest_key,%20c%20:%20chest,%20t%20:%20nat)"},{keyword:"pairing_check",link:"/docs/reference/expressions/builtins#pairing_check(l%20:%20list<bls12_381_g1%20*%20bls12_381_g2>)"},{keyword:"select",link:"/docs/reference/expressions/asset#aselectp"}]},bytes:{desc:r.createElement("div",null,"Array of byte values to represent any serialised data. It is used for signatures and hash values."),link:"#bytes",examples:["0x00","0x050002","0x"],tags:[0,1,2,3],michelson:"bytes",michelson_ref_url:D+"/#type-bytes",related:[{keyword:"concat",link:"/docs/reference/expressions/builtins#bytes"},{keyword:"length",link:"/docs/reference/expressions/builtins#length(o%20:%20T)"},{keyword:"slice",link:"/docs/reference/expressions/builtins#slice(s%20:%20T,%20o%20:%20nat,%20l%20:%20nat)"},{keyword:"pack",link:"/docs/reference/expressions/builtins#pack(o%20:%20T)"},{keyword:"unpack",link:"/docs/reference/expressions/builtins#unpack<T>(b%20:%20bytes)"},{keyword:"sha256",link:"/docs/reference/expressions/builtins#sha256(b%20:%20bytes)"},{keyword:"sha3",link:"/docs/reference/expressions/builtins#sha3(b%20:%20bytes)"},{keyword:"sha512",link:"/docs/reference/expressions/builtins#sha512(b%20:%20bytes)"},{keyword:"blake2b",link:"/docs/reference/expressions/builtins#blake2b(b%20:%20bytes)"},{keyword:"keccak",link:"/docs/reference/expressions/builtins#keccak(b%20:%20bytes)"},{keyword:"bytes_to_nat",link:"/docs/reference/expressions/builtins#bytes_to_nat(b%20:%20bytes)"},{keyword:"nat_to_bytes",link:"/docs/reference/expressions/builtins#nat_to_bytes(n%20:%20nat)"},{keyword:"check_signature",link:"/docs/reference/expressions/builtins#check_signature(k%20:%20key,%20s%20:%20signature,%20b%20:%20bytes)"},{keyword:"open_chest",link:"/docs/reference/expressions/builtins#open_chest(k%20:%20chest_key,%20c%20:%20chest,%20t%20:%20nat)"}]},chain_id:{desc:r.createElement("div",null,"Type of the chain network identifier."),link:"#chain_id",examples:['"NetXdQprcVkpaWU"',"chain_id"],tags:[0,1,2,3],michelson:"chain_id",michelson_ref_url:D+"/#type-chain_id",related:[{keyword:"chain_id",link:"/docs/reference/expressions/constants#chain_id"}]},chest:{desc:r.createElement("div",null,"Timelocked encrypted value. It is generated off-chain with the ",r.createElement(a.Z,{to:"https://github.com/completium/timelock-utils"},"timelock-utils"),", and decrypted on-chain with the ",r.createElement(a.Z,{to:"/docs/reference/expressions/builtins#open_chest(k%20:%20chest_key,%20c%20:%20chest,%20t%20:%20nat)"},r.createElement("code",null,"open_chest"))," builtin."),link:"#chest",examples:["0xc5ecdde89eb8c1e7aaeb85abb8f5e5cef3b4fa80c4aee2fccbf0a78ce0debaa5e9ddede3ddfbd9abdea28cc7dc99e6d3a9baf3cbae9adaaabc89cbc39e97e2c7a6cba99197d19ba09ddfd181afc997ffbcc5acb2d29ecbb698c2cacbdd83d1b4ced0bffe9cd78295b3fba4d9f9d5f4d4ec9ad3c7e1a8eeb9dba5cbd8a2dbf29af8e4a4c1e4b1edacf98fccefaef9fea4f0bacdd38ecbfe81c3f9839b9e9ab8fbf5f1eabac48a9f8ca7c588eefe94d1f18bd9bcee9aecde8dd285cf9098f4e1a7eec787f3a0e0ff9cd0ce8ec5a2a4e5ecb08fce899eb5baa397fabf90de9397cebc81bbdfb386e6b4da9fd8fdd19ed9f8d684c782b0aacfeebae4f6e7d1c5c1e6a093c68081cf83b991b4ecd7b38aee92deddcad79eb9abe0a0a0c6b5909dc58495f69445fff5ae9cefe8b8beb2fb86ccf5c9ad91989bdad8a3cfbedaffa2de8bf19dc6ac8cbc8a9584fa9f85f9ba958fc6bbc09ac8e7d5f0fdb98b86c1c7d59ad7c6dfc2d2cefaf5d9db909bf0e3acd3ccc792bc9bccbab4a4febda9b685dbc39ea2a4a7b69990d3abd8b9b3d7dbc581b984f3e08a98f7f7f0e697cc8dfd88edc8c3ca8dc3b2a9ccf6cdd6d0efcc848bc8ead5858bbabfcfc1c8ecea84fd9b96a5e4eabb8c918dafe6f78d83e8e1c2e5f8ee88a4ee8dcaeeafffebfcbbfda1e9eb86c582f2eedd9299cbc0a7fce083ced8c8ddb0e7eaacb696c1fccdadcdc8e3c6f7b9de84eece9bb7919094fef4fdf6efd8b1ba8bbecb9380add4f59ddbf9a19f95facc84e9d0a99bfa93f1fcc3a0fbde9b9ce0c7e8dec6e8d1dfa7dda6f490bb9580abfdbcc0e202e5ff731c3c17d080ee430edd30979a47aa653656e11e593800000015c2ca2a23b732a72932611618ad9ea324986377591e"],tags:[1,2,3],michelson:"chest",michelson_ref_url:D+"/#type-chest",related:[{keyword:"Timelock",link:"/docs/language-basics/crypto#timelock"},{keyword:"chest_key",link:"/docs/reference/types#chest_key"},{keyword:"open_chest",link:"/docs/reference/expressions/builtins#open_chest(k%20:%20chest_key,%20c%20:%20chest,%20t%20:%20nat)"}]},chest_key:{desc:r.createElement("div",null,"Key used by ",r.createElement(a.Z,{to:"/docs/reference/expressions/builtins#open_chest(k%20:%20chest_key,%20c%20:%20chest,%20t%20:%20nat)"},r.createElement("code",null,"open_chest"))," builtin to decrypt a ",r.createElement(a.Z,{to:"/docs/reference/types#chest"},r.createElement("code",null,"chest"))," value. It is generated off-chain with the ",r.createElement(a.Z,{to:"https://github.com/completium/timelock-utils"},"timelock-utils")," together with the chest value."),link:"#chest_key",examples:["0xa0aceddfb3c9fbe1b8c382c7d5a7dedbe2e5adf9edcfc3e9d084caa6aeb9818ff1e985cb9efe8fa089ceeaa0f5d0bcb583e2f29196f2d3908fffffdcda868faffcb78fb697e7eaf3e7dca9d4b5dda2c3e4f8adf8abf484ecae85f7d6e0f2d28cb69af1d7b19082e8d8d7ba96e7e1e0bb8ac9b9fcf0a9e5b7c1a499c4faf4c8a3a9c8e4d09aa780eac6cee1b78a97a3e983abf9a5f1e8d2a2a2b5e3bcb8c4effeb7a3a68a85a497cd91c9a2c096c3f596deb8d1aca3a5aff28effb8cfc9c7ced892e3a7c09deeb8c8ec9387a3b384b5c8bccaafc7a9a2c1cfd8c7becfd7d6828a9af8f4988fe4ead3b59ecfb8ff8cabf8be90d4c8bdbddfce9cd7c2bb81edc4b7ad80a59a978f8c9debe7aaf08cf0c588f3eaade6b9f4e4e6edf1ed9c9988e48d9ba0aa8f01d18bac92b886db9dd798b5f6fdc891a28da2c4c48da1918897a2b7c2dfa0b78ab8e291b68fb1a2bfa5e8b88e9cabb0b5b0feabcffc9cfeee888ac4afeed9dc8bf5a4eaa9ae89a3838cf6cfd4f8acff8fa7aef7a9889fbbc7d8f6dde4edf3e58096e580e299e5b082b9cf85f3fe8ac6c0998eb1bcbab9bfb8fba39faea7bce0f6fed9ea86dfdad58cf7cbc7fcc4ecf7e2e898d3b19582e38c8092b7e4a0cddc83eb8bc38d91fefed6be869496b8e4fc99d5fae5c6a2b2dcabe2a4ea85b68b87b182d7e8cac29fe0b9efd6d0eb999ffa98aaaf9bf09fe7c4b39d81db97e4e7bbaef0e3bfedd69d9089bc8d91b292afa6c8b389fc9fb7aaa8decab6d9b493a6eafaa5baffe8fb85f2d483ecd1f2d1e58f938df9d8d5e385fe96c5f58ae1e0b09bf2b3c2931f"],tags:[1,2,3],michelson:"chest_key",michelson_ref_url:D+"/#type-chest_key",related:[{keyword:"Timelock",link:"/docs/language-basics/crypto#timelock"},{keyword:"chest",link:"/docs/reference/types#chest"},{keyword:"open_chest",link:"/docs/reference/expressions/builtins#open_chest(k%20:%20chest_key,%20c%20:%20chest,%20t%20:%20nat)"}]},contract:{desc:r.createElement("div",null,"Destination value of an ",r.createElement(a.Z,{to:"/docs/reference/types#operation"},"operation"),"; it represents either an account's ",r.createElement(a.Z,{to:"/docs/reference/types#address"},"address"),", a contract's address, or a contract ",r.createElement(a.Z,{to:"/docs/reference/declarations/entrypoint"},"entrypoint"),".",r.createElement("br",null),"It is returned by the ",r.createElement(a.Z,{to:"/docs/reference/expressions/builtins#get_entrypoint<T>(s,%20a%20:%20address)"},r.createElement("code",null,"get_entrypoint"))," builtin, or by the conversion builtins ",r.createElement(a.Z,{to:"/docs/reference/expressions/builtins#contract_to_address(c%20:%20contract<T>)"},r.createElement("code",null,"address_to_contract"))," and ",r.createElement(a.Z,{to:"/docs/reference/expressions/builtins#key_hash_to_contract(pkh%20:%20key_hash)"},r.createElement("code",null,"key_hash_to_contract"))),link:"#contract<T>",examples:[],tags:[1,3],michelson:"contract",michelson_ref_url:D+"/#type-contract",related:[{keyword:"Operation",link:"/docs/reference/instructions/operation#low-level-instruction"},{keyword:"address_to_contract",link:"/docs/reference/expressions/builtins#address_to_contract(a%20:%20address)"},{keyword:"contract_to_address",link:"/docs/reference/expressions/builtins#contract_to_address(c%20:%20contract<T>)"},{keyword:"get_entrypoint",link:"/docs/reference/expressions/builtins#get_entrypoint<T>(s,%20a%20:%20address)"},{keyword:"key_hash_to_contract",link:"/docs/reference/expressions/builtins#key_hash_to_contract(pkh%20:%20key_hash)"},{keyword:"make_operation",link:"/docs/reference/expressions/builtins#make_operation(a%20:%20tez,%20c%20:%20contract<T>,%20arg%20:%20T)"}]},date:{desc:r.createElement("div",null,"Date in ",r.createElement(a.Z,{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO_8601")," format."),link:"#date",examples:["2019-01-01","2019-01-01T01:02:03","2019-01-01T01:02:03Z","2019-01-01T00:00:00+01:00","2019-01-01T00:00:00-05:30"],tags:[0,1,2,3],michelson:"timestamp",michelson_ref_url:D+"/#type-timestamp",related:[{keyword:"now",link:"/docs/reference/expressions/constants#now"},{keyword:"+",link:"/docs/reference/expressions/operators/arithmetic#a--b"},{keyword:"-",link:"/docs/reference/expressions/operators/arithmetic#a---b"},{keyword:"=",link:"/docs/reference/expressions/operators/arithmetic#a--b-7"},{keyword:"<>",link:"/docs/reference/expressions/operators/arithmetic#a--b-8"},{keyword:"<",link:"/docs/reference/expressions/operators/arithmetic#a--b-9"},{keyword:"<=",link:"/docs/reference/expressions/operators/arithmetic#a--b-10"},{keyword:">",link:"/docs/reference/expressions/operators/arithmetic#a--b-11"},{keyword:">=",link:"/docs/reference/expressions/operators/arithmetic#a--b-12"},{keyword:"<=>",link:"/docs/reference/expressions/operators/arithmetic#a--b-13"},{keyword:"+=",link:"/docs/reference/instructions/assignment#a--b-1"},{keyword:"-=",link:"/docs/reference/instructions/assignment#a---b"},{keyword:"int_to_date",link:"/docs/reference/expressions/builtins#int_to_date(i%20:%20int)"}]},duration:{desc:r.createElement("div",null,"Number of seconds expressed in seconds, minutes, hours or weeks, for operations on dates."),link:"#duration",examples:["10s","5m","18h","3d","1w","5m10s","5d12h","3w8d4h34m18s"],tags:[0,1,2,3],michelson:"int",michelson_ref_url:D+"/#type-timestamp",related:[{keyword:"+",link:"/docs/reference/expressions/operators/arithmetic#a--b"},{keyword:"-",link:"/docs/reference/expressions/operators/arithmetic#a---b"},{keyword:"-",link:"/docs/reference/expressions/operators/arithmetic#--a"},{keyword:"=",link:"/docs/reference/expressions/operators/arithmetic#a--b-7"},{keyword:"<>",link:"/docs/reference/expressions/operators/arithmetic#a--b-8"},{keyword:"<",link:"/docs/reference/expressions/operators/arithmetic#a--b-9"},{keyword:"<=",link:"/docs/reference/expressions/operators/arithmetic#a--b-10"},{keyword:">",link:"/docs/reference/expressions/operators/arithmetic#a--b-11"},{keyword:">=",link:"/docs/reference/expressions/operators/arithmetic#a--b-12"},{keyword:"<=>",link:"/docs/reference/expressions/operators/arithmetic#a--b-13"},{keyword:"+=",link:"/docs/reference/instructions/assignment#a--b-1"},{keyword:"-=",link:"/docs/reference/instructions/assignment#a---b"}]},enum:{desc:"Union of several types: its value is one of the possible declared values; values can be parameterized.",link:"#enum",examples:["enum color = | Red | Green | Blue","Red","Green","Blue"],tags:[0,1,2,3],michelson:["or"],michelson_ref_url:D+"/#or",related:[{keyword:"Enum",link:"/docs/language-basics/composite#enum"},{keyword:"match with",link:"/docs/reference/instructions/control#enumeration"},{keyword:"match with",link:"/docs/reference/expressions/controls#match-with"}]},event:{desc:r.createElement("div",null,"Type of event to be emitted, as explained in this ",r.createElement(a.Z,{to:"/blog/events"},"blog entry"),"."),link:"#event",examples:[],tags:[],related:[{keyword:"Event",link:"/blog/events"},{keyword:"emit",link:"/docs/reference/instructions/operation#emit"}]},int:{desc:r.createElement("div",null,"Arbitrary-precision integer values (no arithmetic overflow)."),link:"#int",examples:["0i","2i","123i","-1","100_000i"],tags:[0,1,2,3],michelson:"int",michelson_ref_url:D+"/#type-int",related:[{keyword:"nat",link:"/docs/reference/types#nat"},{keyword:"+",link:"/docs/reference/expressions/operators/arithmetic#a--b"},{keyword:"-",link:"/docs/reference/expressions/operators/arithmetic#a---b"},{keyword:"-",link:"/docs/reference/expressions/operators/arithmetic#--a"},{keyword:"*",link:"/docs/reference/expressions/operators/arithmetic#a--b-1"},{keyword:"/",link:"/docs/reference/expressions/operators/arithmetic#a--b-2"},{keyword:"div",link:"/docs/reference/expressions/operators/arithmetic#a-div-b"},{keyword:"%",link:"/docs/reference/expressions/operators/arithmetic#a--b-3"},{keyword:"/%",link:"/docs/reference/expressions/operators/arithmetic#a--b-4"},{keyword:"=",link:"/docs/reference/expressions/operators/arithmetic#a--b-7"},{keyword:"<>",link:"/docs/reference/expressions/operators/arithmetic#a--b-8"},{keyword:"<",link:"/docs/reference/expressions/operators/arithmetic#a--b-9"},{keyword:"<=",link:"/docs/reference/expressions/operators/arithmetic#a--b-10"},{keyword:">",link:"/docs/reference/expressions/operators/arithmetic#a--b-11"},{keyword:">=",link:"/docs/reference/expressions/operators/arithmetic#a--b-12"},{keyword:"<=>",link:"/docs/reference/expressions/operators/arithmetic#a--b-13"},{keyword:"+=",link:"/docs/reference/instructions/assignment#a--b-1"},{keyword:"-=",link:"/docs/reference/instructions/assignment#a---b"},{keyword:"*=",link:"/docs/reference/instructions/assignment#a--b-2"},{keyword:"/=",link:"/docs/reference/instructions/assignment#a--b-3"},{keyword:"abs",link:"/docs/reference/expressions/builtins#abs(t%20:%20T)"},{keyword:"ceil",link:"/docs/reference/expressions/builtins#ceil(r%20:%20rational)"},{keyword:"floor",link:"/docs/reference/expressions/builtins#floor(r%20:%20rational)"},{keyword:"get_numerator",link:"/docs/reference/expressions/builtins#get_numerator(r%20:%20rational)"},{keyword:"int_to_date",link:"/docs/reference/expressions/builtins#int_to_date(i%20:%20int)"},{keyword:"int_to_nat",link:"/docs/reference/expressions/builtins#int_to_nat(i%20:%20int)"}]},iterable_big_map:{desc:r.createElement(E,null),link:"#iterable_big_map<K,%20V>",examples:["[]",'[ ("#1G1AF1F57A7192174", 5); ("#2F4AH1J77O7132095", 10) ]'],tags:[0,1,2,3],related:[{keyword:"Map",link:"/docs/language-basics/container#map",code:!1},{keyword:"[]",link:"/docs/reference/expressions/operators/access#map"},{keyword:"put",link:K+"/containers#mputk-v"},{keyword:"remove",link:K+"/containers#mremovek"},{keyword:"update",link:K+"/containers#mupdatek--k-o--optiont"},{keyword:"for",link:"/docs/reference/instructions/control#map"},{keyword:"put",link:"/docs/reference/expressions/builtins#put(m%20:%20map<K,%20V>,%20k%20:%20K,%20v%20:%20V)"},{keyword:"remove",link:"/docs/reference/expressions/builtins#remove(c%20:%20C,%20i%20:%20T)"},{keyword:"update",link:"/docs/reference/expressions/builtins#update(m%20:%20map<K,%20V>,%20k%20:%20K,%20v%20:%20option<T>)"},{keyword:"contains",link:"/docs/reference/expressions/builtins#contains(c%20:%20C,%20e%20:%20T)"},{keyword:"length",link:"/docs/reference/expressions/builtins#length(o%20:%20T)"},{keyword:"map",link:"/docs/reference/expressions/builtins#map<K,%20V>"},{keyword:"big_map",link:"/docs/reference/types#big_map<K,%20V>"}]},key:{desc:r.createElement("div",null,"Account's public key."),link:"#key",examples:['"edpkurLzuFFL1XyP3fed4u7MsgeywQoQmHM45Bz91PBzDvUjQ9bvdn"'],tags:[0,1,2,3],michelson:"key",michelson_ref_url:D+"/#type-key",related:[{keyword:"check_signature",link:"/docs/reference/expressions/builtins#check_signature(k%20:%20key,%20s%20:%20signature,%20b%20:%20bytes)"},{keyword:"key_to_key_hash",link:"/docs/reference/expressions/builtins#key_to_key_hash(k%20:%20key)"},{keyword:"key_to_address",link:"/docs/reference/expressions/builtins#key_to_address(k%20:%20key)"}]},key_hash:{desc:r.createElement("div",null,"Hash of a public key."),link:"#key_hash",examples:['"tz1Lc2qBKEWCBeDU8npG6zCeCqpmaegRi6Jg"'],tags:[0,1,2,3],michelson:"key_hash",michelson_ref_url:D+"/#type-key_hash",related:[{keyword:"key_to_key_hash",link:"/docs/reference/expressions/builtins#key_to_key_hash(k%20:%20key)"},{keyword:"key_hash_to_contract",link:"/docs/reference/expressions/builtins#key_hash_to_contract(pkh%20:%20key_hash)"},{keyword:"sapling_empty_state",link:"/docs/reference/expressions/builtins#sapling_empty_state(k%20:%20key_hash)"},{keyword:"set_delegate",link:"/docs/reference/expressions/builtins#set_delegate(opkh%20:%20option<key_hash>)"},{keyword:"voting_power",link:"/docs/reference/expressions/builtins#voting_power(k%20:%20key_hash)"}]},lambda:{desc:r.createElement("div",null,"Anonymous function value with a parameter of type ",r.createElement("code",null,"T")," that returns a value of type ",r.createElement("code",null,"R"),"."),link:"#lambda<T,%20R>",examples:["lambda<nat>((x : nat) -> 2 * x + 1)"],tags:[1,2,3],michelson:"lambda",michelson_ref_url:D+"/#type-lambda",related:[{keyword:"apply_lambda",link:"/docs/reference/expressions/builtins#apply_lambda(f%20:%20lambda<A%20*%20T,%20R>,%20x%20:%20A)"},{keyword:"exec_lambda",link:"/docs/reference/expressions/builtins#exec_lambda(f%20:%20lambda<T,%20R>,%20x%20:%20T)"}]},list:{desc:"Chained list of elements.",link:"#list<T>",parameters:[{keyword:"T",type:"any type",desc:"type of the elements of the list"}],examples:["[]","[ 1 ]",'[ "abc", "def" ]'],tags:[1,2,3],michelson:"list",michelson_ref_url:D+"/#type-list",related:[{keyword:"List",link:"/docs/language-basics/container#list"},{keyword:"prepend",link:"/docs/reference/instructions/containers#lprepende"},{keyword:"reverse",link:"/docs/reference/instructions/containers#lreverse"},{keyword:"concat",link:"/docs/reference/instructions/containers#lconcatl"},{keyword:"for",link:"/docs/reference/instructions/control#list"},{keyword:"concat",link:"/docs/reference/expressions/builtins#concat"},{keyword:"contains",link:"/docs/reference/expressions/builtins#contains(c%20:%20C,%20e%20:%20T)"},{keyword:"length",link:"/docs/reference/expressions/builtins#length(o%20:%20T)"},{keyword:"map",link:"/docs/reference/expressions/builtins#map"},{keyword:"nth",link:"/docs/reference/expressions/builtins#nth(l%20:%20list<T>,%20n%20:%20nat)"},{keyword:"pairing_check",link:"/docs/reference/expressions/builtins#pairing_check(l%20:%20list<bls12_381_g1%20*%20bls12_381_g2>)"},{keyword:"prepend",link:"/docs/reference/expressions/builtins#prepend(l%20:%20list<T>,%20e%20:%20T)"},{keyword:"reverse",link:"/docs/reference/expressions/builtins#reverse(l%20:%20list<T>)"},{keyword:"make_list",link:"/docs/reference/expressions/builtins#make_list<T>(l)"}]},map:{desc:r.createElement("div",null,"Imutable (read only) maps from key to value; keys are sorted in natural order (",r.createElement("code",null,"K")," is ",r.createElement(a.Z,{to:"/docs/language-basics/types#comparable"},"comparable"),")."),link:"#map<K,%20V>",parameters:[{keyword:"K",type:"any comparable type",desc:"type of the key"},{keyword:"V",type:"any type",desc:"type of the associated value"}],examples:['[ (0, "a string"); (1, "another string") ]'],tags:[1,2,3],michelson:"map",michelson_ref_url:D+"/#type-map",related:[{keyword:"Map",link:"/docs/language-basics/container#map",code:!1},{keyword:"[]",link:"/docs/reference/expressions/operators/access#map"},{keyword:"put",link:K+"/containers#mputk-v"},{keyword:"remove",link:K+"/containers#mremovek"},{keyword:"update",link:K+"/containers#mupdatek--k-o--optiont"},{keyword:"for",link:"/docs/reference/instructions/control#map"},{keyword:"put",link:"/docs/reference/expressions/builtins#put(m%20:%20map<K,%20V>,%20k%20:%20K,%20v%20:%20V)"},{keyword:"remove",link:"/docs/reference/expressions/builtins#remove(c%20:%20C,%20i%20:%20T)"},{keyword:"update",link:"/docs/reference/expressions/builtins#update(m%20:%20map<K,%20V>,%20k%20:%20K,%20v%20:%20option<T>)"},{keyword:"contains",link:"/docs/reference/expressions/builtins#contains(c%20:%20C,%20e%20:%20T)"},{keyword:"length",link:"/docs/reference/expressions/builtins#length(o%20:%20T)"},{keyword:"map",link:"/docs/reference/expressions/builtins#map"},{keyword:"make_map",link:"/docs/reference/expressions/builtins#make_map<K,%20V>(m)"},{keyword:"big_map",link:"/docs/reference/types#big_map<K,%20V>"},{keyword:"iterable_big_map",link:"/docs/reference/types#iterable_big_map<K,%20V>"}]},nat:{desc:r.createElement("div",null,"Arbitrary-precision natural values (no arithmetic overflow)."),link:"#nat",examples:["0","2","123","100_000"],tags:[0,1,2,3],michelson:"nat",michelson_ref_url:D+"/#type-nat",related:[{keyword:"int",link:"/docs/reference/types#int"},{keyword:"+",link:"/docs/reference/expressions/operators/arithmetic#a--b"},{keyword:"-",link:"/docs/reference/expressions/operators/arithmetic#a---b"},{keyword:"-",link:"/docs/reference/expressions/operators/arithmetic#--a"},{keyword:"*",link:"/docs/reference/expressions/operators/arithmetic#a--b-1"},{keyword:"/",link:"/docs/reference/expressions/operators/arithmetic#a--b-2"},{keyword:"and",link:"/docs/reference/expressions/operators/arithmetic#a-and-b"},{keyword:"or",link:"/docs/reference/expressions/operators/arithmetic#a-or-b"},{keyword:"xor",link:"/docs/reference/expressions/operators/arithmetic#a-xor-b"},{keyword:"div",link:"/docs/reference/expressions/operators/arithmetic#a-div-b"},{keyword:"%",link:"/docs/reference/expressions/operators/arithmetic#a--b-3"},{keyword:"/%",link:"/docs/reference/expressions/operators/arithmetic#a--b-4"},{keyword:"<<|",link:"/docs/reference/expressions/operators/arithmetic#a--b-5"},{keyword:"|>>",link:"/docs/reference/expressions/operators/arithmetic#a--b-6"},{keyword:"=",link:"/docs/reference/expressions/operators/arithmetic#a--b-7"},{keyword:"<>",link:"/docs/reference/expressions/operators/arithmetic#a--b-8"},{keyword:"<",link:"/docs/reference/expressions/operators/arithmetic#a--b-9"},{keyword:"<=",link:"/docs/reference/expressions/operators/arithmetic#a--b-10"},{keyword:">",link:"/docs/reference/expressions/operators/arithmetic#a--b-11"},{keyword:">=",link:"/docs/reference/expressions/operators/arithmetic#a--b-12"},{keyword:"<=>",link:"/docs/reference/expressions/operators/arithmetic#a--b-13"},{keyword:"+=",link:"/docs/reference/instructions/assignment#a--b-1"},{keyword:"*=",link:"/docs/reference/instructions/assignment#a--b-2"},{keyword:"/=",link:"/docs/reference/instructions/assignment#a--b-3"},{keyword:"abs",link:"/docs/reference/expressions/builtins#abs(t%20:%20T)"},{keyword:"int_to_nat",link:"/docs/reference/expressions/builtins#int_to_nat(i%20:%20int)"},{keyword:"sapling_verify_update",link:"/docs/reference/expressions/builtins#sapling_verify_update(s,%20t)"},{keyword:"create_ticket",link:"/docs/reference/expressions/builtins#create_ticket(s%20:%20T,%20n%20:%20nat)"},{keyword:"length",link:"/docs/reference/expressions/builtins#length(o%20:%20T)"},{keyword:"mutez_to_nat",link:"/docs/reference/expressions/builtins#mutez_to_nat(v%20:%20tez)"},{keyword:"bytes_to_nat",link:"/docs/reference/expressions/builtins#bytes_to_nat(b%20:%20bytes)"},{keyword:"nat_to_bytes",link:"/docs/reference/expressions/builtins#nat_to_bytes(n%20:%20nat)"},{keyword:"nat_to_string",link:"/docs/reference/expressions/builtins#nat_to_string(n%20:%20nat)"},{keyword:"nth",link:"/docs/reference/expressions/builtins#nth(l%20:%20list<T>,%20n%20:%20nat)"},{keyword:"open_chest",link:"/docs/reference/expressions/builtins#open_chest(k%20:%20chest_key,%20c%20:%20chest,%20t%20:%20nat)"},{keyword:"read_ticket",link:"/docs/reference/expressions/builtins#read_ticket(t%20:%20ticket<T>)"},{keyword:"sapling_empty_state",link:"/docs/reference/expressions/builtins#sapling_empty_state(k%20:%20key_hash)"},{keyword:"slice",link:"/docs/reference/expressions/builtins#slice(s%20:%20T,%20o%20:%20nat,%20l%20:%20nat)"},{keyword:"split_ticket",link:"/docs/reference/expressions/builtins#split_ticket(t%20:%20ticket<T>,%20n1%20:%20nat,%20n2%20:%20nat)"},{keyword:"sub_nat",link:"/docs/reference/expressions/builtins#sub_nat(a%20:%20nat,%20b%20:%20nat)"},{keyword:"voting_power",link:"/docs/reference/expressions/builtins#voting_power(k%20:%20key_hash)"},{keyword:"get_denominator",link:"/docs/reference/expressions/builtins#get_denominator(r%20:%20rational)"}]},never:{desc:r.createElement(S,null),link:"#never",examples:[],tags:[0,1,2,3],michelson:"never",michelson_ref_url:D+"/#type-never",related:[]},operation:{desc:r.createElement("div",null,"Operation generated by contract execution."),link:"#operation",examples:[],tags:[],michelson:"operation",michelson_ref_url:D+"/#type-operation",related:[{keyword:"transfer",link:"/docs/reference/instructions/operation#transfer"},{keyword:"make_operation",link:"/docs/reference/expressions/builtins#make_operation(a%20:%20tez,%20c%20:%20contract<T>,%20arg%20:%20T)"},{keyword:"event",link:"/docs/reference/types#event"}]},option:{desc:r.createElement("div",null,"Optional value, that is either ",r.createElement("code",null,"some")," value of type ",r.createElement("code",null,"T"),", or ",r.createElement("code",null,"none"),"."),link:"#option<T>",parameters:[{keyword:"T",type:"any type",desc:"type of the value when the option is some value"}],examples:["none",'some("abcd")'],tags:[0,1,2,3],michelson:"option",michelson_ref_url:D+"/#type-option",related:[{keyword:"match with",link:"/docs/reference/instructions/control#option"},{keyword:"fail_some",link:"/docs/reference/instructions/divergent#fail_somee--optiont"},{keyword:"update",link:"/docs/reference/instructions/containers#mupdatek--k-o--optiont"},{keyword:"call_view",link:"/docs/reference/expressions/builtins#call_view<T>(a%20:%20address,%20id%20:%20string,%20arg%20:%20X)"},{keyword:"get",link:"/docs/reference/expressions/builtins#get(m%20:%20map<K,%20T>,%20k%20:%20K)"},{keyword:"get_entrypoint",link:"/docs/reference/expressions/builtins#get_entrypoint<T>(s,%20a%20:%20address)"},{keyword:"get_some",link:"/docs/reference/expressions/builtins#get_some(o%20:%20option<T>)"},{keyword:"int_to_nat",link:"/docs/reference/expressions/builtins#int_to_nat(i%20:%20int)"},{keyword:"is_none",link:"/docs/reference/expressions/builtins#is_none(o%20:%20option<T>)"},{keyword:"is_some",link:"/docs/reference/expressions/builtins#is_some(o%20:%20option<T>)"},{keyword:"join_tickets",link:"/docs/reference/expressions/builtins#join_tickets(t1%20:%20ticket<T>,%20t2%20:%20ticket<T>)"},{keyword:"map",link:"/docs/reference/expressions/builtins#map"},{keyword:"none",link:"/docs/reference/expressions/builtins#none<T>"},{keyword:"sapling_verify_update",link:"/docs/reference/expressions/builtins#sapling_verify_update(s,%20t)"},{keyword:"set_delegate",link:"/docs/reference/expressions/builtins#set_delegate(opkh%20:%20option<key_hash>)"},{keyword:"slice",link:"/docs/reference/expressions/builtins#slice(s%20:%20T,%20o%20:%20nat,%20l%20:%20nat)"},{keyword:"some",link:"/docs/reference/expressions/builtins#some(v%20:%20T)"},{keyword:"split_tockets",link:"/docs/reference/expressions/builtins#split_ticket(t%20:%20ticket<T>,%20n1%20:%20nat,%20n2%20:%20nat)"},{keyword:"sub_mutez",link:"/docs/reference/expressions/builtins#sub_mutez(a%20:%20tez,%20b%20:%20tez)"},{keyword:"unpack",link:"/docs/reference/expressions/builtins#unpack<T>(b%20:%20bytes)"},{keyword:"update",link:"/docs/reference/expressions/builtins#update(m%20:%20map<K,%20V>,%20k%20:%20K,%20v%20:%20option<T>)"},{keyword:"match with",link:"/docs/reference/expressions/controls#match-with"},{keyword:"? :",link:"/docs/reference/expressions/controls#a--b--c"},{keyword:"[]",link:"/docs/reference/expressions/asset#ak--asset_keyaf"}]},or:{desc:"Union of two types: its value can either be of the one or the other type (left or right).",link:"#or<T1,%20T2>",parameters:[{keyword:"T1",type:"any type",desc:"left type"},{keyword:"T2",type:"any type",desc:"right type"}],examples:["const o : or<nat, string> = left<string>(2)","const o : or<nat, string> = left<nat, string>(2)",'const o : or<nat, string> = right<nat>("#a56fG")','const o : or<nat, string> = right<nat, string>("#a56fG")'],tags:[0,1,2,3],michelson:"or T1 T2",michelson_ref_url:D+"/#type-or",related:[{keyword:"match with",link:"/docs/reference/instructions/control#or"},{keyword:"fold",link:"/docs/reference/expressions/builtins#fold%20(i%20:%20or<L,%20R>,%20f%20:%20L%20->%20or<L,%20R>)"},{keyword:"left",link:"/docs/reference/expressions/builtins#left<(L,)?%20T>(x%20:%20L)"},{keyword:"open_chest",link:"/docs/reference/expressions/builtins#open_chest(k%20:%20chest_key,%20c%20:%20chest,%20t%20:%20nat)"},{keyword:"right",link:"/docs/reference/expressions/builtins#right<T(,%20R)>(x%20:%20R)"}]},partition:{desc:r.createElement(u,null),link:"#partition<A>",examples:[],tags:[1,2,3],related:[{keyword:"Asset",link:"/docs/asset"},{keyword:"aggregate",link:"/docs/reference/types#aggregate<A>"},{keyword:"asset_view",link:"/docs/reference/types#asset_view<A>"}]},rational:{desc:r.createElement("div",null,"Arbitrary-precision floating point number.",r.createElement("br",null),r.createElement("br",null),"It is implemented in Michelson as a pair of ",r.createElement(a.Z,{to:"/docs/reference/types#int"},r.createElement("code",null,"int"))," and ",r.createElement(a.Z,{to:"/docs/reference/types#nat"},r.createElement("code",null,"nat"),".")),link:"#rational",examples:["1.1","-1.1","1 / 3","-1 / 3","80%","4.2%"],tags:[0,1,2,3],michelson:"pair int nat",related:[{keyword:"+",link:"/docs/reference/expressions/operators/arithmetic#a--b"},{keyword:"-",link:"/docs/reference/expressions/operators/arithmetic#a---b"},{keyword:"-",link:"/docs/reference/expressions/operators/arithmetic#--a"},{keyword:"*",link:"/docs/reference/expressions/operators/arithmetic#a--b-1"},{keyword:"/",link:"/docs/reference/expressions/operators/arithmetic#a--b-2"},{keyword:"=",link:"/docs/reference/expressions/operators/arithmetic#a--b-7"},{keyword:"<>",link:"/docs/reference/expressions/operators/arithmetic#a--b-8"},{keyword:"<",link:"/docs/reference/expressions/operators/arithmetic#a--b-9"},{keyword:"<=",link:"/docs/reference/expressions/operators/arithmetic#a--b-10"},{keyword:">",link:"/docs/reference/expressions/operators/arithmetic#a--b-11"},{keyword:">=",link:"/docs/reference/expressions/operators/arithmetic#a--b-12"},{keyword:"<=>",link:"/docs/reference/expressions/operators/arithmetic#a--b-13"},{keyword:"+=",link:"/docs/reference/instructions/assignment#a--b-1"},{keyword:"-=",link:"/docs/reference/instructions/assignment#a---b"},{keyword:"*=",link:"/docs/reference/instructions/assignment#a--b-2"},{keyword:"/=",link:"/docs/reference/instructions/assignment#a--b-3"},{keyword:"abs",link:"/docs/reference/expressions/builtins#abs(t%20:%20T)"},{keyword:"ceil",link:"/docs/reference/expressions/builtins#ceil(r%20:%20rational)"},{keyword:"floor",link:"/docs/reference/expressions/builtins#floor(r%20:%20rational)"},{keyword:"simplify_rational",link:"/docs/reference/expressions/builtins#simplify_rational(r%20:%20rational)"},{keyword:"get_numerator",link:"/docs/reference/expressions/builtins#get_numerator(r%20:%20rational)"},{keyword:"get_denominator",link:"/docs/reference/expressions/builtins#get_denominator(r%20:%20rational)"}]},record:{desc:r.createElement("div",null,"Fixed list of named fields of different types.",r.createElement("br",null),r.createElement("br",null),"A record has the common ",r.createElement(a.Z,{to:"/docs/language-basics/types#properties"},"properties")," of its fields."),link:"#record",examples:["{ red = 0xa4; green = 0x6a; blue = 0xc0 }"],tags:[],related:[{keyword:"Record",link:"/docs/language-basics/composite#record"},{keyword:":=",link:"/docs/reference/instructions/assignment#record"},{keyword:"+=",link:"/docs/reference/instructions/assignment#a--b-1"},{keyword:"-=",link:"/docs/reference/instructions/assignment#a---b"},{keyword:"*=",link:"/docs/reference/instructions/assignment#a--b-2"},{keyword:"/=",link:"/docs/reference/instructions/assignment#a--b-3"},{keyword:"&=",link:"/docs/reference/instructions/assignment#a--b-4"},{keyword:"|=",link:"/docs/reference/instructions/assignment#a--b-5"},{keyword:"{ with }",link:"/docs/reference/expressions/operators/copy"},{keyword:".",link:"/docs/reference/expressions/operators/access#ab-1"}],michelson:"pair",michelson_ref_url:D+"/#type-pair"},sapling_state:{desc:"Sapling state.",link:"#sapling_state(n)",examples:[],parameters:[{keyword:"n",type:"natural number",desc:"Memo size"}],tags:[1,2],michelson:"sapling_state",michelson_ref_url:D+"/#type-sapling_state",related:[{keyword:"Sapling",link:"/docs/language-basics/crypto#sapling"},{keyword:"sapling_empty_state",link:"/docs/reference/expressions/builtins#sapling_empty_state(k%20:%20key_hash)"},{keyword:"sapling_verify_update",link:"/docs/reference/expressions/builtins#sapling_verify_update(s,%20t)"}]},sapling_transaction:{desc:"Sapling transaction.",link:"#sapling_transaction(n)",examples:[],parameters:[{keyword:"n",type:"natural number",desc:"Memo size"}],tags:[1,2,3],michelson:"sapling_transaction",michelson_ref_url:D+"/#type-sapling_transaction",related:[{keyword:"Sapling",link:"/docs/language-basics/crypto#sapling"},{keyword:"sapling_empty_state",link:"/docs/reference/expressions/builtins#sapling_empty_state(k%20:%20key_hash)"},{keyword:"sapling_verify_update",link:"/docs/reference/expressions/builtins#sapling_verify_update(s,%20t)"}]},set:{desc:r.createElement("div",null,"Set of values of ",r.createElement(a.Z,{to:"/docs/language-basics/types#comparable"},"comparable")," type ",r.createElement("code",null,"T"),". It can be iterated with ",r.createElement(a.Z,{to:"/docs/reference/instructions/control#set"},r.createElement("code",null,"for"))," in ",r.createElement("code",null,"T"),"'s natural order."),link:"#set<T>",examples:["[ tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb; tz1aSkwEot3L2kmUvcoxzjMomb9mvBNuzFK6]"],tags:[1,2,3],michelson:"set",michelson_ref_url:D+"/#type-set",related:[{keyword:"Set",link:"/docs/language-basics/container#set"},{keyword:"for",link:"/docs/reference/instructions/control#for"},{keyword:"add",link:"/docs/reference/instructions/containers#sadde"},{keyword:"remove",link:"/docs/reference/instructions/containers#sremovee"},{keyword:"add",link:"/docs/reference/expressions/builtins#add(s%20:%20set<T>,%20e%20:%20T)"},{keyword:"contains",link:"/docs/reference/expressions/builtins#contains(c%20:%20C,%20e%20:%20T)"},{keyword:"length",link:"/docs/reference/expressions/builtins#length(o%20:%20T)"},{keyword:"remove",link:"/docs/reference/expressions/builtins#remove(c%20:%20C,%20i%20:%20T)"},{keyword:"make_set",link:"/docs/reference/expressions/builtins#make_set<T>(s)"}]},signature:{desc:"Cryptographic signature.",link:"#signature",examples:['"edsigtvwtJaiM7phNNkZjazqKtthDxc3WswYNL961GKgz7VxvPJmWJ8WEkmEZd9oFM1RvwABYW3uYgwGRP7nuBns5WrqyfYsUaB"'],tags:[0,1,2,3],michelson:"signature",michelson_ref_url:D+"/#type-signature",related:[{keyword:"Signature",link:"/docs/language-basics/crypto#signature"},{keyword:"check_signature",link:"/docs/reference/expressions/builtins#check_signature(k%20:%20key,%20s%20:%20signature,%20b%20:%20bytes)"}]},string:{desc:"Array of non-extended ASCII characters.",link:"#string",examples:['"This is a string"','"12345"'],tags:[0,1,2,3],michelson:"string",michelson_ref_url:D+"/#type-string",related:[{keyword:"+",link:"/docs/reference/expressions/operators/arithmetic#a--b"},{keyword:"concat",link:"/docs/reference/expressions/builtins#concat"},{keyword:"length",link:"/docs/reference/expressions/builtins#length(o%20:%20T)"},{keyword:"nat_to_string",link:"/docs/reference/expressions/builtins#nat_to_string(n%20:%20nat)"},{keyword:"slice",link:"/docs/reference/expressions/builtins#slice(s%20:%20T,%20o%20:%20nat,%20l%20:%20nat)"},{keyword:"call_view",link:"/docs/reference/expressions/builtins#call_view<T>(a%20:%20address,%20id%20:%20string,%20arg%20:%20X)"},{keyword:"get_entrypoint",link:"/docs/reference/expressions/builtins#get_entrypoint<T>(s,%20a%20:%20address)"}]},tez:{desc:r.createElement("div",null,"Tezos currency in mutez (millionth of XTZ); several literal units are provided:",r.createElement("ul",null,r.createElement("li",null,r.createElement("code",null,"1tz")," is 1000000 mutez"),r.createElement("li",null,r.createElement("code",null,"1mtz")," is 1000 mutez"),r.createElement("li",null,r.createElement("code",null,"1utz")," is 1 mutez")),"For ",r.createElement("code",null,"tz")," and ",r.createElement("code",null,"mtz")," it is possible to use floating point literals with a maximum of respectively 6 and 3 decimal places; hence ",r.createElement("code",null,"1.5324235tz")," and ",r.createElement("code",null,"1.5324mtz")," are not valid."),link:"#tez",examples:["1tz","1mtz","1utz","1.23tz","1.2mtz"],tags:[0,1,2,3],michelson:"mutez",michelson_ref_url:D+"/#type-mutez",related:[{keyword:"+",link:"/docs/reference/expressions/operators/arithmetic#a--b"},{keyword:"-",link:"/docs/reference/expressions/operators/arithmetic#a---b"},{keyword:"*",link:"/docs/reference/expressions/operators/arithmetic#a--b-1"},{keyword:"/",link:"/docs/reference/expressions/operators/arithmetic#a--b-2"},{keyword:"div",link:"/docs/reference/expressions/operators/arithmetic#a-div-b"},{keyword:"%",link:"/docs/reference/expressions/operators/arithmetic#a--b-3"},{keyword:"=",link:"/docs/reference/expressions/operators/arithmetic#a--b-7"},{keyword:"<>",link:"/docs/reference/expressions/operators/arithmetic#a--b-8"},{keyword:"<",link:"/docs/reference/expressions/operators/arithmetic#a--b-9"},{keyword:"<=",link:"/docs/reference/expressions/operators/arithmetic#a--b-10"},{keyword:">",link:"/docs/reference/expressions/operators/arithmetic#a--b-11"},{keyword:">=",link:"/docs/reference/expressions/operators/arithmetic#a--b-12"},{keyword:"<=>",link:"/docs/reference/expressions/operators/arithmetic#a--b-13"},{keyword:"+=",link:"/docs/reference/instructions/assignment#a--b-1"},{keyword:"mutez_to_nat",link:"/docs/reference/expressions/builtins#mutez_to_nat(v%20:%20tez)"},{keyword:"sub_mutez",link:"/docs/reference/expressions/builtins#sub_mutez(a%20:%20tez,%20b%20:%20tez)"},{keyword:"make_operation",link:"/docs/reference/expressions/builtins#make_operation(a%20:%20tez,%20c%20:%20contract<T>,%20arg%20:%20T)"}]},ticket:{desc:"Contract-authenticated data.",link:"#ticket<T>",examples:[],parameters:[{keyword:"T",type:"any type",desc:"type of the value held by the ticket"}],tags:[1,2],michelson:"ticket",michelson_ref_url:D+"/#type-ticket",related:[{keyword:"detach",link:"/docs/reference/instructions/localvariable#detach-as"},{keyword:"create_ticket",link:"/docs/reference/expressions/builtins#create_ticket(s%20:%20T,%20n%20:%20nat)"},{keyword:"join_tickets",link:"/docs/reference/expressions/builtins#join_tickets(t1%20:%20ticket<T>,%20t2%20:%20ticket<T>)"},{keyword:"read_ticket",link:"/docs/reference/expressions/builtins#read_ticket(t%20:%20ticket<T>)"},{keyword:"split_ticket",link:"/docs/reference/expressions/builtins#split_ticket(t%20:%20ticket<T>,%20n1%20:%20nat,%20n2%20:%20nat)"}]},tuple:{desc:"Fixed list of anonymous values of different types.",link:"#tuple",examples:['("a string", 3)',"(0x22, none)"],tags:[0,1,2,3],michelson:"pair",michelson_ref_url:D+"/#type-pair",related:[{keyword:"Tuple",link:"/docs/language-basics/composite#tuple"},{keyword:":=",link:"/docs/reference/instructions/assignment#record",desc:"Assigns a value to a tuple dimension"},{keyword:"+=",link:"/docs/reference/instructions/assignment#a--b-1",desc:"Increments a tuple dimension"},{keyword:"-=",link:"/docs/reference/instructions/assignment#a---b",desc:"Decrement a tuple dimension"},{keyword:"*=",link:"/docs/reference/instructions/assignment#a--b-2",desc:"Multiplies a tuple dimension"},{keyword:"/=",link:"/docs/reference/instructions/assignment#a--b-3",desc:"Divides a tuple dimension"},{keyword:"&=",link:"/docs/reference/instructions/assignment#a--b-4",desc:"Applies logical conjonction to a tuple dimension"},{keyword:"|=",link:"/docs/reference/instructions/assignment#a--b-5",desc:"Applies logical disjunction to a tuple dimension"},{keyword:"[]",link:"/docs/reference/expressions/operators/access#ab",desc:"Accesses a tuple dimension"}]},unit:{desc:r.createElement("div",null,"Type to express no value, only inhabited by the ",r.createElement("code",null,"Unit")," value."),link:"#unit",examples:["Unit","()"],tags:[0,1,2,3],michelson:"unit",michelson_ref_url:D+"/#type-unit",related:[]}}},2156:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(7294),r=n(1519),l=n(4810),s=n(2321);function i(){return a.createElement(l.Z,{injectFirst:!0},a.createElement(r.Z,{className:s.Z.divider}))}},656:function(e,t,n){n.d(t,{Z:function(){return d}});var a=n(7294),r=n(6886),l=n(5861),s=n(1519),i=n(9960),o=n(4810),c=n(2321);function d(e){return a.createElement(o.Z,{injectFirst:!0},a.createElement(r.ZP,{container:!0,style:{marginBottom:"12px"}},void 0!==e.title?a.createElement(r.ZP,{item:!0,xs:12},a.createElement(l.Z,{style:{fontFamily:"IBM Plex Sans",color:"grey"}},e.title)):a.createElement("div",null),void 0!==e.title?a.createElement(r.ZP,{item:!0,xs:12},a.createElement(s.Z,{className:c.Z.divider,style:{marginBottom:"8px",marginTop:"4px"}})):a.createElement("div",null),a.createElement(r.ZP,{item:!0,xs:12},a.createElement(r.ZP,{container:!0},e.data.map((function(t,n){return a.createElement(r.ZP,{key:"eevi"+n,item:!0,md:e.xs,xs:6,sm:6,style:{marginBottom:"12px"}},a.createElement(i.Z,{to:t.link},a.createElement("code",null,t.label)))}))))))}},5534:function(e,t,n){n.r(t),n.d(t,{assets:function(){return w},contentTitle:function(){return v},default:function(){return N},frontMatter:function(){return _},metadata:function(){return E},toc:function(){return x}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),s=n(656),i="/docs/reference/declarations",o={storage:[{label:"parameter",link:i+"/storage#parameter"},{label:"variable",link:i+"/storage#variable"},{label:"asset",link:i+"/storage#asset"}],types:[{label:"record",link:i+"/compositetypes#record"},{label:"enum",link:i+"/compositetypes#enum"},{label:"states",link:i+"/compositetypes#states"},{label:"event",link:i+"/compositetypes#event"}],inlined:[{label:"constant",link:i+"/inlined#constant"}],entrypoints:[{label:"entry",link:i+"/entrypoint#entry"},{label:"transition",link:i+"/entrypoint#transition"},{label:"getter",link:i+"/entrypoint#getter"}],sections:[{label:"no transfer",link:i+"/entrypoint#no-transfer"},{label:"sourced by",link:i+"/entrypoint#sourced-by"},{label:"called by",link:i+"/entrypoint#called-by"},{label:"state is",link:i+"/entrypoint#state-is"},{label:"require",link:i+"/entrypoint#require"},{label:"fail if",link:i+"/entrypoint#fail-if"},{label:"effect",link:i+"/entrypoint#effect"}],functions:[{label:"function",link:i+"/function"}],views:[{label:"view",link:i+"/view"}]},c=n(8441),d=n(5340),p=n(6912),m=n(264),u=n(9110),k={bracket:{label:"a[b]",link:"tuple"},dot:{label:"a.b",link:"record"}},y={with:{label:"{ with }",link:"-with-"}},b=n(2659),f=n(8864),h=n(6886),g=["components"],_={},v="Reference",E={unversionedId:"reference/index",id:"reference/index",title:"Reference",description:"This is the Archetype language reference.",source:"@site/docs/reference/index.md",sourceDirName:"reference",slug:"/reference/",permalink:"/docs/reference/",draft:!1,editUrl:"https://github.com/completium/archetype-docs/blob/main/docs/reference/index.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"State Machine",permalink:"/docs/statemachine"},next:{title:"Identifier",permalink:"/docs/reference/declarations/identifier"}},w={},x=[{value:"Declarations",id:"declarations",level:2},{value:"Types",id:"types",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Expressions",id:"expressions",level:2}],T={toc:x};function N(e){var t=e.components,n=(0,r.Z)(e,g);return(0,l.kt)("wrapper",(0,a.Z)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"reference"},"Reference"),(0,l.kt)("p",null,"This is the Archetype language reference."),(0,l.kt)("h2",{id:"declarations"},"Declarations"),(0,l.kt)(h.ZP,{container:!0,mdxType:"Grid"},(0,l.kt)(h.ZP,{item:!0,md:4,xs:12,sm:12,mdxType:"Grid"},(0,l.kt)(s.Z,{title:"Storage",data:o.storage,xs:4,mdxType:"EagleEyeView"})),(0,l.kt)(h.ZP,{item:!0,md:8,xs:12,sm:12,mdxType:"Grid"},(0,l.kt)(s.Z,{title:"Composite types",data:o.types,xs:3,mdxType:"EagleEyeView"})),(0,l.kt)(h.ZP,{item:!0,md:4,xs:12,sm:12,mdxType:"Grid"},(0,l.kt)(s.Z,{title:"Inlined",data:o.inlined,xs:4,mdxType:"EagleEyeView"})),(0,l.kt)(h.ZP,{item:!0,md:8,xs:12,sm:12,mdxType:"Grid"},(0,l.kt)(s.Z,{title:"Entrypoints",data:o.entrypoints,xs:3,mdxType:"EagleEyeView"}))),(0,l.kt)(s.Z,{title:"Sections",data:o.sections,xs:4,mdxType:"EagleEyeView"}),(0,l.kt)(h.ZP,{container:!0,mdxType:"Grid"},(0,l.kt)(h.ZP,{item:!0,md:4,xs:12,sm:12,mdxType:"Grid"},(0,l.kt)(s.Z,{title:"Functions",data:o.functions,xs:4,mdxType:"EagleEyeView"})),(0,l.kt)(h.ZP,{item:!0,md:8,xs:12,sm:12,mdxType:"Grid"},(0,l.kt)(s.Z,{title:"Views",data:o.views,xs:3,mdxType:"EagleEyeView"}))),(0,l.kt)("h2",{id:"types"},"Types"),(0,l.kt)(s.Z,{data:Object.entries(d.V5).map((function(e){var t=e[0];e[1];return{label:t,link:"/docs/reference/types"+d.V5[t].link}})),xs:4,mdxType:"EagleEyeView"}),(0,l.kt)("h2",{id:"instructions"},"Instructions"),(0,l.kt)(h.ZP,{container:!0,mdxType:"Grid"},(0,l.kt)(h.ZP,{item:!0,md:4,xs:12,sm:12,mdxType:"Grid"},(0,l.kt)(s.Z,{title:"Sequence",data:c.N.sequence,xs:6,mdxType:"EagleEyeView"})),(0,l.kt)(h.ZP,{item:!0,md:8,xs:12,sm:12,mdxType:"Grid"},(0,l.kt)(s.Z,{title:"Local variable",data:c.N.localvar,xs:3,mdxType:"EagleEyeView"}))),(0,l.kt)(s.Z,{title:"Assignment",data:c.N.assignments,xs:1,mdxType:"EagleEyeView"}),(0,l.kt)(s.Z,{title:"Control",data:c.N.controls,xs:2,mdxType:"EagleEyeView"}),(0,l.kt)(s.Z,{title:"Divergent",data:c.N.divergent,xs:2,mdxType:"EagleEyeView"}),(0,l.kt)(h.ZP,{container:!0,mdxType:"Grid"},(0,l.kt)(h.ZP,{item:!0,md:6,xs:12,sm:12,mdxType:"Grid"},(0,l.kt)(s.Z,{title:"Set",data:c.N.sets,xs:4,mdxType:"EagleEyeView"})),(0,l.kt)(h.ZP,{item:!0,md:6,xs:12,sm:12,mdxType:"Grid"},(0,l.kt)(s.Z,{title:"List",data:c.N.lists,xs:4,mdxType:"EagleEyeView"}))),(0,l.kt)(s.Z,{title:"Map",data:c.N.maps,xs:2,mdxType:"EagleEyeView"}),(0,l.kt)(s.Z,{title:"Asset",data:c.N.assets,xs:2,mdxType:"EagleEyeView"}),(0,l.kt)(s.Z,{title:"Operation",data:c.N.blockchain,xs:4,mdxType:"EagleEyeView"}),(0,l.kt)("h2",{id:"expressions"},"Expressions"),(0,l.kt)(s.Z,{title:"Constants",data:Object.entries(p._).map((function(e){var t=e[0];e[1];return{label:t,link:"/docs/reference/expressions/constants#"+t}})),xs:4,mdxType:"EagleEyeView"}),(0,l.kt)(s.Z,{title:"Variables",data:Object.entries(m.R).map((function(e){var t=e[0];e[1];return{label:t,link:"/docs/reference/expressions/variables#"+t}})),xs:4,mdxType:"EagleEyeView"}),(0,l.kt)(s.Z,{title:"Access operators",data:Object.entries(k).map((function(e){var t=e[0];e[1];return{label:k[t].label,link:"/docs/reference/expressions/operators/access#"+k[t].link}})),xs:4,mdxType:"EagleEyeView"}),(0,l.kt)(s.Z,{title:"Copy operators",data:Object.entries(y).map((function(e){var t=e[0];e[1];return{label:y[t].label,link:"/docs/reference/expressions/operators/copy#"+y[t].link}})),xs:4,mdxType:"EagleEyeView"}),(0,l.kt)(s.Z,{title:"Arithmetic operators",data:Object.entries(u.G).map((function(e){var t=e[0];e[1];return{label:u.G[t].label,link:"/docs/reference/expressions/operators/arithmetic#"+u.G[t].link}})),xs:4,mdxType:"EagleEyeView"}),(0,l.kt)(s.Z,{title:"Builtins",data:Object.entries(b.Q).sort().map((function(e){var t=e[0],n=e[1];return{label:n.index?n.index:t,link:"/docs/reference/expressions/builtins#"+(0,b.H)(n.sig)}})),xs:4,mdxType:"EagleEyeView"}),(0,l.kt)(s.Z,{title:"Control",data:f.m.controls,xs:4,mdxType:"EagleEyeView"}),(0,l.kt)(s.Z,{title:"Declaration",data:f.m.declaration,xs:4,mdxType:"EagleEyeView"}),(0,l.kt)(s.Z,{title:"Asset",data:f.m.asset,xs:4,mdxType:"EagleEyeView"}))}N.isMDXComponent=!0},2321:function(e,t){t.Z={divider:"divider_LuCZ",gradient:"gradient_kJ7D"}}}]);