"use strict";(self.webpackChunkarchetype_docs=self.webpackChunkarchetype_docs||[]).push([[5670],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(f,o(o({ref:t},s),{},{components:n})):a.createElement(f,o({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6792:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:1},c="Local variable",p={unversionedId:"reference/instructions/localvariable",id:"reference/instructions/localvariable",title:"Local variable",description:"Instructions presented below declare a local variable in entrypoints' effect section.",source:"@site/docs/reference/instructions/localvariable.md",sourceDirName:"reference/instructions",slug:"/reference/instructions/localvariable",permalink:"/docs/reference/instructions/localvariable",draft:!1,editUrl:"https://github.com/completium/archetype-docs/blob/main/docs/reference/instructions/localvariable.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"Sequence",permalink:"/docs/reference/instructions/sequence"},next:{title:"Assignment",permalink:"/docs/reference/instructions/assignment"}},s={},u=[{value:"<code>var</code>",id:"var",level:2},{value:"<code>const</code>",id:"const",level:2},{value:"<code>?=</code> (get option, assign or fail)",id:"-get-option-assign-or-fail",level:2},{value:"Explicit error",id:"explicit-error",level:3}],m={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"local-variable"},"Local variable"),(0,i.kt)("p",null,"Instructions presented below declare a ",(0,i.kt)("em",{parentName:"p"},"local")," variable in entrypoints' ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/declarations/entrypoint#effect"},"effect")," section."),(0,i.kt)("h2",{id:"var"},(0,i.kt)("inlineCode",{parentName:"h2"},"var")),(0,i.kt)("p",null,"A local variable is declared by the ",(0,i.kt)("inlineCode",{parentName:"p"},"var")," keyword followed by the variable ",(0,i.kt)("a",{parentName:"p",href:"docs/reference/declarations/identifier"},"identifier")," and the initial value."),(0,i.kt)("p",null,"For example, the following declares a variable ",(0,i.kt)("inlineCode",{parentName:"p"},"counter")," with initial value ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"var counter = 0\n")),(0,i.kt)("p",null,"It is possible to specify the variable type:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"var counter : nat = 0\n")),(0,i.kt)("p",null,"Specifying the type is ususally optional as the typer may ",(0,i.kt)("em",{parentName:"p"},"infer")," the type of the initial value. It is mandatory though for some types like ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#or%3CT1,%20T2%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"or")),", or some literals like ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#option%3CT%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"none"))," or ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#list%3CT%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"[]")),"."),(0,i.kt)("h2",{id:"const"},(0,i.kt)("inlineCode",{parentName:"h2"},"const")),(0,i.kt)("p",null,"Similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"var")," except that a ",(0,i.kt)("inlineCode",{parentName:"p"},"const")," local variable ",(0,i.kt)("em",{parentName:"p"},"cannot")," be modified by an ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/instructions/assignment"},"assignment")," instruction."),(0,i.kt)("p",null,"For example, the following instructions generates a compilation error:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"const amount = 10tz;\namount += 1tz        /* compilation error */\n")),(0,i.kt)("h2",{id:"-get-option-assign-or-fail"},(0,i.kt)("inlineCode",{parentName:"h2"},"?=")," (get option, assign or fail)"),(0,i.kt)("p",null,"It is possible to declare a local variable (",(0,i.kt)("inlineCode",{parentName:"p"},"const")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"var"),") as the ",(0,i.kt)("inlineCode",{parentName:"p"},"some")," value of an ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#option%3CT%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"option"))," variable, and fail with an error message if this variable is ",(0,i.kt)("inlineCode",{parentName:"p"},"none"),"."),(0,i.kt)("p",null,"For example, the following declares a ",(0,i.kt)("inlineCode",{parentName:"p"},"const")," local variable as the some value of the execution of ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/expressions/builtins#unpack%3CT%3E(b%20:%20bytes)"},(0,i.kt)("inlineCode",{parentName:"a"},"unpack"))," buitlin which returns an option value:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"const v ?= unpack<nat>(0x0505)\n")),(0,i.kt)("p",null,"By default, it fails with ",(0,i.kt)("inlineCode",{parentName:"p"},'"OPTION_IS_NONE"'),"."),(0,i.kt)("p",null,"It is equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'const v = 0;\nmatch unpack<nat>(0x0505) with\n| some(u) -> v := u\n| none    -> fail("OPTION_IS_NONE")\nend\n')),(0,i.kt)("h3",{id:"explicit-error"},"Explicit error"),(0,i.kt)("p",null,"It is possible to declare an explicit error message after the ",(0,i.kt)("inlineCode",{parentName:"p"},":")," character. The error message may be any ",(0,i.kt)("a",{parentName:"p",href:"/docs/language-basics/types#packable"},"packable")," value (not just a ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#string"},(0,i.kt)("inlineCode",{parentName:"a"},"string")),")."),(0,i.kt)("p",null,"For example, suppose ",(0,i.kt)("inlineCode",{parentName:"p"},"m")," is a ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/types#map%3CK,%20V%3E"},(0,i.kt)("inlineCode",{parentName:"a"},"map"))," of type ",(0,i.kt)("inlineCode",{parentName:"p"},"map<T, nat>"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'var v ?= m[k] : ("KEY_NOT_FOUND", k)\n')),(0,i.kt)("p",null,"The above declaration fails with pair ",(0,i.kt)("inlineCode",{parentName:"p"},'("KEY_NOT_FOUND", k)'),". It is equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'var v = 0;\nmatch m[k] with\n| some(u) -> v := u\n| none    -> fail(("KEY_NOT_FOUND", k))\nend\n')))}d.isMDXComponent=!0}}]);