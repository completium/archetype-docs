"use strict";(self.webpackChunkarchetype_docs=self.webpackChunkarchetype_docs||[]).push([[9513],{700:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=t(7462),d=(t(7294),t(3905)),a=t(6886);const n=[{id:"added"},{id:"aggregate"},{id:"and"},{id:"any"},{id:"archetype"},{id:"as"},{id:"assert"},{id:"asset"},{id:"asset_view"},{id:"at"},{id:"before"},{id:"begin"},{id:"big_map"},{id:"but"},{id:"by"},{id:"call"},{id:"called"},{id:"call_view"},{id:"const"},{id:"constant"},{id:"contract"},{id:"definition"},{id:"div"},{id:"do"},{id:"do_fail_if"},{id:"done"},{id:"do_require"},{id:"effect"},{id:"else"},{id:"emit"},{id:"emptylist"},{id:"end"},{id:"entry"},{id:"entrypoint"},{id:"enum"},{id:"event"},{id:"exists"},{id:"extension"},{id:"fail"},{id:"fail if"},{id:"fails"},{id:"false"},{id:"fold"},{id:"for"},{id:"forall"},{id:"from"},{id:"function"},{id:"getter"},{id:"identified"},{id:"if"},{id:"in"},{id:"initial"},{id:"initialized"},{id:"invariant"},{id:"iter"},{id:"label"},{id:"lambda"},{id:"left"},{id:"let"},{id:"list"},{id:"map"},{id:"match"},{id:"namespace"},{id:"none"},{id:"not"},{id:"on"},{id:"option"},{id:"or"},{id:"otherwise"},{id:"partition"},{id:"asset_key"},{id:"postcondition"},{id:"predicate"},{id:"record"},{id:"ref"},{id:"removed"},{id:"require"},{id:"require_entrypoint"},{id:"return"},{id:"right"},{id:"sapling_state"},{id:"sapling_transaction"},{id:"security"},{id:"self"},{id:"set"},{id:"shadow"},{id:"some"},{id:"sorted"},{id:"sourced"},{id:"specification"},{id:"states"},{id:"then"},{id:"ticket"},{id:"to"},{id:"transfer"},{id:"transition"},{id:"true"},{id:"type"},{id:"unmoved"},{id:"unpack"},{id:"Unit"},{id:"use"},{id:"var"},{id:"variable"},{id:"view"},{id:"when"},{id:"while"},{id:"with"},{id:"xor"}],o={sidebar_position:0},s="Identifier",c={unversionedId:"reference/declarations/identifier",id:"reference/declarations/identifier",title:"Identifier",description:"The identifier of a contract element (parameter, variable, entrypoint, ...) is a string that starts with an alphabetic character (lower or upper case) followed by a string of alphanumeric characters (lower or upper case) or underscores. The maximum size of an identifier is 254. That is to say that an identifier verifies the following regular expression:",source:"@site/docs/reference/declarations/identifier.md",sourceDirName:"reference/declarations",slug:"/reference/declarations/identifier",permalink:"/docs/reference/declarations/identifier",draft:!1,editUrl:"https://github.com/completium/archetype-docs/blob/main/docs/reference/declarations/identifier.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"docs",previous:{title:"Reference",permalink:"/docs/reference/"},next:{title:"Archetype contract",permalink:"/docs/reference/declarations/contract"}},l={},p=[{value:"Keywords",id:"keywords",level:3}],f={toc:p};function m(e){let{components:i,...t}=e;return(0,d.kt)("wrapper",(0,r.Z)({},f,t,{components:i,mdxType:"MDXLayout"}),(0,d.kt)("h1",{id:"identifier"},"Identifier"),(0,d.kt)("p",null,"The identifier of a contract element (",(0,d.kt)("a",{parentName:"p",href:"/docs/reference/declarations/storage#parameter"},"parameter"),", ",(0,d.kt)("a",{parentName:"p",href:"/docs/reference/declarations/storage#variable"},"variable"),", ",(0,d.kt)("a",{parentName:"p",href:"/docs/reference/declarations/entrypoint"},"entrypoint"),", ...) is a string that starts with an alphabetic character (lower or upper case) followed by a string of alphanumeric characters (lower or upper case) or underscores. The maximum size of an identifier is 254. That is to say that an identifier verifies the following regular expression:"),(0,d.kt)("p",null,(0,d.kt)("inlineCode",{parentName:"p"},"([A-Za-z][A-Za-z0-9_]*){1,254}")),(0,d.kt)("h3",{id:"keywords"},"Keywords"),(0,d.kt)("p",null,"A keyword is a reserved identifier that cannot be used as identifier, unless it is prefixed by the ",(0,d.kt)("inlineCode",{parentName:"p"},"%")," character."),(0,d.kt)("p",null,"For example, ",(0,d.kt)("a",{parentName:"p",href:"/docs/reference/instructions/operation#transfer"},(0,d.kt)("inlineCode",{parentName:"a"},"transfer"))," is the builtin instruction to call an external contract; in order to declare an entrypoint named ",(0,d.kt)("inlineCode",{parentName:"p"},"transfer"),", prefix it with ",(0,d.kt)("inlineCode",{parentName:"p"},"%"),":"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-archetype"},"entry %transfer() {\n  /* ... */\n}\n")),(0,d.kt)("p",null,"Below is the list of the language keywords."),(0,d.kt)(a.ZP,{container:!0,spacing:2,mdxType:"Grid"},n.map(((e,i)=>(0,d.kt)(a.ZP,{item:!0,key:"kw"+i,mdxType:"Grid"},(0,d.kt)("code",null,e.id))))))}m.isMDXComponent=!0}}]);